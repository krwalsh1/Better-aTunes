package net.sourceforge.atunes.randoop;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        net.sourceforge.atunes.model.PlayerEngineCapability playerEngineCapability0 = net.sourceforge.atunes.model.PlayerEngineCapability.STREAMING;
        org.junit.Assert.assertTrue("'" + playerEngineCapability0 + "' != '" + net.sourceforge.atunes.model.PlayerEngineCapability.STREAMING + "'", playerEngineCapability0.equals(net.sourceforge.atunes.model.PlayerEngineCapability.STREAMING));
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        net.sourceforge.atunes.model.GenericImageSize genericImageSize0 = net.sourceforge.atunes.model.GenericImageSize.SMALL;
        org.junit.Assert.assertTrue("'" + genericImageSize0 + "' != '" + net.sourceforge.atunes.model.GenericImageSize.SMALL + "'", genericImageSize0.equals(net.sourceforge.atunes.model.GenericImageSize.SMALL));
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.getLinux();
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.LINUX + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.LINUX));
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./title" + "'", str1, "./title");
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty0 = net.sourceforge.atunes.model.AudioObjectProperty.FAVORITE;
        org.junit.Assert.assertTrue("'" + audioObjectProperty0 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.FAVORITE + "'", audioObjectProperty0.equals(net.sourceforge.atunes.model.AudioObjectProperty.FAVORITE));
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.lang.String str0 = net.sourceforge.atunes.model.IProxyBean.HTTP_PROXY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "HTTP_PROXY" + "'", str0, "HTTP_PROXY");
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.LINUX;
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.LINUX + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.LINUX));
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        net.sourceforge.atunes.model.PlaybackState playbackState0 = net.sourceforge.atunes.model.PlaybackState.RESUMING;
        org.junit.Assert.assertTrue("'" + playbackState0 + "' != '" + net.sourceforge.atunes.model.PlaybackState.RESUMING + "'", playbackState0.equals(net.sourceforge.atunes.model.PlaybackState.RESUMING));
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        net.sourceforge.atunes.model.LocalAudioObjectFormat localAudioObjectFormat0 = net.sourceforge.atunes.model.LocalAudioObjectFormat.REAL_1;
        org.junit.Assert.assertTrue("'" + localAudioObjectFormat0 + "' != '" + net.sourceforge.atunes.model.LocalAudioObjectFormat.REAL_1 + "'", localAudioObjectFormat0.equals(net.sourceforge.atunes.model.LocalAudioObjectFormat.REAL_1));
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.getSolaris();
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.SOLARIS + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.SOLARIS));
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        net.sourceforge.atunes.model.ArtistViewMode artistViewMode0 = net.sourceforge.atunes.model.ArtistViewMode.ARTIST;
        org.junit.Assert.assertTrue("'" + artistViewMode0 + "' != '" + net.sourceforge.atunes.model.ArtistViewMode.ARTIST + "'", artistViewMode0.equals(net.sourceforge.atunes.model.ArtistViewMode.ARTIST));
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.ALBUM_ARTIST;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.ALBUM_ARTIST + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.ALBUM_ARTIST));
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException0 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        java.lang.String str1 = inconsistentRepositoryException0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str1, "net.sourceforge.atunes.model.InconsistentRepositoryException");
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.getMacOSX();
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.MACOSX + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.MACOSX));
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty0 = net.sourceforge.atunes.model.AudioObjectProperty.NO_PROPERTIES;
        org.junit.Assert.assertTrue("'" + audioObjectProperty0 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NO_PROPERTIES + "'", audioObjectProperty0.equals(net.sourceforge.atunes.model.AudioObjectProperty.NO_PROPERTIES));
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        net.sourceforge.atunes.model.GenericImageSize genericImageSize0 = net.sourceforge.atunes.model.GenericImageSize.BIG;
        org.junit.Assert.assertTrue("'" + genericImageSize0 + "' != '" + net.sourceforge.atunes.model.GenericImageSize.BIG + "'", genericImageSize0.equals(net.sourceforge.atunes.model.GenericImageSize.BIG));
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        net.sourceforge.atunes.model.PlaybackState playbackState0 = net.sourceforge.atunes.model.PlaybackState.STOPPED;
        org.junit.Assert.assertTrue("'" + playbackState0 + "' != '" + net.sourceforge.atunes.model.PlaybackState.STOPPED + "'", playbackState0.equals(net.sourceforge.atunes.model.PlaybackState.STOPPED));
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.TITLE;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.TITLE + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.TITLE));
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.LYRICS;
        java.lang.Class<?> wildcardClass1 = textTagAttribute0.getClass();
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.LYRICS + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.LYRICS));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        net.sourceforge.atunes.model.PlayerEngineCapability playerEngineCapability0 = net.sourceforge.atunes.model.PlayerEngineCapability.EQUALIZER;
        org.junit.Assert.assertTrue("'" + playerEngineCapability0 + "' != '" + net.sourceforge.atunes.model.PlayerEngineCapability.EQUALIZER + "'", playerEngineCapability0.equals(net.sourceforge.atunes.model.PlayerEngineCapability.EQUALIZER));
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        net.sourceforge.atunes.model.PlaybackState playbackState0 = net.sourceforge.atunes.model.PlaybackState.PLAY_INTERRUPTED;
        org.junit.Assert.assertTrue("'" + playbackState0 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_INTERRUPTED + "'", playbackState0.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_INTERRUPTED));
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        net.sourceforge.atunes.model.SubmissionState submissionState0 = net.sourceforge.atunes.model.SubmissionState.NOT_SUBMITTED;
        org.junit.Assert.assertTrue("'" + submissionState0 + "' != '" + net.sourceforge.atunes.model.SubmissionState.NOT_SUBMITTED + "'", submissionState0.equals(net.sourceforge.atunes.model.SubmissionState.NOT_SUBMITTED));
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = applicationVersion9.compareTo(applicationVersion11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.GENRE;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.GENRE + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.GENRE));
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.DISC_NUMBER;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.DISC_NUMBER + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.DISC_NUMBER));
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty0 = net.sourceforge.atunes.model.AudioObjectProperty.DOWNLOADED_ENTRY;
        org.junit.Assert.assertTrue("'" + audioObjectProperty0 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.DOWNLOADED_ENTRY + "'", audioObjectProperty0.equals(net.sourceforge.atunes.model.AudioObjectProperty.DOWNLOADED_ENTRY));
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.ARTIST;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.ARTIST + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.ARTIST));
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        net.sourceforge.atunes.model.PlayerEngineCapability playerEngineCapability0 = net.sourceforge.atunes.model.PlayerEngineCapability.EQUALIZER_CHANGE;
        org.junit.Assert.assertTrue("'" + playerEngineCapability0 + "' != '" + net.sourceforge.atunes.model.PlayerEngineCapability.EQUALIZER_CHANGE + "'", playerEngineCapability0.equals(net.sourceforge.atunes.model.PlayerEngineCapability.EQUALIZER_CHANGE));
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        net.sourceforge.atunes.model.GenericImageSize genericImageSize0 = net.sourceforge.atunes.model.GenericImageSize.MEDIUM;
        org.junit.Assert.assertTrue("'" + genericImageSize0 + "' != '" + net.sourceforge.atunes.model.GenericImageSize.MEDIUM + "'", genericImageSize0.equals(net.sourceforge.atunes.model.GenericImageSize.MEDIUM));
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 10, 100 };
        java.util.ArrayList<java.lang.Integer> intList22 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        cDMetadata0.setTracks((java.util.List<java.lang.Integer>) intList22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.ALBUM;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.ALBUM + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.ALBUM));
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        net.sourceforge.atunes.model.RankList<java.lang.Class<?>> wildcardClassRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Class<?>>();
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        net.sourceforge.atunes.model.LocalAudioObjectFormat localAudioObjectFormat0 = net.sourceforge.atunes.model.LocalAudioObjectFormat.MP4_1;
        org.junit.Assert.assertTrue("'" + localAudioObjectFormat0 + "' != '" + net.sourceforge.atunes.model.LocalAudioObjectFormat.MP4_1 + "'", localAudioObjectFormat0.equals(net.sourceforge.atunes.model.LocalAudioObjectFormat.MP4_1));
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.MACOSX;
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.MACOSX + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.MACOSX));
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.WINDOWS;
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.WINDOWS + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.WINDOWS));
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        net.sourceforge.atunes.model.OperatingSystem operatingSystem0 = net.sourceforge.atunes.model.OperatingSystem.SOLARIS;
        org.junit.Assert.assertTrue("'" + operatingSystem0 + "' != '" + net.sourceforge.atunes.model.OperatingSystem.SOLARIS + "'", operatingSystem0.equals(net.sourceforge.atunes.model.OperatingSystem.SOLARIS));
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        net.sourceforge.atunes.model.PlaybackState playbackState0 = net.sourceforge.atunes.model.PlaybackState.PLAYING;
        org.junit.Assert.assertTrue("'" + playbackState0 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAYING + "'", playbackState0.equals(net.sourceforge.atunes.model.PlaybackState.PLAYING));
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        net.sourceforge.atunes.model.SubmissionState submissionState0 = net.sourceforge.atunes.model.SubmissionState.SUBMITTED;
        org.junit.Assert.assertTrue("'" + submissionState0 + "' != '" + net.sourceforge.atunes.model.SubmissionState.SUBMITTED + "'", submissionState0.equals(net.sourceforge.atunes.model.SubmissionState.SUBMITTED));
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        net.sourceforge.atunes.model.PlayerEngineCapability playerEngineCapability0 = net.sourceforge.atunes.model.PlayerEngineCapability.PROXY;
        org.junit.Assert.assertTrue("'" + playerEngineCapability0 + "' != '" + net.sourceforge.atunes.model.PlayerEngineCapability.PROXY + "'", playerEngineCapability0.equals(net.sourceforge.atunes.model.PlayerEngineCapability.PROXY));
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        java.lang.String str0 = net.sourceforge.atunes.model.IProxyBean.SOCKS_PROXY;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "SOCKS_PROXY" + "'", str0, "SOCKS_PROXY");
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty0 = net.sourceforge.atunes.model.AudioObjectProperty.OLD_ENTRY;
        org.junit.Assert.assertTrue("'" + audioObjectProperty0 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.OLD_ENTRY + "'", audioObjectProperty0.equals(net.sourceforge.atunes.model.AudioObjectProperty.OLD_ENTRY));
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.String str12 = searchQuerySyntaxException1.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str12, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        net.sourceforge.atunes.model.IFontBean iFontBean3 = fontSettings0.getFont();
        net.sourceforge.atunes.model.IFontBean iFontBean4 = null;
        fontSettings0.setFont(iFontBean4);
        boolean boolean6 = fontSettings0.isUseFontSmoothingSettingsFromOs();
        org.junit.Assert.assertNull(iFontBean3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable12 = null;
        // The following exception was thrown during execution in test generation
        try {
            searchQuerySyntaxException1.addSuppressed(throwable12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.TRACK;
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.TRACK + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.TRACK));
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        net.sourceforge.atunes.model.ColumnBean columnBean4 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean5 = columnBean4.isVisible();
        columnBean4.setOrder((int) (byte) -1);
        columnBean4.setVisible(false);
        columnBean4.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType16 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion21 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType16, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str22 = applicationVersion21.getDate();
        java.lang.String str23 = applicationVersion21.toShortString();
        java.lang.String str24 = applicationVersion21.getChanges();
        boolean boolean25 = columnBean4.equals((java.lang.Object) applicationVersion21);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType26 = applicationVersion21.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion31 = new net.sourceforge.atunes.model.ApplicationVersion("/rss/channel/item", 10, (int) (short) 100, 0, versionType26, "hi!", "1.0.0 ", "./title", "net.sourceforge.atunes.model.InconsistentRepositoryException");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + versionType16 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType16.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "./title" + "'", str22, "./title");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1.0.0 " + "'", str23, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "./title" + "'", str24, "./title");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + versionType26 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType26.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        net.sourceforge.atunes.model.PlayerEngineCapability playerEngineCapability0 = net.sourceforge.atunes.model.PlayerEngineCapability.NORMALIZATION;
        org.junit.Assert.assertTrue("'" + playerEngineCapability0 + "' != '" + net.sourceforge.atunes.model.PlayerEngineCapability.NORMALIZATION + "'", playerEngineCapability0.equals(net.sourceforge.atunes.model.PlayerEngineCapability.NORMALIZATION));
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        net.sourceforge.atunes.model.PlaybackState playbackState0 = net.sourceforge.atunes.model.PlaybackState.PAUSED;
        org.junit.Assert.assertTrue("'" + playbackState0 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PAUSED + "'", playbackState0.equals(net.sourceforge.atunes.model.PlaybackState.PAUSED));
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Integer> intList26 = throwableRankList0.getNFirstElementCounts((int) '#');
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(intList26);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setDisc((int) (short) -1);
        java.util.List<java.lang.Integer> intList9 = cDMetadata0.getTracks();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(intList9);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getDisc();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        net.sourceforge.atunes.model.ImageSize imageSize0 = net.sourceforge.atunes.model.ImageSize.SIZE_MAX;
        java.lang.Class<?> wildcardClass1 = imageSize0.getClass();
        org.junit.Assert.assertTrue("'" + imageSize0 + "' != '" + net.sourceforge.atunes.model.ImageSize.SIZE_MAX + "'", imageSize0.equals(net.sourceforge.atunes.model.ImageSize.SIZE_MAX));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        java.lang.String str14 = searchQuerySyntaxException1.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str14, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        java.util.List<java.lang.Integer> intList16 = null;
        cDMetadata0.setTracks(intList16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = cDMetadata0.getComposer(90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because the return value of \"net.sourceforge.atunes.model.CDMetadata.getComposerNames()\" is null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        java.lang.Class<?> wildcardClass22 = columnBean0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable[] throwableArray11 = searchIndexNotAvailableException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        java.util.List<java.lang.String> strList4 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("");
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList4);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        net.sourceforge.atunes.model.ImageSize imageSize0 = net.sourceforge.atunes.model.ImageSize.SIZE_200;
        java.lang.Class<?> wildcardClass1 = imageSize0.getClass();
        org.junit.Assert.assertTrue("'" + imageSize0 + "' != '" + net.sourceforge.atunes.model.ImageSize.SIZE_200 + "'", imageSize0.equals(net.sourceforge.atunes.model.ImageSize.SIZE_200));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        net.sourceforge.atunes.model.ColumnBean columnBean4 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean5 = columnBean4.isVisible();
        columnBean4.setOrder((int) (byte) -1);
        columnBean4.setVisible(false);
        columnBean4.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType16 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion21 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType16, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str22 = applicationVersion21.getDate();
        java.lang.String str23 = applicationVersion21.toShortString();
        java.lang.String str24 = applicationVersion21.getChanges();
        boolean boolean25 = columnBean4.equals((java.lang.Object) applicationVersion21);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType26 = applicationVersion21.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion31 = new net.sourceforge.atunes.model.ApplicationVersion("./link[@rel='enclosure']/@type", (int) 'a', 100, (int) '#', versionType26, "./duration", "flac", "./link[@rel='enclosure']/@type", "/rss/channel/item");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + versionType16 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType16.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "./title" + "'", str22, "./title");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "1.0.0 " + "'", str23, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "./title" + "'", str24, "./title");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + versionType26 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType26.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts((int) (byte) 10);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getNameXPath();
        java.lang.String str4 = feedType0.getTitleXPath();
        java.lang.String str5 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/rss/channel/title" + "'", str3, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./title" + "'", str4, "./title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./enclosure/@url" + "'", str5, "./enclosure/@url");
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getUrlXPath();
        java.lang.Class<?> wildcardClass3 = feedType0.getClass();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@url" + "'", str2, "./enclosure/@url");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType19 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion24 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType19, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str25 = applicationVersion24.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType26 = applicationVersion24.getVersionType();
        java.lang.String str27 = applicationVersion24.getDownloadURL();
        java.lang.String str28 = applicationVersion24.getDirectDownloadURL();
        int int29 = applicationVersion9.compareTo(applicationVersion24);
        java.lang.Class<?> wildcardClass30 = applicationVersion24.getClass();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + versionType19 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType19.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./title" + "'", str25, "./title");
        org.junit.Assert.assertTrue("'" + versionType26 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType26.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "./description" + "'", str27, "./description");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "./pubDate" + "'", str28, "./pubDate");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getDate();
        java.lang.String str15 = applicationVersion9.toShortString();
        java.lang.String str16 = applicationVersion9.getName();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "mpc" + "'", str16, "mpc");
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata4 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata4.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList7 = cDMetadata4.getTracks();
        cDMetadata4.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList10 = cDMetadata4.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata11.setAlbumArtist("");
        java.lang.String str14 = cDMetadata11.getGenre();
        java.lang.String[] strArray16 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        cDMetadata11.setTrackNames((java.util.List<java.lang.String>) strList17);
        cDMetadata4.setTrackNames((java.util.List<java.lang.String>) strList17);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList17);
        java.util.List<java.lang.String> strList22 = cDMetadata0.getComposerNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./title" + "'", str5, "./title");
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException0 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList1 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable2 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException3 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable2);
        java.lang.Throwable[] throwableArray4 = searchQuerySyntaxException3.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException5 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException3);
        java.lang.Throwable throwable6 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException7 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable6);
        java.lang.Throwable[] throwableArray8 = searchQuerySyntaxException7.getSuppressed();
        throwableRankList1.replaceItem((java.lang.Throwable) searchQuerySyntaxException3, (java.lang.Throwable) searchQuerySyntaxException7);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException10 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException7);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException11 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException10);
        inconsistentRepositoryException0.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException11);
        java.lang.String str13 = inconsistentRepositoryException0.toString();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str13, "net.sourceforge.atunes.model.InconsistentRepositoryException");
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        int int6 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        int int8 = columnBean0.getWidth();
        net.sourceforge.atunes.model.ColumnSort columnSort9 = columnBean0.getSort();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(columnSort9);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        boolean boolean1 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean2 = null;
        fontSettings0.setFont(iFontBean2);
        net.sourceforge.atunes.model.IFontBean iFontBean4 = fontSettings0.getFont();
        boolean boolean5 = fontSettings0.isUseFontSmoothingSettingsFromOs();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(iFontBean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList21 = throwableRankList19.getNFirstElements((int) (short) 10);
        throwableRankList19.clear();
        int int23 = throwableRankList19.size();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        searchQuerySyntaxException25.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Integer int36 = throwableRankList19.getCount((java.lang.Throwable) searchQuerySyntaxException32);
        searchQuerySyntaxException15.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        searchQuerySyntaxException32.addSuppressed((java.lang.Throwable) searchQuerySyntaxException39);
        java.lang.Class<?> wildcardClass42 = searchQuerySyntaxException39.getClass();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException1 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException2 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList0.replaceItem((java.lang.Throwable) inconsistentRepositoryException1, (java.lang.Throwable) inconsistentRepositoryException2);
        java.lang.String str4 = inconsistentRepositoryException1.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str4, "net.sourceforge.atunes.model.InconsistentRepositoryException");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        net.sourceforge.atunes.model.CDMetadata cDMetadata4 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata4.setAlbumArtist("");
        java.lang.String str8 = cDMetadata4.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        java.lang.String str13 = cDMetadata9.getTitle((int) (byte) -1);
        java.lang.String[] strArray15 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList16);
        cDMetadata4.setArtistNames((java.util.List<java.lang.String>) strList16);
        boolean boolean20 = columnBean0.equals((java.lang.Object) strList16);
        columnBean0.setOrder((-1));
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList19.getOrder();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList31 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException33);
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        throwableRankList31.replaceItem((java.lang.Throwable) searchQuerySyntaxException33, (java.lang.Throwable) searchQuerySyntaxException37);
        searchQuerySyntaxException30.addSuppressed((java.lang.Throwable) searchQuerySyntaxException37);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException42 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Integer int43 = throwableRankList19.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Integer int44 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.String str45 = searchIndexNotAvailableException42.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str45, "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort4 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean0.setSort(columnSort4);
        int int6 = columnBean0.getOrder();
        int int7 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + columnSort4 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort4.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        int int15 = applicationVersion9.getMinorNumber();
        java.lang.String str16 = applicationVersion9.getChanges();
        java.lang.String str17 = applicationVersion9.getDate();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "./title" + "'", str17, "./title");
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getTypeXPath();
        java.lang.String str3 = feedType0.getDurationXPath();
        java.lang.String str4 = feedType0.getEntryXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@type" + "'", str2, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./duration" + "'", str3, "./duration");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/item" + "'", str4, "/rss/channel/item");
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.toString();
        int int11 = applicationVersion9.getMajorNumber();
        int int12 = applicationVersion9.getRevisionNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0.0 mpc " + "'", str10, "1.0.0 mpc ");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        fontSettings0.setUseFontSmoothingSettingsFromOs(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getTypeXPath();
        java.lang.String str3 = feedType0.getDurationXPath();
        java.lang.Class<?> wildcardClass4 = feedType0.getClass();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@type" + "'", str2, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./duration" + "'", str3, "./duration");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str1 = feedType0.getTypeXPath();
        java.lang.Class<?> wildcardClass2 = feedType0.getClass();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./link[@rel='enclosure']/@type" + "'", str1, "./link[@rel='enclosure']/@type");
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.lang.String str8 = cDMetadata1.getTitle(1);
        java.util.List<java.lang.String> strList9 = cDMetadata1.getComposerNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType15 = applicationVersion9.getVersionType();
        net.sourceforge.atunes.model.ColumnBean columnBean16 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty17 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean18 = columnBean16.equals((java.lang.Object) audioObjectProperty17);
        boolean boolean19 = applicationVersion9.equals((java.lang.Object) boolean18);
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + versionType15 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType15.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + audioObjectProperty17 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty17.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        net.sourceforge.atunes.model.FeedType feedType5 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str6 = feedType5.getUrlXPath();
        java.lang.String str7 = feedType5.getNameXPath();
        java.lang.String str8 = feedType5.getDescriptionXPath();
        boolean boolean9 = fontSettings0.equals((java.lang.Object) str8);
        net.sourceforge.atunes.model.IFontBean iFontBean10 = fontSettings0.getFont();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + feedType5 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType5.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./enclosure/@url" + "'", str6, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/rss/channel/title" + "'", str7, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./description" + "'", str8, "./description");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(iFontBean10);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        cDMetadata0.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList8 = null;
        cDMetadata0.setTrackNames(strList8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = cDMetadata0.getComposer(120);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because the return value of \"net.sourceforge.atunes.model.CDMetadata.getComposerNames()\" is null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType11 = applicationVersion9.getVersionType();
        java.lang.String str12 = applicationVersion9.getDownloadURL();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.toShortString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertTrue("'" + versionType11 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType11.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./description" + "'", str12, "./description");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0.0 " + "'", str14, "1.0.0 ");
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata7 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata7.setAlbumArtist("");
        java.lang.String str10 = cDMetadata7.getGenre();
        java.lang.String[] strArray12 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        cDMetadata7.setTrackNames((java.util.List<java.lang.String>) strList13);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList13);
        int int17 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList18 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strList18);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        net.sourceforge.atunes.model.RankList<java.util.ArrayList<java.lang.String>> strListRankList0 = new net.sourceforge.atunes.model.RankList<java.util.ArrayList<java.lang.String>>();
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata7 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata7.setAlbumArtist("");
        java.lang.String str10 = cDMetadata7.getGenre();
        java.lang.String[] strArray12 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        cDMetadata7.setTrackNames((java.util.List<java.lang.String>) strList13);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList13);
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata17.setAlbumArtist("");
        java.lang.String str20 = cDMetadata17.getGenre();
        java.lang.String[] strArray22 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList23);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Integer int44 = throwableRankList26.getCount((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable45 = null;
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        throwableRankList26.replaceItem(throwable45, (java.lang.Throwable) searchQuerySyntaxException47);
        java.util.List<java.lang.Integer> intList50 = throwableRankList26.getNFirstElementCounts((int) (byte) 1);
        int int51 = throwableRankList26.size();
        java.util.List<java.lang.Integer> intList53 = throwableRankList26.getNFirstElementCounts((int) (short) 10);
        cDMetadata17.setTracks(intList53);
        cDMetadata0.setTracks(intList53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = cDMetadata0.getArtist((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because the return value of \"net.sourceforge.atunes.model.CDMetadata.getArtistNames()\" is null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(intList50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(intList53);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        net.sourceforge.atunes.model.RankList<net.sourceforge.atunes.model.LookAndFeelBean> lookAndFeelBeanRankList0 = new net.sourceforge.atunes.model.RankList<net.sourceforge.atunes.model.LookAndFeelBean>();
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList5 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable6 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException7 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable6);
        java.lang.Throwable[] throwableArray8 = searchQuerySyntaxException7.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException9 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException7);
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        throwableRankList5.replaceItem((java.lang.Throwable) searchQuerySyntaxException7, (java.lang.Throwable) searchQuerySyntaxException11);
        searchQuerySyntaxException4.addSuppressed((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable16 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException17 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable16);
        java.lang.Throwable[] throwableArray18 = searchQuerySyntaxException17.getSuppressed();
        searchQuerySyntaxException4.addSuppressed((java.lang.Throwable) searchQuerySyntaxException17);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        java.lang.Throwable[] throwableArray23 = searchQuerySyntaxException22.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException24 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException22);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException22);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException25);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList27 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException31 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException29);
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        throwableRankList27.replaceItem((java.lang.Throwable) searchQuerySyntaxException29, (java.lang.Throwable) searchQuerySyntaxException33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList36 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        java.lang.Throwable[] throwableArray39 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException40 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        throwableRankList36.replaceItem((java.lang.Throwable) searchQuerySyntaxException38, (java.lang.Throwable) searchQuerySyntaxException42);
        java.lang.Integer int45 = throwableRankList27.getCount((java.lang.Throwable) searchQuerySyntaxException42);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList46 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList48 = throwableRankList46.getNFirstElements((int) (short) 10);
        throwableRankList46.clear();
        int int50 = throwableRankList46.size();
        java.lang.Throwable throwable51 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException52 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable51);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList53 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable54 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable54);
        java.lang.Throwable[] throwableArray56 = searchQuerySyntaxException55.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException57 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable58 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException59 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable58);
        java.lang.Throwable[] throwableArray60 = searchQuerySyntaxException59.getSuppressed();
        throwableRankList53.replaceItem((java.lang.Throwable) searchQuerySyntaxException55, (java.lang.Throwable) searchQuerySyntaxException59);
        searchQuerySyntaxException52.addSuppressed((java.lang.Throwable) searchQuerySyntaxException59);
        java.lang.Integer int63 = throwableRankList46.getCount((java.lang.Throwable) searchQuerySyntaxException59);
        searchQuerySyntaxException42.addSuppressed((java.lang.Throwable) searchQuerySyntaxException59);
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        java.lang.Throwable[] throwableArray67 = searchQuerySyntaxException66.getSuppressed();
        searchQuerySyntaxException59.addSuppressed((java.lang.Throwable) searchQuerySyntaxException66);
        java.lang.Integer int69 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException66);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(throwableList48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNull(int69);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        int int4 = throwableRankList0.size();
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList7 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable8 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable8);
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException9.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException11 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        java.lang.Throwable[] throwableArray14 = searchQuerySyntaxException13.getSuppressed();
        throwableRankList7.replaceItem((java.lang.Throwable) searchQuerySyntaxException9, (java.lang.Throwable) searchQuerySyntaxException13);
        searchQuerySyntaxException6.addSuppressed((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Integer int17 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Throwable throwable18 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException19 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable18);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList20 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        java.lang.Throwable[] throwableArray23 = searchQuerySyntaxException22.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException24 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException22);
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        throwableRankList20.replaceItem((java.lang.Throwable) searchQuerySyntaxException22, (java.lang.Throwable) searchQuerySyntaxException26);
        searchQuerySyntaxException19.addSuppressed((java.lang.Throwable) searchQuerySyntaxException26);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException19);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        searchQuerySyntaxException19.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException19);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList36 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        java.lang.Throwable[] throwableArray39 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException40 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        throwableRankList36.replaceItem((java.lang.Throwable) searchQuerySyntaxException38, (java.lang.Throwable) searchQuerySyntaxException42);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException49 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException47);
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        java.lang.Throwable[] throwableArray52 = searchQuerySyntaxException51.getSuppressed();
        throwableRankList45.replaceItem((java.lang.Throwable) searchQuerySyntaxException47, (java.lang.Throwable) searchQuerySyntaxException51);
        java.lang.Integer int54 = throwableRankList36.getCount((java.lang.Throwable) searchQuerySyntaxException51);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList55 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable56 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException57 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable56);
        java.lang.Throwable[] throwableArray58 = searchQuerySyntaxException57.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException59 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException57);
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        throwableRankList55.replaceItem((java.lang.Throwable) searchQuerySyntaxException57, (java.lang.Throwable) searchQuerySyntaxException61);
        java.util.List<java.lang.Throwable> throwableList64 = throwableRankList55.getOrder();
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList67 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable68 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable68);
        java.lang.Throwable[] throwableArray70 = searchQuerySyntaxException69.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException71 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException69);
        java.lang.Throwable throwable72 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException73 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable72);
        java.lang.Throwable[] throwableArray74 = searchQuerySyntaxException73.getSuppressed();
        throwableRankList67.replaceItem((java.lang.Throwable) searchQuerySyntaxException69, (java.lang.Throwable) searchQuerySyntaxException73);
        searchQuerySyntaxException66.addSuppressed((java.lang.Throwable) searchQuerySyntaxException73);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException77 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException78 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException66);
        java.lang.Integer int79 = throwableRankList55.getCount((java.lang.Throwable) searchIndexNotAvailableException78);
        java.lang.Integer int80 = throwableRankList36.getCount((java.lang.Throwable) searchIndexNotAvailableException78);
        java.lang.Throwable[] throwableArray81 = searchIndexNotAvailableException78.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException19, (java.lang.Throwable) searchIndexNotAvailableException78);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableList64);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(throwableArray81);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.PlaybackState playbackState8 = net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED;
        boolean boolean9 = fontSettings0.equals((java.lang.Object) playbackState8);
        net.sourceforge.atunes.model.ColumnBean columnBean10 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty11 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean12 = columnBean10.equals((java.lang.Object) audioObjectProperty11);
        boolean boolean13 = columnBean10.isVisible();
        boolean boolean14 = fontSettings0.equals((java.lang.Object) boolean13);
        boolean boolean15 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + playbackState8 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED + "'", playbackState8.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + audioObjectProperty11 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty11.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.util.List<java.lang.Throwable> throwableList10 = throwableRankList0.getOrder();
        java.util.List<java.lang.Throwable> throwableList12 = throwableRankList0.getNFirstElements((int) (byte) 100);
        java.util.List<java.lang.Throwable> throwableList14 = throwableRankList0.getNFirstElements(1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList15 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable16 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException17 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable16);
        java.lang.Throwable[] throwableArray18 = searchQuerySyntaxException17.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException19 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException17);
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        throwableRankList15.replaceItem((java.lang.Throwable) searchQuerySyntaxException17, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList24 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException28 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException26);
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        throwableRankList24.replaceItem((java.lang.Throwable) searchQuerySyntaxException26, (java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Integer int33 = throwableRankList15.getCount((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList34 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable35 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException36 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable35);
        java.lang.Throwable[] throwableArray37 = searchQuerySyntaxException36.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException38 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException36);
        java.lang.Throwable throwable39 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException40 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable39);
        java.lang.Throwable[] throwableArray41 = searchQuerySyntaxException40.getSuppressed();
        throwableRankList34.replaceItem((java.lang.Throwable) searchQuerySyntaxException36, (java.lang.Throwable) searchQuerySyntaxException40);
        java.util.List<java.lang.Throwable> throwableList43 = throwableRankList34.getOrder();
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList46 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable47 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException48 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable47);
        java.lang.Throwable[] throwableArray49 = searchQuerySyntaxException48.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException50 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException48);
        java.lang.Throwable throwable51 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException52 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable51);
        java.lang.Throwable[] throwableArray53 = searchQuerySyntaxException52.getSuppressed();
        throwableRankList46.replaceItem((java.lang.Throwable) searchQuerySyntaxException48, (java.lang.Throwable) searchQuerySyntaxException52);
        searchQuerySyntaxException45.addSuppressed((java.lang.Throwable) searchQuerySyntaxException52);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException56 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException45);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException57 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException45);
        java.lang.Integer int58 = throwableRankList34.getCount((java.lang.Throwable) searchIndexNotAvailableException57);
        java.lang.Integer int59 = throwableRankList15.getCount((java.lang.Throwable) searchIndexNotAvailableException57);
        java.lang.Integer int60 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException57);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableList10);
        org.junit.Assert.assertNotNull(throwableList12);
        org.junit.Assert.assertNotNull(throwableList14);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableList43);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int60);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.util.List<java.lang.Integer> intList7 = cDMetadata1.getTracks();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = intList7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(intList7);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setOrder(90);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setDisc((int) (short) -1);
        cDMetadata0.setDisc(0);
        java.lang.Class<?> wildcardClass11 = cDMetadata0.getClass();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        net.sourceforge.atunes.model.IFontBean iFontBean0 = null;
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings(iFontBean0, true, false);
        net.sourceforge.atunes.model.IFontBean iFontBean4 = fontSettings3.getFont();
        org.junit.Assert.assertNull(iFontBean4);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.util.List<java.lang.String> strList1 = cDMetadata0.getArtistNames();
        java.lang.Class<?> wildcardClass2 = cDMetadata0.getClass();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        net.sourceforge.atunes.model.RankList<java.lang.Iterable<java.lang.String>> strIterableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Iterable<java.lang.String>>();
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        net.sourceforge.atunes.model.ColumnSort columnSort7 = columnBean0.getSort();
        boolean boolean8 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertNull(columnSort7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        java.lang.String str14 = applicationVersion9.getDownloadURL();
        java.lang.String str15 = applicationVersion9.toString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./description" + "'", str14, "./description");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 mpc " + "'", str15, "1.0.0 mpc ");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        java.lang.String str13 = applicationVersion9.getChanges();
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList16 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException20 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException18);
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        java.lang.Throwable[] throwableArray23 = searchQuerySyntaxException22.getSuppressed();
        throwableRankList16.replaceItem((java.lang.Throwable) searchQuerySyntaxException18, (java.lang.Throwable) searchQuerySyntaxException22);
        searchQuerySyntaxException15.addSuppressed((java.lang.Throwable) searchQuerySyntaxException22);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        searchQuerySyntaxException15.addSuppressed((java.lang.Throwable) searchQuerySyntaxException28);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException15);
        boolean boolean32 = applicationVersion9.equals((java.lang.Object) searchQuerySyntaxException31);
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./title" + "'", str13, "./title");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.toString();
        java.lang.Class<?> wildcardClass11 = applicationVersion9.getClass();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "1.0.0 mpc " + "'", str10, "1.0.0 mpc ");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        java.util.List<java.lang.Integer> intList16 = null;
        cDMetadata0.setTracks(intList16);
        java.util.List<java.lang.String> strList18 = cDMetadata0.getComposerNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setName("/rss/channel/title");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getGenre();
        cDMetadata1.setAlbum("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.util.List<java.lang.String> strList8 = cDMetadata1.getArtistNames();
        cDMetadata1.setYear((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbumArtist();
        cDMetadata0.setGenre("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        int int9 = columnBean0.getWidth();
        columnBean0.setVisible(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        columnBean0.setOrder((int) (short) 10);
        columnBean0.setWidth((int) (short) 0);
        columnBean0.setVisible(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        cDMetadata0.setDisc(0);
        cDMetadata0.setYear((-1));
        cDMetadata0.setGenre("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getTypeXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getDescriptionXPath();
        java.lang.String str7 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@type" + "'", str4, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./description" + "'", str6, "./description");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@url" + "'", str7, "./enclosure/@url");
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        int int1 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getOrder();
        java.lang.Throwable throwable3 = null;
        java.lang.Integer int4 = throwableRankList0.getCount(throwable3);
        throwableRankList0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNull(int4);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        int int8 = columnBean0.getWidth();
        net.sourceforge.atunes.model.ColumnSort columnSort9 = null;
        columnBean0.setSort(columnSort9);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        java.lang.Throwable[] throwableArray2 = searchQuerySyntaxException1.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException3 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList5 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable6 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException7 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable6);
        java.lang.Throwable[] throwableArray8 = searchQuerySyntaxException7.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException9 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException7);
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        throwableRankList5.replaceItem((java.lang.Throwable) searchQuerySyntaxException7, (java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException15 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException15);
        searchQuerySyntaxException4.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException16);
        java.lang.String str18 = searchQuerySyntaxException4.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str18, "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        net.sourceforge.atunes.model.RankList<java.util.AbstractCollection<java.lang.String>> strCollectionRankList0 = new net.sourceforge.atunes.model.RankList<java.util.AbstractCollection<java.lang.String>>();
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getDurationXPath();
        java.lang.String str5 = feedType0.getTitleXPath();
        java.lang.String str6 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./duration" + "'", str4, "./duration");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./title" + "'", str5, "./title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./title" + "'", str6, "./title");
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList4 = cDMetadata0.getTrackNames();
        java.util.List<java.lang.String> strList5 = cDMetadata0.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata6.setAlbumArtist("");
        java.lang.String str10 = cDMetadata6.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata11.setAlbumArtist("");
        java.lang.String str14 = cDMetadata11.getGenre();
        int int15 = cDMetadata11.getYear();
        int int16 = cDMetadata11.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str18 = cDMetadata17.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata19 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata19.setAlbumArtist("");
        java.lang.String str22 = cDMetadata19.getGenre();
        java.lang.String[] strArray24 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        cDMetadata19.setTrackNames((java.util.List<java.lang.String>) strList25);
        cDMetadata17.setComposerNames((java.util.List<java.lang.String>) strList25);
        cDMetadata11.setTrackNames((java.util.List<java.lang.String>) strList25);
        net.sourceforge.atunes.model.CDMetadata cDMetadata30 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str31 = cDMetadata30.getGenre();
        java.util.List<java.lang.String> strList32 = cDMetadata30.getComposerNames();
        java.lang.String str33 = cDMetadata30.getAlbum();
        java.util.List<java.lang.Integer> intList34 = cDMetadata30.getTracks();
        int int35 = cDMetadata30.getDisc();
        java.lang.String[] strArray43 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        cDMetadata30.setArtistNames((java.util.List<java.lang.String>) strList44);
        cDMetadata11.setArtistNames((java.util.List<java.lang.String>) strList44);
        cDMetadata6.setComposerNames((java.util.List<java.lang.String>) strList44);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList44);
        java.util.List<java.lang.String> strList50 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        cDMetadata0.setAlbum("./description");
        int int8 = cDMetadata0.getDisc();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList23 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException27 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException25);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        throwableRankList23.replaceItem((java.lang.Throwable) searchQuerySyntaxException25, (java.lang.Throwable) searchQuerySyntaxException29);
        java.util.List<java.lang.Throwable> throwableList32 = throwableRankList23.getOrder();
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        searchQuerySyntaxException34.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException46 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int47 = throwableRankList23.getCount((java.lang.Throwable) searchIndexNotAvailableException46);
        throwableRankList0.addItem((java.lang.Throwable) searchIndexNotAvailableException46);
        int int49 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableList32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        lookAndFeelBean0.setName("./summary");
        lookAndFeelBean0.setSkin("./enclosure/@url");
        java.lang.String str5 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./enclosure/@url" + "'", str5, "./enclosure/@url");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        java.util.List<java.lang.String> strList11 = cDMetadata0.getComposerNames();
        java.util.List<java.lang.String> strList12 = cDMetadata0.getComposerNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType11 = applicationVersion9.getVersionType();
        java.lang.String str12 = applicationVersion9.getDownloadURL();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getDirectDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertTrue("'" + versionType11 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType11.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./description" + "'", str12, "./description");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./pubDate" + "'", str14, "./pubDate");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        java.util.List<java.lang.String> strList16 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        cDMetadata0.setDisc(0);
        cDMetadata0.setYear((-1));
        java.util.List<java.lang.String> strList15 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        net.sourceforge.atunes.model.ColumnBean columnBean22 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean23 = columnBean22.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState24 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean25 = columnBean22.equals((java.lang.Object) submissionState24);
        columnBean22.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort28 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean22.setSort(columnSort28);
        columnBean0.setSort(columnSort28);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType35 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion40 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType35, "mpc", "./description", "./pubDate", "./title");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType41 = applicationVersion40.getVersionType();
        java.lang.String str42 = applicationVersion40.getName();
        java.lang.String str43 = applicationVersion40.toShortString();
        boolean boolean44 = columnBean0.equals((java.lang.Object) str43);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + submissionState24 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState24.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + columnSort28 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort28.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + versionType35 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType35.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + versionType41 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType41.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "mpc" + "'", str42, "mpc");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "1.0.0 " + "'", str43, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("1.0.0 ");
        java.lang.String str4 = lookAndFeelBean0.getSkin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "1.0.0 " + "'", str4, "1.0.0 ");
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        int int2 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        java.lang.String str14 = applicationVersion9.getDate();
        int int15 = applicationVersion9.getMajorNumber();
        java.lang.String str16 = applicationVersion9.getChanges();
        int int17 = applicationVersion9.getMajorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata2 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata2.setAlbumArtist("");
        java.lang.String str5 = cDMetadata2.getGenre();
        java.lang.String[] strArray7 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        cDMetadata2.setTrackNames((java.util.List<java.lang.String>) strList8);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList8);
        int int12 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        net.sourceforge.atunes.model.RankList<net.sourceforge.atunes.model.ColumnSort> columnSortRankList0 = new net.sourceforge.atunes.model.RankList<net.sourceforge.atunes.model.ColumnSort>();
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.util.List<java.lang.String> strList7 = cDMetadata1.getComposerNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        int int8 = columnBean0.getOrder();
        columnBean0.setWidth(10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        columnBean0.setOrder((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata2 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata2.setAlbumArtist("");
        java.lang.String str5 = cDMetadata2.getGenre();
        java.lang.String[] strArray7 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        cDMetadata2.setTrackNames((java.util.List<java.lang.String>) strList8);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList8);
        java.lang.String str12 = cDMetadata0.getAlbum();
        cDMetadata0.setAlbum("./duration");
        java.util.List<java.lang.String> strList15 = cDMetadata0.getTrackNames();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList16 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException20 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException18);
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        java.lang.Throwable[] throwableArray23 = searchQuerySyntaxException22.getSuppressed();
        throwableRankList16.replaceItem((java.lang.Throwable) searchQuerySyntaxException18, (java.lang.Throwable) searchQuerySyntaxException22);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList25 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable26 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable26);
        java.lang.Throwable[] throwableArray28 = searchQuerySyntaxException27.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException29 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException27);
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        throwableRankList25.replaceItem((java.lang.Throwable) searchQuerySyntaxException27, (java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Integer int34 = throwableRankList16.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable35 = null;
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        throwableRankList16.replaceItem(throwable35, (java.lang.Throwable) searchQuerySyntaxException37);
        java.util.List<java.lang.Integer> intList40 = throwableRankList16.getNFirstElementCounts((int) (byte) 1);
        java.util.List<java.lang.Throwable> throwableList42 = throwableRankList16.getNFirstElements(0);
        java.util.List<java.lang.Integer> intList44 = throwableRankList16.getNFirstElementCounts((int) 'a');
        cDMetadata0.setTracks(intList44);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(intList40);
        org.junit.Assert.assertNotNull(throwableList42);
        org.junit.Assert.assertNotNull(intList44);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata2 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata2.setAlbumArtist("");
        java.lang.String str5 = cDMetadata2.getGenre();
        java.lang.String[] strArray7 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        cDMetadata2.setTrackNames((java.util.List<java.lang.String>) strList8);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList8);
        java.lang.String str12 = cDMetadata0.getAlbum();
        cDMetadata0.setAlbum("./duration");
        cDMetadata0.setDisc((int) (short) 1);
        int int17 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getTypeXPath();
        java.lang.String str5 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@type" + "'", str4, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./enclosure/@url" + "'", str5, "./enclosure/@url");
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        lookAndFeelBean0.setName("./summary");
        java.lang.String str3 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setName("/feed/title");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.lang.String str9 = cDMetadata0.getGenre();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.toString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType15 = applicationVersion9.getVersionType();
        java.lang.String str16 = applicationVersion9.getChanges();
        java.lang.String str17 = applicationVersion9.getDirectDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0.0 mpc " + "'", str14, "1.0.0 mpc ");
        org.junit.Assert.assertTrue("'" + versionType15 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType15.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "./pubDate" + "'", str17, "./pubDate");
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getDurationXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        java.lang.String str6 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./duration" + "'", str4, "./duration");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/title" + "'", str5, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./title" + "'", str6, "./title");
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toShortString();
        java.lang.String str14 = applicationVersion9.getName();
        net.sourceforge.atunes.model.ColumnBean columnBean15 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean16 = columnBean15.isVisible();
        columnBean15.setOrder((int) (byte) -1);
        columnBean15.setVisible(false);
        columnBean15.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType27 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion32 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType27, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str33 = applicationVersion32.getDate();
        java.lang.String str34 = applicationVersion32.toShortString();
        java.lang.String str35 = applicationVersion32.getChanges();
        boolean boolean36 = columnBean15.equals((java.lang.Object) applicationVersion32);
        java.lang.String str37 = applicationVersion32.toString();
        java.lang.String str38 = applicationVersion32.getDownloadURL();
        int int39 = applicationVersion9.compareTo(applicationVersion32);
        java.lang.String str40 = applicationVersion32.toShortString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 " + "'", str13, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + versionType27 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType27.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "./title" + "'", str33, "./title");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1.0.0 " + "'", str34, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "./title" + "'", str35, "./title");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1.0.0 mpc " + "'", str37, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "./description" + "'", str38, "./description");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "1.0.0 " + "'", str40, "1.0.0 ");
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        int int1 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        cDMetadata0.setDisc((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) (byte) 1);
        int int25 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getOrder();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(throwableList26);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException14 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException13);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList15 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList17 = throwableRankList15.getNFirstElements((int) (short) 10);
        throwableRankList15.clear();
        java.util.List<java.lang.Integer> intList20 = throwableRankList15.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList21 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable22 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable22);
        java.lang.Throwable[] throwableArray24 = searchQuerySyntaxException23.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException25 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        java.lang.Throwable throwable26 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable26);
        java.lang.Throwable[] throwableArray28 = searchQuerySyntaxException27.getSuppressed();
        throwableRankList21.replaceItem((java.lang.Throwable) searchQuerySyntaxException23, (java.lang.Throwable) searchQuerySyntaxException27);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException27);
        java.lang.Integer int31 = throwableRankList15.getCount((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException33);
        java.lang.Integer int36 = throwableRankList15.getCount((java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList39 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException43 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        java.lang.Throwable[] throwableArray46 = searchQuerySyntaxException45.getSuppressed();
        throwableRankList39.replaceItem((java.lang.Throwable) searchQuerySyntaxException41, (java.lang.Throwable) searchQuerySyntaxException45);
        searchQuerySyntaxException38.addSuppressed((java.lang.Throwable) searchQuerySyntaxException45);
        java.lang.Throwable[] throwableArray49 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException50 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList51 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException55 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException53);
        java.lang.Throwable throwable56 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException57 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable56);
        java.lang.Throwable[] throwableArray58 = searchQuerySyntaxException57.getSuppressed();
        throwableRankList51.replaceItem((java.lang.Throwable) searchQuerySyntaxException53, (java.lang.Throwable) searchQuerySyntaxException57);
        java.lang.Throwable[] throwableArray60 = searchQuerySyntaxException53.getSuppressed();
        throwableRankList15.replaceItem((java.lang.Throwable) searchIndexNotAvailableException50, (java.lang.Throwable) searchQuerySyntaxException53);
        searchIndexNotAvailableException14.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException50);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableList17);
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getUrlXPath();
        java.lang.String str4 = feedType0.getDurationXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./enclosure/@url" + "'", str3, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./duration" + "'", str4, "./duration");
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        int int9 = columnBean0.getWidth();
        int int10 = columnBean0.getWidth();
        columnBean0.setVisible(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) 'a');
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        boolean boolean8 = columnBean0.isVisible();
        columnBean0.setOrder((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        net.sourceforge.atunes.model.ColumnSort columnSort4 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean0.setSort(columnSort4);
        boolean boolean6 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + columnSort4 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort4.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        int int13 = applicationVersion9.getMinorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("SOCKS_PROXY");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        int int9 = columnBean0.getOrder();
        columnBean0.setOrder((int) (byte) 1);
        columnBean0.setOrder((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        int int3 = cDMetadata0.getYear();
        int int4 = cDMetadata0.getDisc();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        java.lang.String str19 = cDMetadata0.getAlbum();
        java.lang.String str20 = cDMetadata0.getGenre();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList27 = throwableRankList0.getOrder();
        java.util.List<java.lang.Throwable> throwableList29 = throwableRankList0.getNFirstElements((int) (byte) -1);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList27);
        org.junit.Assert.assertNotNull(throwableList29);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        int int4 = throwableRankList0.size();
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList7 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable8 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable8);
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException9.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException11 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        java.lang.Throwable[] throwableArray14 = searchQuerySyntaxException13.getSuppressed();
        throwableRankList7.replaceItem((java.lang.Throwable) searchQuerySyntaxException9, (java.lang.Throwable) searchQuerySyntaxException13);
        searchQuerySyntaxException6.addSuppressed((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException17 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.String str19 = searchQuerySyntaxException6.toString();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str19, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getUrlXPath();
        java.lang.String str3 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@url" + "'", str2, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./enclosure/@url" + "'", str3, "./enclosure/@url");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./enclosure/@url");
        lookAndFeelBean0.setSkin("./link[@rel='enclosure']/@type");
        java.lang.String str6 = lookAndFeelBean0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList0.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Integer int38 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.String str39 = searchQuerySyntaxException31.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str39, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute3 = net.sourceforge.atunes.model.TextTagAttribute.LYRICS;
        boolean boolean4 = columnBean0.equals((java.lang.Object) textTagAttribute3);
        columnBean0.setWidth((int) '#');
        boolean boolean7 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + textTagAttribute3 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.LYRICS + "'", textTagAttribute3.equals(net.sourceforge.atunes.model.TextTagAttribute.LYRICS));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str10 = cDMetadata9.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata11.setAlbumArtist("");
        java.lang.String str14 = cDMetadata11.getGenre();
        java.lang.String[] strArray16 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        cDMetadata11.setTrackNames((java.util.List<java.lang.String>) strList17);
        cDMetadata9.setComposerNames((java.util.List<java.lang.String>) strList17);
        net.sourceforge.atunes.model.CDMetadata cDMetadata21 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str22 = cDMetadata21.getGenre();
        java.util.List<java.lang.String> strList23 = cDMetadata21.getComposerNames();
        java.lang.String str24 = cDMetadata21.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata25 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata25.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList28 = cDMetadata25.getTracks();
        cDMetadata25.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList31 = cDMetadata25.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata32 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata32.setAlbumArtist("");
        java.lang.String str35 = cDMetadata32.getGenre();
        java.lang.String[] strArray37 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        cDMetadata32.setTrackNames((java.util.List<java.lang.String>) strList38);
        cDMetadata25.setTrackNames((java.util.List<java.lang.String>) strList38);
        cDMetadata21.setTrackNames((java.util.List<java.lang.String>) strList38);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList38);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList38);
        net.sourceforge.atunes.model.CDMetadata cDMetadata45 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata45.setAlbumArtist("");
        java.lang.String str49 = cDMetadata45.getTitle((int) (byte) -1);
        java.lang.String[] strArray51 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        cDMetadata45.setTrackNames((java.util.List<java.lang.String>) strList52);
        cDMetadata45.setAlbumArtist("/rss/channel/item");
        java.util.List<java.lang.Integer> intList57 = cDMetadata45.getTracks();
        java.lang.String str59 = cDMetadata45.getTitle(100);
        net.sourceforge.atunes.model.ColumnBean columnBean60 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean61 = columnBean60.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState62 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean63 = columnBean60.equals((java.lang.Object) submissionState62);
        net.sourceforge.atunes.model.CDMetadata cDMetadata64 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata64.setAlbumArtist("");
        java.lang.String str68 = cDMetadata64.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata69 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata69.setAlbumArtist("");
        java.lang.String str73 = cDMetadata69.getTitle((int) (byte) -1);
        java.lang.String[] strArray75 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        cDMetadata69.setTrackNames((java.util.List<java.lang.String>) strList76);
        cDMetadata64.setArtistNames((java.util.List<java.lang.String>) strList76);
        boolean boolean80 = columnBean60.equals((java.lang.Object) strList76);
        cDMetadata45.setTrackNames((java.util.List<java.lang.String>) strList76);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList76);
        java.util.List<java.lang.String> strList83 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(intList57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + submissionState62 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState62.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList0.getNFirstElements((int) (short) 100);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getNFirstElements((int) (byte) 1);
        java.util.List<java.lang.Throwable> throwableList11 = throwableRankList0.getNFirstElements((int) (short) 100);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableList11);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList23 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException27 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException25);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        throwableRankList23.replaceItem((java.lang.Throwable) searchQuerySyntaxException25, (java.lang.Throwable) searchQuerySyntaxException29);
        java.util.List<java.lang.Throwable> throwableList32 = throwableRankList23.getOrder();
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        searchQuerySyntaxException34.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException46 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int47 = throwableRankList23.getCount((java.lang.Throwable) searchIndexNotAvailableException46);
        throwableRankList0.addItem((java.lang.Throwable) searchIndexNotAvailableException46);
        java.util.List<java.lang.Integer> intList50 = throwableRankList0.getNFirstElementCounts(90);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList51 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList53 = throwableRankList51.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable54 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable54);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList56 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException60 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Throwable throwable61 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException62 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable61);
        java.lang.Throwable[] throwableArray63 = searchQuerySyntaxException62.getSuppressed();
        throwableRankList56.replaceItem((java.lang.Throwable) searchQuerySyntaxException58, (java.lang.Throwable) searchQuerySyntaxException62);
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchQuerySyntaxException62);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable67 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable67);
        java.lang.Throwable[] throwableArray69 = searchQuerySyntaxException68.getSuppressed();
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchQuerySyntaxException68);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException71 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable72 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException73 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable72);
        java.lang.Throwable[] throwableArray74 = searchQuerySyntaxException73.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException75 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException73);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException73);
        throwableRankList51.replaceItem((java.lang.Throwable) searchQuerySyntaxException55, (java.lang.Throwable) searchQuerySyntaxException76);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException55);
        int int79 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableList32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(intList50);
        org.junit.Assert.assertNotNull(throwableList53);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        java.lang.String str12 = cDMetadata9.getGenre();
        java.lang.String[] strArray14 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setYear(150);
        java.util.List<java.lang.Integer> intList21 = cDMetadata0.getTracks();
        java.util.List<java.lang.String> strList22 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        cDMetadata0.setDisc((int) (short) -1);
        java.lang.String str13 = cDMetadata0.getAlbumArtist();
        java.util.List<java.lang.Integer> intList14 = cDMetadata0.getTracks();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str13, "net.sourceforge.atunes.model.InconsistentRepositoryException");
        org.junit.Assert.assertNull(intList14);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.toShortString();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str17 = applicationVersion9.toShortString();
        java.lang.String str18 = applicationVersion9.getName();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType23 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion28 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType23, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str29 = applicationVersion28.getDate();
        java.lang.String str30 = applicationVersion28.toShortString();
        int int31 = applicationVersion28.getMajorNumber();
        java.lang.String str32 = applicationVersion28.toShortString();
        net.sourceforge.atunes.model.ArtistViewMode artistViewMode33 = net.sourceforge.atunes.model.ArtistViewMode.BOTH;
        boolean boolean34 = applicationVersion28.equals((java.lang.Object) artistViewMode33);
        int int35 = applicationVersion28.getMajorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType40 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion45 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType40, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str46 = applicationVersion45.getDate();
        java.lang.String str47 = applicationVersion45.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType48 = applicationVersion45.getVersionType();
        int int49 = applicationVersion45.getMinorNumber();
        int int50 = applicationVersion28.compareTo(applicationVersion45);
        int int51 = applicationVersion9.compareTo(applicationVersion45);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList52 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList54 = throwableRankList52.getNFirstElements((int) (short) 10);
        int int55 = throwableRankList52.size();
        int int56 = throwableRankList52.size();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        searchQuerySyntaxException58.addSuppressed((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int70 = throwableRankList52.getCount((java.lang.Throwable) searchQuerySyntaxException58);
        boolean boolean71 = applicationVersion45.equals((java.lang.Object) int70);
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1.0.0 " + "'", str17, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertTrue("'" + versionType23 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType23.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./title" + "'", str29, "./title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1.0.0 " + "'", str30, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0.0 " + "'", str32, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + artistViewMode33 + "' != '" + net.sourceforge.atunes.model.ArtistViewMode.BOTH + "'", artistViewMode33.equals(net.sourceforge.atunes.model.ArtistViewMode.BOTH));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + versionType40 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType40.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "./title" + "'", str46, "./title");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1.0.0 " + "'", str47, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType48 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType48.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(throwableList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        java.lang.String str14 = applicationVersion9.getDate();
        int int15 = applicationVersion9.getMajorNumber();
        int int16 = applicationVersion9.getMajorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        int int4 = throwableRankList0.size();
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList7 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable8 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable8);
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException9.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException11 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        java.lang.Throwable[] throwableArray14 = searchQuerySyntaxException13.getSuppressed();
        throwableRankList7.replaceItem((java.lang.Throwable) searchQuerySyntaxException9, (java.lang.Throwable) searchQuerySyntaxException13);
        searchQuerySyntaxException6.addSuppressed((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Integer int17 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.String str18 = searchQuerySyntaxException13.toString();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str18, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata2 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata2.setAlbumArtist("");
        java.lang.String str5 = cDMetadata2.getGenre();
        java.lang.String[] strArray7 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        cDMetadata2.setTrackNames((java.util.List<java.lang.String>) strList8);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList8);
        java.lang.String str12 = cDMetadata0.getAlbum();
        java.lang.String str13 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str4 = cDMetadata0.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str8 = cDMetadata5.getGenre();
        int int9 = cDMetadata5.getYear();
        int int10 = cDMetadata5.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str12 = cDMetadata11.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata13 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata13.setAlbumArtist("");
        java.lang.String str16 = cDMetadata13.getGenre();
        java.lang.String[] strArray18 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        cDMetadata13.setTrackNames((java.util.List<java.lang.String>) strList19);
        cDMetadata11.setComposerNames((java.util.List<java.lang.String>) strList19);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList19);
        net.sourceforge.atunes.model.CDMetadata cDMetadata24 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str25 = cDMetadata24.getGenre();
        java.util.List<java.lang.String> strList26 = cDMetadata24.getComposerNames();
        java.lang.String str27 = cDMetadata24.getAlbum();
        java.util.List<java.lang.Integer> intList28 = cDMetadata24.getTracks();
        int int29 = cDMetadata24.getDisc();
        java.lang.String[] strArray37 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        cDMetadata24.setArtistNames((java.util.List<java.lang.String>) strList38);
        cDMetadata5.setArtistNames((java.util.List<java.lang.String>) strList38);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList38);
        cDMetadata0.setDisc((int) (byte) 1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException49 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException47);
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        java.lang.Throwable[] throwableArray52 = searchQuerySyntaxException51.getSuppressed();
        throwableRankList45.replaceItem((java.lang.Throwable) searchQuerySyntaxException47, (java.lang.Throwable) searchQuerySyntaxException51);
        java.util.List<java.lang.Throwable> throwableList54 = throwableRankList45.getOrder();
        java.lang.Throwable throwable55 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException56 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable55);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList57 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable58 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException59 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable58);
        java.lang.Throwable[] throwableArray60 = searchQuerySyntaxException59.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException61 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException59);
        java.lang.Throwable throwable62 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException63 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable62);
        java.lang.Throwable[] throwableArray64 = searchQuerySyntaxException63.getSuppressed();
        throwableRankList57.replaceItem((java.lang.Throwable) searchQuerySyntaxException59, (java.lang.Throwable) searchQuerySyntaxException63);
        searchQuerySyntaxException56.addSuppressed((java.lang.Throwable) searchQuerySyntaxException63);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException67 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException56);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException68 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException56);
        java.lang.Integer int69 = throwableRankList45.getCount((java.lang.Throwable) searchIndexNotAvailableException68);
        java.util.List<java.lang.Throwable> throwableList71 = throwableRankList45.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList73 = throwableRankList45.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList74 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable75 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable75);
        java.lang.Throwable[] throwableArray77 = searchQuerySyntaxException76.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException78 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException76);
        java.lang.Throwable throwable79 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException80 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable79);
        java.lang.Throwable[] throwableArray81 = searchQuerySyntaxException80.getSuppressed();
        throwableRankList74.replaceItem((java.lang.Throwable) searchQuerySyntaxException76, (java.lang.Throwable) searchQuerySyntaxException80);
        java.lang.Integer int83 = throwableRankList45.getCount((java.lang.Throwable) searchQuerySyntaxException76);
        throwableRankList45.clear();
        java.util.List<java.lang.Integer> intList86 = throwableRankList45.getNFirstElementCounts((int) (short) -1);
        cDMetadata0.setTracks(intList86);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableList54);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(throwableList71);
        org.junit.Assert.assertNotNull(throwableList73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(intList86);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute0 = net.sourceforge.atunes.model.TextTagAttribute.COMMENT;
        java.lang.Class<?> wildcardClass1 = textTagAttribute0.getClass();
        org.junit.Assert.assertTrue("'" + textTagAttribute0 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMMENT + "'", textTagAttribute0.equals(net.sourceforge.atunes.model.TextTagAttribute.COMMENT));
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList0.getNFirstElements((int) (short) 100);
        throwableRankList0.clear();
        java.lang.Throwable throwable9 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException10 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable9);
        java.lang.Throwable[] throwableArray11 = searchQuerySyntaxException10.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException12 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException10);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList14 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException18 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException16);
        java.lang.Throwable throwable19 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable19);
        java.lang.Throwable[] throwableArray21 = searchQuerySyntaxException20.getSuppressed();
        throwableRankList14.replaceItem((java.lang.Throwable) searchQuerySyntaxException16, (java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException24 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException25 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException24);
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException25);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList28 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException32 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        java.lang.Throwable[] throwableArray35 = searchQuerySyntaxException34.getSuppressed();
        throwableRankList28.replaceItem((java.lang.Throwable) searchQuerySyntaxException30, (java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList37 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException41 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException39);
        java.lang.Throwable throwable42 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException43 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable42);
        java.lang.Throwable[] throwableArray44 = searchQuerySyntaxException43.getSuppressed();
        throwableRankList37.replaceItem((java.lang.Throwable) searchQuerySyntaxException39, (java.lang.Throwable) searchQuerySyntaxException43);
        java.lang.Integer int46 = throwableRankList28.getCount((java.lang.Throwable) searchQuerySyntaxException43);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList47 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable48 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable48);
        java.lang.Throwable[] throwableArray50 = searchQuerySyntaxException49.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException51 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException49);
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        throwableRankList47.replaceItem((java.lang.Throwable) searchQuerySyntaxException49, (java.lang.Throwable) searchQuerySyntaxException53);
        java.util.List<java.lang.Throwable> throwableList56 = throwableRankList47.getOrder();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        searchQuerySyntaxException58.addSuppressed((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException58);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException70 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int71 = throwableRankList47.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Integer int72 = throwableRankList28.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Throwable[] throwableArray73 = searchIndexNotAvailableException70.getSuppressed();
        java.lang.Throwable[] throwableArray74 = searchIndexNotAvailableException70.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException13, (java.lang.Throwable) searchIndexNotAvailableException70);
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableList56);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        boolean boolean9 = fontSettings0.equals((java.lang.Object) 150);
        boolean boolean10 = fontSettings0.isUseFontSmoothing();
        boolean boolean11 = fontSettings0.isUseFontSmoothing();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList1 = throwableRankList0.getOrder();
        int int2 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getEntryXPath();
        java.lang.String str7 = feedType0.getTypeXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/rss/channel/item" + "'", str6, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@type" + "'", str7, "./enclosure/@type");
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        int int15 = applicationVersion9.getRevisionNumber();
        java.lang.Class<?> wildcardClass16 = applicationVersion9.getClass();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        int int8 = columnBean0.getOrder();
        int int9 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        net.sourceforge.atunes.model.ImageSize imageSize0 = net.sourceforge.atunes.model.ImageSize.SIZE_120;
        int int1 = imageSize0.getSize();
        int int2 = imageSize0.getSize();
        int int3 = imageSize0.getSize();
        org.junit.Assert.assertTrue("'" + imageSize0 + "' != '" + net.sourceforge.atunes.model.ImageSize.SIZE_120 + "'", imageSize0.equals(net.sourceforge.atunes.model.ImageSize.SIZE_120));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 120 + "'", int1 == 120);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 120 + "'", int2 == 120);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 120 + "'", int3 == 120);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        java.lang.Throwable[] throwableArray2 = searchQuerySyntaxException1.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException3 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList5 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable6 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException7 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable6);
        java.lang.Throwable[] throwableArray8 = searchQuerySyntaxException7.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException9 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException7);
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        throwableRankList5.replaceItem((java.lang.Throwable) searchQuerySyntaxException7, (java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException15 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException15);
        searchQuerySyntaxException4.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException16);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.String str19 = searchQuerySyntaxException4.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str19, "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.util.List<java.lang.Integer> intList7 = cDMetadata1.getTracks();
        net.sourceforge.atunes.model.FontSettings fontSettings8 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        boolean boolean12 = fontSettings8.equals((java.lang.Object) cDMetadata9);
        fontSettings8.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean15 = fontSettings8.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata16 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str17 = cDMetadata16.getGenre();
        java.util.List<java.lang.String> strList18 = cDMetadata16.getComposerNames();
        java.lang.String str19 = cDMetadata16.getAlbum();
        java.util.List<java.lang.Integer> intList20 = cDMetadata16.getTracks();
        cDMetadata16.setAlbumArtist("mpc");
        java.lang.String str23 = cDMetadata16.getAlbum();
        boolean boolean24 = fontSettings8.equals((java.lang.Object) cDMetadata16);
        java.lang.String[] strArray49 = new java.lang.String[] { "./link[@rel='enclosure']/@type", "SOCKS_PROXY", "/feed/title", "./pubDate", "1.0.0 mpc ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "1.0.0 mpc ", "1.0.0 mpc ", "rm", "./enclosure/@type", "/rss/channel/item", "mpc", "./title", "1.0.0 ", "flv", "1.0.0 ", "./link[@rel='enclosure']/@type", "hi!", "./link[@rel='enclosure']/@type", "./updated", "10.52.35  ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "./enclosure/@url", "SOCKS_PROXY" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        cDMetadata16.setTrackNames((java.util.List<java.lang.String>) strList50);
        cDMetadata1.setTrackNames((java.util.List<java.lang.String>) strList50);
        int int54 = cDMetadata1.getDisc();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(iFontBean15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        int int4 = throwableRankList0.size();
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList7 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable8 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable8);
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException9.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException11 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        java.lang.Throwable[] throwableArray14 = searchQuerySyntaxException13.getSuppressed();
        throwableRankList7.replaceItem((java.lang.Throwable) searchQuerySyntaxException9, (java.lang.Throwable) searchQuerySyntaxException13);
        searchQuerySyntaxException6.addSuppressed((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException17 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException19 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException6);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        int int1 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        cDMetadata0.setGenre("./link[@rel='enclosure']/@type");
        cDMetadata0.setDisc(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strList2);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        net.sourceforge.atunes.model.RankList<java.lang.Object> objRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Object>();
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        cDMetadata0.setGenre("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        cDMetadata0.setYear(150);
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toShortString();
        net.sourceforge.atunes.model.ArtistViewMode artistViewMode14 = net.sourceforge.atunes.model.ArtistViewMode.BOTH;
        boolean boolean15 = applicationVersion9.equals((java.lang.Object) artistViewMode14);
        int int16 = applicationVersion9.getMajorNumber();
        int int17 = applicationVersion9.getRevisionNumber();
        java.lang.String str18 = applicationVersion9.getDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 " + "'", str13, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + artistViewMode14 + "' != '" + net.sourceforge.atunes.model.ArtistViewMode.BOTH + "'", artistViewMode14.equals(net.sourceforge.atunes.model.ArtistViewMode.BOTH));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./description" + "'", str18, "./description");
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        java.lang.Throwable[] throwableArray2 = searchQuerySyntaxException1.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException3 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        java.lang.String str4 = searchQuerySyntaxException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str4, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        java.lang.String str14 = applicationVersion9.getDate();
        int int15 = applicationVersion9.getMajorNumber();
        java.lang.String str16 = applicationVersion9.toString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0.0 mpc " + "'", str16, "1.0.0 mpc ");
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata2 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata2.setAlbumArtist("");
        java.lang.String str5 = cDMetadata2.getGenre();
        java.lang.String[] strArray7 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        cDMetadata2.setTrackNames((java.util.List<java.lang.String>) strList8);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList8);
        java.lang.String str12 = cDMetadata0.getAlbum();
        java.util.List<java.lang.String> strList13 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute3 = net.sourceforge.atunes.model.TextTagAttribute.LYRICS;
        boolean boolean4 = columnBean0.equals((java.lang.Object) textTagAttribute3);
        net.sourceforge.atunes.model.ColumnSort columnSort5 = columnBean0.getSort();
        columnBean0.setWidth((int) ' ');
        columnBean0.setWidth((-1));
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + textTagAttribute3 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.LYRICS + "'", textTagAttribute3.equals(net.sourceforge.atunes.model.TextTagAttribute.LYRICS));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(columnSort5);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList19.getOrder();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList31 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException33);
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        throwableRankList31.replaceItem((java.lang.Throwable) searchQuerySyntaxException33, (java.lang.Throwable) searchQuerySyntaxException37);
        searchQuerySyntaxException30.addSuppressed((java.lang.Throwable) searchQuerySyntaxException37);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException42 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Integer int43 = throwableRankList19.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Integer int44 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Throwable[] throwableArray45 = searchIndexNotAvailableException42.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException46 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.String str47 = searchQuerySyntaxException46.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str47, "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setName("10.52.35  ");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        cDMetadata0.setAlbum("./title");
        cDMetadata0.setGenre("/rss/channel/item");
        int int25 = cDMetadata0.getDisc();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute3 = net.sourceforge.atunes.model.TextTagAttribute.LYRICS;
        boolean boolean4 = columnBean0.equals((java.lang.Object) textTagAttribute3);
        columnBean0.setOrder((int) (short) 10);
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + textTagAttribute3 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.LYRICS + "'", textTagAttribute3.equals(net.sourceforge.atunes.model.TextTagAttribute.LYRICS));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.BETA;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("mpc", (int) (short) 0, 150, (int) (byte) -1, versionType4, "flac", "/rss/channel/item", "hi!", "./pubDate");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.getChanges();
        int int12 = applicationVersion9.getMinorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.BETA + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.BETA));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "mpc" + "'", str10, "mpc");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "./pubDate" + "'", str11, "./pubDate");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 150 + "'", int12 == 150);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        int int16 = applicationVersion13.getMajorNumber();
        int int17 = applicationVersion13.getMinorNumber();
        java.lang.String str18 = applicationVersion13.getName();
        java.lang.String str19 = applicationVersion13.getChanges();
        boolean boolean20 = columnBean0.equals((java.lang.Object) applicationVersion13);
        columnBean0.setWidth(10);
        boolean boolean23 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "./title" + "'", str19, "./title");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getDisc();
        java.lang.String[] strArray13 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList14);
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str18 = cDMetadata17.getGenre();
        java.util.List<java.lang.String> strList19 = cDMetadata17.getComposerNames();
        java.lang.String str20 = cDMetadata17.getAlbum();
        java.util.List<java.lang.Integer> intList21 = cDMetadata17.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str26 = cDMetadata22.getTitle((int) (byte) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList29);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList29);
        cDMetadata17.setYear((int) (short) 1);
        int int35 = cDMetadata17.getYear();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList36 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        java.lang.Throwable[] throwableArray39 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException40 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        throwableRankList36.replaceItem((java.lang.Throwable) searchQuerySyntaxException38, (java.lang.Throwable) searchQuerySyntaxException42);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException49 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException47);
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        java.lang.Throwable[] throwableArray52 = searchQuerySyntaxException51.getSuppressed();
        throwableRankList45.replaceItem((java.lang.Throwable) searchQuerySyntaxException47, (java.lang.Throwable) searchQuerySyntaxException51);
        java.lang.Integer int54 = throwableRankList36.getCount((java.lang.Throwable) searchQuerySyntaxException51);
        java.lang.Throwable throwable55 = null;
        java.lang.Throwable throwable56 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException57 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable56);
        throwableRankList36.replaceItem(throwable55, (java.lang.Throwable) searchQuerySyntaxException57);
        java.util.List<java.lang.Integer> intList60 = throwableRankList36.getNFirstElementCounts((int) (byte) 1);
        cDMetadata17.setTracks(intList60);
        cDMetadata0.setTracks(intList60);
        java.lang.String str63 = cDMetadata0.getAlbumArtist();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(intList60);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getUrlXPath();
        java.lang.String str3 = feedType0.getEntryXPath();
        java.lang.Class<?> wildcardClass4 = feedType0.getClass();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@url" + "'", str2, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/rss/channel/item" + "'", str3, "/rss/channel/item");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.util.List<java.lang.Throwable> throwableList19 = throwableRankList0.getOrder();
        int int20 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.toShortString();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str17 = applicationVersion9.toShortString();
        java.lang.String str18 = applicationVersion9.getName();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType23 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion28 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType23, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str29 = applicationVersion28.getDate();
        java.lang.String str30 = applicationVersion28.toShortString();
        int int31 = applicationVersion28.getMajorNumber();
        java.lang.String str32 = applicationVersion28.toShortString();
        net.sourceforge.atunes.model.ArtistViewMode artistViewMode33 = net.sourceforge.atunes.model.ArtistViewMode.BOTH;
        boolean boolean34 = applicationVersion28.equals((java.lang.Object) artistViewMode33);
        int int35 = applicationVersion28.getMajorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType40 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion45 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType40, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str46 = applicationVersion45.getDate();
        java.lang.String str47 = applicationVersion45.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType48 = applicationVersion45.getVersionType();
        int int49 = applicationVersion45.getMinorNumber();
        int int50 = applicationVersion28.compareTo(applicationVersion45);
        int int51 = applicationVersion9.compareTo(applicationVersion45);
        java.lang.String str52 = applicationVersion9.getName();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1.0.0 " + "'", str17, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertTrue("'" + versionType23 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType23.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./title" + "'", str29, "./title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1.0.0 " + "'", str30, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0.0 " + "'", str32, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + artistViewMode33 + "' != '" + net.sourceforge.atunes.model.ArtistViewMode.BOTH + "'", artistViewMode33.equals(net.sourceforge.atunes.model.ArtistViewMode.BOTH));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + versionType40 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType40.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "./title" + "'", str46, "./title");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1.0.0 " + "'", str47, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType48 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType48.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "mpc" + "'", str52, "mpc");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType18 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion23 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType18, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str24 = applicationVersion23.getDate();
        java.lang.String str25 = applicationVersion23.toShortString();
        java.lang.String str26 = applicationVersion23.getChanges();
        int int27 = applicationVersion23.getMinorNumber();
        java.lang.String str28 = applicationVersion23.getChanges();
        int int29 = applicationVersion23.getRevisionNumber();
        int int30 = applicationVersion9.compareTo(applicationVersion23);
        java.lang.String str31 = applicationVersion23.getChanges();
        int int32 = applicationVersion23.getMinorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + versionType18 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType18.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "./title" + "'", str24, "./title");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1.0.0 " + "'", str25, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "./title" + "'", str26, "./title");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "./title" + "'", str28, "./title");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "./title" + "'", str31, "./title");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getDescriptionXPath();
        java.lang.String str3 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./summary" + "'", str2, "./summary");
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        cDMetadata0.setDisc((int) (short) -1);
        java.lang.String str13 = cDMetadata0.getAlbumArtist();
        cDMetadata0.setAlbumArtist("10.52.35  ");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str13, "net.sourceforge.atunes.model.InconsistentRepositoryException");
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        lookAndFeelBean0.setName("./summary");
        java.lang.String str3 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./summary");
        java.lang.String str6 = lookAndFeelBean0.getSkin();
        java.lang.String str7 = lookAndFeelBean0.getSkin();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./summary" + "'", str6, "./summary");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./summary" + "'", str7, "./summary");
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        net.sourceforge.atunes.model.LocalAudioObjectFormat localAudioObjectFormat0 = net.sourceforge.atunes.model.LocalAudioObjectFormat.FLV;
        java.lang.String str1 = localAudioObjectFormat0.getExtension();
        java.lang.String str2 = localAudioObjectFormat0.getExtension();
        java.lang.String str3 = localAudioObjectFormat0.getExtension();
        org.junit.Assert.assertTrue("'" + localAudioObjectFormat0 + "' != '" + net.sourceforge.atunes.model.LocalAudioObjectFormat.FLV + "'", localAudioObjectFormat0.equals(net.sourceforge.atunes.model.LocalAudioObjectFormat.FLV));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "flv" + "'", str1, "flv");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "flv" + "'", str2, "flv");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "flv" + "'", str3, "flv");
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        net.sourceforge.atunes.model.ColumnBean columnBean22 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean23 = columnBean22.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState24 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean25 = columnBean22.equals((java.lang.Object) submissionState24);
        columnBean22.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort28 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean22.setSort(columnSort28);
        columnBean0.setSort(columnSort28);
        boolean boolean31 = columnBean0.isVisible();
        net.sourceforge.atunes.model.ColumnSort columnSort32 = columnBean0.getSort();
        int int33 = columnBean0.getOrder();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + submissionState24 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState24.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + columnSort28 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort28.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + columnSort32 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort32.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        net.sourceforge.atunes.model.IFontBean iFontBean10 = fontSettings0.getFont();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(iFontBean10);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        cDMetadata0.setAlbum("");
        java.lang.String str11 = cDMetadata0.getAlbumArtist();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/rss/channel/title" + "'", str11, "/rss/channel/title");
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        throwableRankList0.clear();
        java.util.List<java.lang.Throwable> throwableList8 = throwableRankList0.getNFirstElements(10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList11 = throwableRankList9.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList14 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException18 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException16);
        java.lang.Throwable throwable19 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable19);
        java.lang.Throwable[] throwableArray21 = searchQuerySyntaxException20.getSuppressed();
        throwableRankList14.replaceItem((java.lang.Throwable) searchQuerySyntaxException16, (java.lang.Throwable) searchQuerySyntaxException20);
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException24 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchQuerySyntaxException26);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException31);
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException13, (java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException36 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int37 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException34);
        java.util.List<java.lang.Throwable> throwableList39 = throwableRankList0.getNFirstElements((int) '#');
        int int40 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList8);
        org.junit.Assert.assertNotNull(throwableList11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(throwableList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        int int9 = columnBean0.getOrder();
        boolean boolean11 = columnBean0.equals((java.lang.Object) (byte) 10);
        columnBean0.setVisible(false);
        int int14 = columnBean0.getOrder();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getGenre();
        java.lang.String str7 = cDMetadata1.getTitle((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getNameXPath();
        java.lang.String str2 = feedType0.getAuthorXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/title" + "'", str1, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./author" + "'", str2, "./author");
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        lookAndFeelBean0.setName("./summary");
        java.lang.String str3 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./summary");
        lookAndFeelBean0.setName("rm");
        java.lang.String str8 = lookAndFeelBean0.getName();
        java.lang.String str9 = lookAndFeelBean0.getSkin();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "rm" + "'", str8, "rm");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "./summary" + "'", str9, "./summary");
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException9.getSuppressed();
        java.lang.String str11 = searchQuerySyntaxException9.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str11, "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        boolean boolean1 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean2 = null;
        fontSettings0.setFont(iFontBean2);
        fontSettings0.setUseFontSmoothingSettingsFromOs(true);
        net.sourceforge.atunes.model.IFontBean iFontBean6 = fontSettings0.getFont();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(iFontBean6);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.ColumnBean columnBean2 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean3 = columnBean2.isVisible();
        columnBean2.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean2.setSort(columnSort6);
        net.sourceforge.atunes.model.ColumnBean columnBean8 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean9 = columnBean8.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState10 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean11 = columnBean8.equals((java.lang.Object) submissionState10);
        columnBean8.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort14 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean8.setSort(columnSort14);
        columnBean2.setSort(columnSort14);
        columnBean0.setSort(columnSort14);
        columnBean0.setWidth((-1));
        boolean boolean20 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + columnSort6 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort6.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + submissionState10 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState10.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + columnSort14 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort14.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.util.List<java.lang.String> strList1 = cDMetadata0.getArtistNames();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getTrackNames();
        java.util.List<java.lang.String> strList3 = cDMetadata0.getComposerNames();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(strList3);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        java.lang.Throwable[] throwableArray2 = searchQuerySyntaxException1.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException3 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        java.lang.String str4 = searchIndexNotAvailableException3.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str4, "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.PlaybackState playbackState8 = net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED;
        boolean boolean9 = fontSettings0.equals((java.lang.Object) playbackState8);
        fontSettings0.setUseFontSmoothingSettingsFromOs(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + playbackState8 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED + "'", playbackState8.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        cDMetadata0.setAlbumArtist("10.52.35  ");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = applicationVersion9.getVersionType();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str15 = applicationVersion9.toString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./pubDate" + "'", str14, "./pubDate");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 mpc " + "'", str15, "1.0.0 mpc ");
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        cDMetadata0.setDisc(0);
        java.util.List<java.lang.String> strList13 = cDMetadata0.getComposerNames();
        cDMetadata0.setDisc((int) (byte) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType19 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion24 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType19, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str25 = applicationVersion24.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType26 = applicationVersion24.getVersionType();
        java.lang.String str27 = applicationVersion24.getDownloadURL();
        java.lang.String str28 = applicationVersion24.getDirectDownloadURL();
        int int29 = applicationVersion9.compareTo(applicationVersion24);
        java.lang.String str30 = applicationVersion24.getDirectDownloadURL();
        java.lang.String str31 = applicationVersion24.getDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + versionType19 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType19.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./title" + "'", str25, "./title");
        org.junit.Assert.assertTrue("'" + versionType26 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType26.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "./description" + "'", str27, "./description");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "./pubDate" + "'", str28, "./pubDate");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "./pubDate" + "'", str30, "./pubDate");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "./description" + "'", str31, "./description");
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType16 = applicationVersion13.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion21 = new net.sourceforge.atunes.model.ApplicationVersion("1.0.0 ", (int) (short) 10, (int) '4', (int) '#', versionType16, "", "./enclosure/@url", "SOCKS_PROXY", "./enclosure/@url");
        java.lang.String str22 = applicationVersion21.getName();
        java.lang.String str23 = applicationVersion21.toString();
        net.sourceforge.atunes.model.FeedType feedType24 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str25 = feedType24.getTypeXPath();
        java.lang.String str26 = feedType24.getUrlXPath();
        boolean boolean27 = applicationVersion21.equals((java.lang.Object) feedType24);
        java.lang.String str28 = applicationVersion21.getDate();
        java.lang.String str29 = applicationVersion21.toString();
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType16 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType16.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "10.52.35  " + "'", str23, "10.52.35  ");
        org.junit.Assert.assertTrue("'" + feedType24 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType24.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./link[@rel='enclosure']/@type" + "'", str25, "./link[@rel='enclosure']/@type");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1.0.0 " + "'", str28, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "10.52.35  " + "'", str29, "10.52.35  ");
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList4 = cDMetadata0.getTrackNames();
        java.util.List<java.lang.String> strList5 = cDMetadata0.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str7 = cDMetadata6.getGenre();
        java.lang.String str8 = cDMetadata6.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str10 = cDMetadata9.getGenre();
        java.util.List<java.lang.String> strList11 = cDMetadata9.getComposerNames();
        java.lang.String str12 = cDMetadata9.getAlbum();
        java.util.List<java.lang.Integer> intList13 = cDMetadata9.getTracks();
        int int14 = cDMetadata9.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata15 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str16 = cDMetadata15.getGenre();
        java.util.List<java.lang.String> strList17 = cDMetadata15.getComposerNames();
        java.lang.String str18 = cDMetadata15.getAlbum();
        java.util.List<java.lang.Integer> intList19 = cDMetadata15.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata20 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata20.setAlbumArtist("");
        java.lang.String str24 = cDMetadata20.getTitle((int) (byte) -1);
        java.lang.String[] strArray26 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        cDMetadata20.setTrackNames((java.util.List<java.lang.String>) strList27);
        cDMetadata15.setTrackNames((java.util.List<java.lang.String>) strList27);
        cDMetadata15.setYear((int) (short) 1);
        int int33 = cDMetadata15.getYear();
        java.lang.String str34 = cDMetadata15.getGenre();
        cDMetadata15.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata37 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata37.setAlbumArtist("");
        java.lang.String str40 = cDMetadata37.getGenre();
        java.lang.String[] strArray42 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        cDMetadata37.setTrackNames((java.util.List<java.lang.String>) strList43);
        cDMetadata15.setTrackNames((java.util.List<java.lang.String>) strList43);
        cDMetadata9.setComposerNames((java.util.List<java.lang.String>) strList43);
        cDMetadata6.setArtistNames((java.util.List<java.lang.String>) strList43);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList43);
        net.sourceforge.atunes.model.CDMetadata cDMetadata50 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata50.setAlbumArtist("");
        java.lang.String str53 = cDMetadata50.getGenre();
        java.lang.String[] strArray55 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        cDMetadata50.setTrackNames((java.util.List<java.lang.String>) strList56);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList68 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable69 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException70 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable69);
        java.lang.Throwable[] throwableArray71 = searchQuerySyntaxException70.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException72 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException70);
        java.lang.Throwable throwable73 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException74 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable73);
        java.lang.Throwable[] throwableArray75 = searchQuerySyntaxException74.getSuppressed();
        throwableRankList68.replaceItem((java.lang.Throwable) searchQuerySyntaxException70, (java.lang.Throwable) searchQuerySyntaxException74);
        java.lang.Integer int77 = throwableRankList59.getCount((java.lang.Throwable) searchQuerySyntaxException74);
        java.lang.Throwable throwable78 = null;
        java.lang.Throwable throwable79 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException80 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable79);
        throwableRankList59.replaceItem(throwable78, (java.lang.Throwable) searchQuerySyntaxException80);
        java.util.List<java.lang.Integer> intList83 = throwableRankList59.getNFirstElementCounts((int) (byte) 1);
        int int84 = throwableRankList59.size();
        java.util.List<java.lang.Integer> intList86 = throwableRankList59.getNFirstElementCounts((int) (short) 10);
        cDMetadata50.setTracks(intList86);
        cDMetadata0.setTracks(intList86);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(intList83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(intList86);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        java.lang.String str22 = applicationVersion17.toString();
        java.lang.String str23 = applicationVersion17.getDownloadURL();
        int int24 = applicationVersion17.getRevisionNumber();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0.0 mpc " + "'", str22, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "./description" + "'", str23, "./description");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) (byte) 1);
        int int25 = throwableRankList0.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Integer int44 = throwableRankList26.getCount((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList47 = throwableRankList45.getNFirstElements((int) (short) 10);
        throwableRankList45.clear();
        int int49 = throwableRankList45.size();
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList52 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable53 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException54 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable53);
        java.lang.Throwable[] throwableArray55 = searchQuerySyntaxException54.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException56 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException54);
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        throwableRankList52.replaceItem((java.lang.Throwable) searchQuerySyntaxException54, (java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException51.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int62 = throwableRankList45.getCount((java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException41.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        java.lang.Throwable[] throwableArray67 = searchQuerySyntaxException66.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException69 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList70 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable71 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException72 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable71);
        java.lang.Throwable[] throwableArray73 = searchQuerySyntaxException72.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException74 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException72);
        java.lang.Throwable throwable75 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable75);
        java.lang.Throwable[] throwableArray77 = searchQuerySyntaxException76.getSuppressed();
        throwableRankList70.replaceItem((java.lang.Throwable) searchQuerySyntaxException72, (java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException79 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException80 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException79);
        inconsistentRepositoryException69.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException80);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException66, (java.lang.Throwable) inconsistentRepositoryException69);
        java.lang.String str83 = searchQuerySyntaxException66.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableList47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str83, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toString();
        java.lang.String str14 = applicationVersion9.getChanges();
        int int15 = applicationVersion9.getMajorNumber();
        java.lang.String str16 = applicationVersion9.toString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 mpc " + "'", str13, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "1.0.0 mpc " + "'", str16, "1.0.0 mpc ");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.ColumnBean columnBean3 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean4 = columnBean3.isVisible();
        columnBean3.setOrder((int) (byte) -1);
        columnBean3.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort9 = columnBean3.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute10 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean11 = columnBean3.equals((java.lang.Object) textTagAttribute10);
        columnBean3.setVisible(true);
        columnBean3.setOrder((int) (short) 100);
        columnBean3.setOrder(100);
        boolean boolean18 = columnBean0.equals((java.lang.Object) columnBean3);
        columnBean0.setOrder((int) (short) -1);
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(columnSort9);
        org.junit.Assert.assertTrue("'" + textTagAttribute10 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute10.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList0.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Integer int38 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList41 = throwableRankList0.getNFirstElementCounts((int) (short) -1);
        int int42 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(intList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        int int4 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList5 = throwableRankList0.getOrder();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList15 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable16 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException17 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable16);
        java.lang.Throwable[] throwableArray18 = searchQuerySyntaxException17.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException19 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException17);
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        throwableRankList15.replaceItem((java.lang.Throwable) searchQuerySyntaxException17, (java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Integer int24 = throwableRankList6.getCount((java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList25 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable26 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable26);
        java.lang.Throwable[] throwableArray28 = searchQuerySyntaxException27.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException29 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException27);
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        throwableRankList25.replaceItem((java.lang.Throwable) searchQuerySyntaxException27, (java.lang.Throwable) searchQuerySyntaxException31);
        java.util.List<java.lang.Throwable> throwableList34 = throwableRankList25.getOrder();
        java.lang.Throwable throwable35 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException36 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable35);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList37 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException41 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException39);
        java.lang.Throwable throwable42 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException43 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable42);
        java.lang.Throwable[] throwableArray44 = searchQuerySyntaxException43.getSuppressed();
        throwableRankList37.replaceItem((java.lang.Throwable) searchQuerySyntaxException39, (java.lang.Throwable) searchQuerySyntaxException43);
        searchQuerySyntaxException36.addSuppressed((java.lang.Throwable) searchQuerySyntaxException43);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException36);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException48 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException36);
        java.lang.Integer int49 = throwableRankList25.getCount((java.lang.Throwable) searchIndexNotAvailableException48);
        java.lang.Integer int50 = throwableRankList6.getCount((java.lang.Throwable) searchIndexNotAvailableException48);
        throwableRankList0.addItem((java.lang.Throwable) searchIndexNotAvailableException48);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException52 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException48);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList53 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable54 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable54);
        java.lang.Throwable[] throwableArray56 = searchQuerySyntaxException55.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException57 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable58 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException59 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable58);
        java.lang.Throwable[] throwableArray60 = searchQuerySyntaxException59.getSuppressed();
        throwableRankList53.replaceItem((java.lang.Throwable) searchQuerySyntaxException55, (java.lang.Throwable) searchQuerySyntaxException59);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList62 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable63 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException64 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable63);
        java.lang.Throwable[] throwableArray65 = searchQuerySyntaxException64.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException66 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException64);
        java.lang.Throwable throwable67 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable67);
        java.lang.Throwable[] throwableArray69 = searchQuerySyntaxException68.getSuppressed();
        throwableRankList62.replaceItem((java.lang.Throwable) searchQuerySyntaxException64, (java.lang.Throwable) searchQuerySyntaxException68);
        java.lang.Integer int71 = throwableRankList53.getCount((java.lang.Throwable) searchQuerySyntaxException68);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList72 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable73 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException74 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable73);
        java.lang.Throwable[] throwableArray75 = searchQuerySyntaxException74.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException76 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException74);
        java.lang.Throwable throwable77 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException78 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable77);
        java.lang.Throwable[] throwableArray79 = searchQuerySyntaxException78.getSuppressed();
        throwableRankList72.replaceItem((java.lang.Throwable) searchQuerySyntaxException74, (java.lang.Throwable) searchQuerySyntaxException78);
        java.util.List<java.lang.Throwable> throwableList81 = throwableRankList72.getOrder();
        java.lang.Throwable throwable82 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException83 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable82);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList84 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable85 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException86 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable85);
        java.lang.Throwable[] throwableArray87 = searchQuerySyntaxException86.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException88 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException86);
        java.lang.Throwable throwable89 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException90 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable89);
        java.lang.Throwable[] throwableArray91 = searchQuerySyntaxException90.getSuppressed();
        throwableRankList84.replaceItem((java.lang.Throwable) searchQuerySyntaxException86, (java.lang.Throwable) searchQuerySyntaxException90);
        searchQuerySyntaxException83.addSuppressed((java.lang.Throwable) searchQuerySyntaxException90);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException94 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException83);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException95 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException83);
        java.lang.Integer int96 = throwableRankList72.getCount((java.lang.Throwable) searchIndexNotAvailableException95);
        java.lang.Integer int97 = throwableRankList53.getCount((java.lang.Throwable) searchIndexNotAvailableException95);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException98 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException95);
        searchIndexNotAvailableException48.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException95);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableList5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableList34);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableList81);
        org.junit.Assert.assertNotNull(throwableArray87);
        org.junit.Assert.assertNotNull(throwableArray91);
        org.junit.Assert.assertNull(int96);
        org.junit.Assert.assertNull(int97);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getDisc();
        net.sourceforge.atunes.model.CDMetadata cDMetadata19 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str20 = cDMetadata19.getGenre();
        java.util.List<java.lang.String> strList21 = cDMetadata19.getComposerNames();
        java.lang.String str22 = cDMetadata19.getAlbum();
        java.util.List<java.lang.Integer> intList23 = cDMetadata19.getTracks();
        int int24 = cDMetadata19.getDisc();
        net.sourceforge.atunes.model.CDMetadata cDMetadata25 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str26 = cDMetadata25.getGenre();
        java.util.List<java.lang.String> strList27 = cDMetadata25.getComposerNames();
        java.lang.String str28 = cDMetadata25.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata29 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata29.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList32 = cDMetadata29.getTracks();
        cDMetadata29.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList35 = cDMetadata29.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata36 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata36.setAlbumArtist("");
        java.lang.String str39 = cDMetadata36.getGenre();
        java.lang.String[] strArray41 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        cDMetadata36.setTrackNames((java.util.List<java.lang.String>) strList42);
        cDMetadata29.setTrackNames((java.util.List<java.lang.String>) strList42);
        cDMetadata25.setTrackNames((java.util.List<java.lang.String>) strList42);
        java.util.List<java.lang.String> strList47 = cDMetadata25.getTrackNames();
        cDMetadata19.setComposerNames(strList47);
        cDMetadata0.setTrackNames(strList47);
        java.lang.String str50 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(intList32);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute7 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean8 = columnBean0.equals((java.lang.Object) textTagAttribute7);
        columnBean0.setOrder(10);
        boolean boolean11 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + textTagAttribute7 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute7.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings();
        boolean boolean4 = fontSettings3.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean5 = null;
        fontSettings3.setFont(iFontBean5);
        fontSettings3.setUseFontSmoothingSettingsFromOs(true);
        boolean boolean9 = columnBean0.equals((java.lang.Object) true);
        net.sourceforge.atunes.model.ColumnBean columnBean10 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean11 = columnBean10.isVisible();
        columnBean10.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort14 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean10.setSort(columnSort14);
        net.sourceforge.atunes.model.ColumnBean columnBean16 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean17 = columnBean16.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState18 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean19 = columnBean16.equals((java.lang.Object) submissionState18);
        columnBean16.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort22 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean16.setSort(columnSort22);
        columnBean10.setSort(columnSort22);
        columnBean0.setSort(columnSort22);
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + columnSort14 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort14.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + submissionState18 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState18.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + columnSort22 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort22.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getDurationXPath();
        java.lang.String str3 = feedType0.getTitleXPath();
        java.lang.String str4 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./duration" + "'", str2, "./duration");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./title" + "'", str3, "./title");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./title" + "'", str4, "./title");
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType20 = applicationVersion17.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion25 = new net.sourceforge.atunes.model.ApplicationVersion("1.0.0 ", (int) (short) 10, (int) '4', (int) '#', versionType20, "", "./enclosure/@url", "SOCKS_PROXY", "./enclosure/@url");
        java.lang.String str26 = applicationVersion25.getName();
        java.lang.String str27 = applicationVersion25.toString();
        net.sourceforge.atunes.model.FeedType feedType28 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str29 = feedType28.getTypeXPath();
        java.lang.String str30 = feedType28.getUrlXPath();
        boolean boolean31 = applicationVersion25.equals((java.lang.Object) feedType28);
        java.lang.String str32 = applicationVersion25.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType33 = applicationVersion25.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion38 = new net.sourceforge.atunes.model.ApplicationVersion("/feed/entry", (int) ' ', (int) (byte) 100, (int) (short) 10, versionType33, "hi!", "rm", "rm", "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType20 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType20.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "10.52.35  " + "'", str27, "10.52.35  ");
        org.junit.Assert.assertTrue("'" + feedType28 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType28.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./link[@rel='enclosure']/@type" + "'", str29, "./link[@rel='enclosure']/@type");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0.0 " + "'", str32, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType33 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType33.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setSkin("");
        java.lang.String str6 = lookAndFeelBean0.getSkin();
        java.lang.String str7 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("/feed/title");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getDurationXPath();
        java.lang.String str5 = feedType0.getTitleXPath();
        java.lang.String str6 = feedType0.getDateXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./duration" + "'", str4, "./duration");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./title" + "'", str5, "./title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./pubDate" + "'", str6, "./pubDate");
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        int int8 = columnBean0.getWidth();
        columnBean0.setWidth((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) (byte) 1);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(0);
        java.util.List<java.lang.Integer> intList28 = throwableRankList0.getNFirstElementCounts((int) 'a');
        int int29 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList31 = throwableRankList0.getNFirstElements((int) (short) 0);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(intList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(throwableList31);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.getChanges();
        int int16 = applicationVersion9.getMinorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./title" + "'", str15, "./title");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setDisc((int) (short) -1);
        java.util.List<java.lang.String> strList9 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getAuthorXPath();
        java.lang.String str3 = feedType0.getEntryXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./author" + "'", str2, "./author");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/rss/channel/item" + "'", str3, "/rss/channel/item");
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getTypeXPath();
        java.lang.String str3 = feedType0.getTypeXPath();
        java.lang.String str4 = feedType0.getDescriptionXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        java.lang.String str6 = feedType0.getNameXPath();
        java.lang.String str7 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@type" + "'", str2, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./enclosure/@type" + "'", str3, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./description" + "'", str4, "./description");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/title" + "'", str5, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/rss/channel/title" + "'", str6, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@url" + "'", str7, "./enclosure/@url");
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        java.util.List<java.lang.String> strList11 = cDMetadata0.getComposerNames();
        cDMetadata0.setYear(10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata14 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata14.setAlbumArtist("");
        java.lang.String str18 = cDMetadata14.getTitle((int) (byte) -1);
        java.lang.String[] strArray20 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        cDMetadata14.setTrackNames((java.util.List<java.lang.String>) strList21);
        cDMetadata14.setAlbumArtist("/rss/channel/item");
        java.util.List<java.lang.Integer> intList26 = cDMetadata14.getTracks();
        java.lang.String str28 = cDMetadata14.getTitle(100);
        net.sourceforge.atunes.model.ColumnBean columnBean29 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean30 = columnBean29.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState31 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean32 = columnBean29.equals((java.lang.Object) submissionState31);
        net.sourceforge.atunes.model.CDMetadata cDMetadata33 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata33.setAlbumArtist("");
        java.lang.String str37 = cDMetadata33.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata38 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata38.setAlbumArtist("");
        java.lang.String str42 = cDMetadata38.getTitle((int) (byte) -1);
        java.lang.String[] strArray44 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        cDMetadata38.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata33.setArtistNames((java.util.List<java.lang.String>) strList45);
        boolean boolean49 = columnBean29.equals((java.lang.Object) strList45);
        cDMetadata14.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata0.setAlbum("net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + submissionState31 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState31.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.getDirectDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./pubDate" + "'", str15, "./pubDate");
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDateXPath();
        java.lang.String str4 = feedType0.getDescriptionXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./pubDate" + "'", str3, "./pubDate");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./description" + "'", str4, "./description");
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean0.setSort(columnSort6);
        int int8 = columnBean0.getWidth();
        columnBean0.setVisible(false);
        int int11 = columnBean0.getOrder();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + columnSort6 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort6.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList8 = throwableRankList6.getNFirstElements((int) (short) 10);
        throwableRankList6.clear();
        java.util.List<java.lang.Integer> intList11 = throwableRankList6.getNFirstElementCounts(150);
        cDMetadata1.setTracks(intList11);
        java.lang.String str13 = cDMetadata1.getAlbum();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwableList8);
        org.junit.Assert.assertNotNull(intList11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getTypeXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getTitleXPath();
        java.lang.String str7 = feedType0.getDescriptionXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@type" + "'", str4, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./title" + "'", str6, "./title");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./description" + "'", str7, "./description");
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.util.List<java.lang.String> strList1 = cDMetadata0.getArtistNames();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getTrackNames();
        java.lang.String str3 = cDMetadata0.getAlbumArtist();
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        cDMetadata0.setDisc((int) (byte) -1);
        java.lang.String str8 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        java.lang.String str19 = cDMetadata0.getGenre();
        cDMetadata0.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str25 = cDMetadata22.getGenre();
        java.lang.String[] strArray27 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList28);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList28);
        cDMetadata0.setAlbum("flv");
        net.sourceforge.atunes.model.CDMetadata cDMetadata34 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata34.setAlbumArtist("");
        java.lang.String str37 = cDMetadata34.getGenre();
        java.util.List<java.lang.String> strList38 = cDMetadata34.getTrackNames();
        java.lang.String str39 = cDMetadata34.getAlbum();
        java.lang.String[] strArray60 = new java.lang.String[] { "./title", "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException", "1.0.0 ", "net.sourceforge.atunes.model.SearchQuerySyntaxException", "/feed/title", "./updated", "./updated", "1.0.0 ", "./title", "./summary", "./description", "mac", "flac", "1.0.0 ", "./enclosure/@url", "./enclosure/@url", "hi!", "./summary", "flac", "1.0.0 " };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        cDMetadata34.setTrackNames((java.util.List<java.lang.String>) strList61);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList61);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        fontSettings0.setUseFontSmoothing(false);
        boolean boolean6 = fontSettings0.equals((java.lang.Object) 10L);
        java.lang.Class<?> wildcardClass7 = fontSettings0.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        java.util.List<java.lang.String> strList7 = null;
        cDMetadata0.setComposerNames(strList7);
        java.lang.String str9 = cDMetadata0.getGenre();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException14 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str4 = cDMetadata0.getTitle((int) (byte) -1);
        java.lang.String[] strArray6 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList7);
        int int10 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList11 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList23 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException27 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException25);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        throwableRankList23.replaceItem((java.lang.Throwable) searchQuerySyntaxException25, (java.lang.Throwable) searchQuerySyntaxException29);
        java.util.List<java.lang.Throwable> throwableList32 = throwableRankList23.getOrder();
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        searchQuerySyntaxException34.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException46 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int47 = throwableRankList23.getCount((java.lang.Throwable) searchIndexNotAvailableException46);
        throwableRankList0.addItem((java.lang.Throwable) searchIndexNotAvailableException46);
        java.util.List<java.lang.Integer> intList50 = throwableRankList0.getNFirstElementCounts(90);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList51 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList53 = throwableRankList51.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable54 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable54);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList56 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException60 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Throwable throwable61 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException62 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable61);
        java.lang.Throwable[] throwableArray63 = searchQuerySyntaxException62.getSuppressed();
        throwableRankList56.replaceItem((java.lang.Throwable) searchQuerySyntaxException58, (java.lang.Throwable) searchQuerySyntaxException62);
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchQuerySyntaxException62);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable67 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable67);
        java.lang.Throwable[] throwableArray69 = searchQuerySyntaxException68.getSuppressed();
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchQuerySyntaxException68);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException71 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable72 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException73 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable72);
        java.lang.Throwable[] throwableArray74 = searchQuerySyntaxException73.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException75 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException73);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException73);
        throwableRankList51.replaceItem((java.lang.Throwable) searchQuerySyntaxException55, (java.lang.Throwable) searchQuerySyntaxException76);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException55);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList79 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList81 = throwableRankList79.getNFirstElements((int) (short) 10);
        int int82 = throwableRankList79.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList83 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable84 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException85 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable84);
        java.lang.Throwable[] throwableArray86 = searchQuerySyntaxException85.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException87 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException85);
        java.lang.Throwable throwable88 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException89 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable88);
        java.lang.Throwable[] throwableArray90 = searchQuerySyntaxException89.getSuppressed();
        throwableRankList83.replaceItem((java.lang.Throwable) searchQuerySyntaxException85, (java.lang.Throwable) searchQuerySyntaxException89);
        java.lang.Throwable[] throwableArray92 = searchQuerySyntaxException85.getSuppressed();
        java.lang.Integer int93 = throwableRankList79.getCount((java.lang.Throwable) searchQuerySyntaxException85);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException85);
        int int95 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableList32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(intList50);
        org.junit.Assert.assertNotNull(throwableList53);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableList81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNull(int93);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 3 + "'", int95 == 3);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = applicationVersion9.getVersionType();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str15 = applicationVersion9.getDirectDownloadURL();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType16 = applicationVersion9.getVersionType();
        int int17 = applicationVersion9.getMinorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./pubDate" + "'", str14, "./pubDate");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./pubDate" + "'", str15, "./pubDate");
        org.junit.Assert.assertTrue("'" + versionType16 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType16.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        net.sourceforge.atunes.model.IFontBean iFontBean0 = null;
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings(iFontBean0, true, true);
        fontSettings3.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean6 = fontSettings3.getFont();
        boolean boolean7 = fontSettings3.isUseFontSmoothingSettingsFromOs();
        fontSettings3.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean10 = fontSettings3.getFont();
        org.junit.Assert.assertNull(iFontBean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(iFontBean10);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        int int6 = cDMetadata0.getDisc();
        java.lang.String str8 = cDMetadata0.getTitle(0);
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getDisc();
        cDMetadata0.setAlbumArtist("10.52.35  ");
        java.lang.String str22 = cDMetadata0.getTitle((int) (short) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getAuthorXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./author" + "'", str1, "./author");
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Integer> intList26 = throwableRankList0.getNFirstElementCounts((int) '#');
        java.lang.Throwable throwable27 = null;
        java.lang.Integer int28 = throwableRankList0.getCount(throwable27);
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(intList26);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        java.util.List<java.lang.String> strList18 = cDMetadata0.getArtistNames();
        java.util.List<java.lang.String> strList19 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        java.lang.String str12 = cDMetadata9.getGenre();
        java.lang.String[] strArray14 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setYear(150);
        java.util.List<java.lang.Integer> intList21 = cDMetadata0.getTracks();
        java.lang.String str22 = cDMetadata0.getGenre();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException1 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException2 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList0.replaceItem((java.lang.Throwable) inconsistentRepositoryException1, (java.lang.Throwable) inconsistentRepositoryException2);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) inconsistentRepositoryException2);
        java.lang.Throwable[] throwableArray5 = inconsistentRepositoryException2.getSuppressed();
        java.lang.String str6 = inconsistentRepositoryException2.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str6, "net.sourceforge.atunes.model.InconsistentRepositoryException");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Integer int16 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException18);
        java.lang.Integer int21 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException20);
        java.lang.Throwable throwable22 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable22);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList24 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException28 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException26);
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        throwableRankList24.replaceItem((java.lang.Throwable) searchQuerySyntaxException26, (java.lang.Throwable) searchQuerySyntaxException30);
        searchQuerySyntaxException23.addSuppressed((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException23.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList36 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        java.lang.Throwable[] throwableArray39 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException40 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        throwableRankList36.replaceItem((java.lang.Throwable) searchQuerySyntaxException38, (java.lang.Throwable) searchQuerySyntaxException42);
        java.lang.Throwable[] throwableArray45 = searchQuerySyntaxException38.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchIndexNotAvailableException35, (java.lang.Throwable) searchQuerySyntaxException38);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException47 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException35);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray45);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.util.List<java.lang.Integer> intList20 = throwableRankList0.getNFirstElementCounts((int) (short) -1);
        int int21 = throwableRankList0.size();
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        int int14 = applicationVersion9.getMinorNumber();
        java.lang.String str15 = applicationVersion9.getDate();
        java.lang.String str16 = applicationVersion9.getDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./title" + "'", str15, "./title");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./description" + "'", str16, "./description");
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setDisc((int) (short) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str10 = cDMetadata9.getGenre();
        java.util.List<java.lang.String> strList11 = cDMetadata9.getComposerNames();
        java.lang.String str12 = cDMetadata9.getAlbum();
        java.util.List<java.lang.Integer> intList13 = cDMetadata9.getTracks();
        int int14 = cDMetadata9.getYear();
        java.util.List<java.lang.String> strList15 = cDMetadata9.getArtistNames();
        cDMetadata9.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str19 = cDMetadata18.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata20 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata20.setAlbumArtist("");
        java.lang.String str23 = cDMetadata20.getGenre();
        java.lang.String[] strArray25 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        cDMetadata20.setTrackNames((java.util.List<java.lang.String>) strList26);
        cDMetadata18.setComposerNames((java.util.List<java.lang.String>) strList26);
        net.sourceforge.atunes.model.CDMetadata cDMetadata30 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str31 = cDMetadata30.getGenre();
        java.util.List<java.lang.String> strList32 = cDMetadata30.getComposerNames();
        java.lang.String str33 = cDMetadata30.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata34 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata34.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList37 = cDMetadata34.getTracks();
        cDMetadata34.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList40 = cDMetadata34.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata41 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata41.setAlbumArtist("");
        java.lang.String str44 = cDMetadata41.getGenre();
        java.lang.String[] strArray46 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        cDMetadata41.setTrackNames((java.util.List<java.lang.String>) strList47);
        cDMetadata34.setTrackNames((java.util.List<java.lang.String>) strList47);
        cDMetadata30.setTrackNames((java.util.List<java.lang.String>) strList47);
        cDMetadata18.setTrackNames((java.util.List<java.lang.String>) strList47);
        cDMetadata9.setArtistNames((java.util.List<java.lang.String>) strList47);
        net.sourceforge.atunes.model.CDMetadata cDMetadata54 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata54.setAlbumArtist("");
        java.lang.String str58 = cDMetadata54.getTitle((int) (byte) -1);
        java.lang.String[] strArray60 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        cDMetadata54.setTrackNames((java.util.List<java.lang.String>) strList61);
        cDMetadata54.setAlbumArtist("/rss/channel/item");
        java.util.List<java.lang.Integer> intList66 = cDMetadata54.getTracks();
        java.lang.String str68 = cDMetadata54.getTitle(100);
        net.sourceforge.atunes.model.ColumnBean columnBean69 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean70 = columnBean69.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState71 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean72 = columnBean69.equals((java.lang.Object) submissionState71);
        net.sourceforge.atunes.model.CDMetadata cDMetadata73 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata73.setAlbumArtist("");
        java.lang.String str77 = cDMetadata73.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata78 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata78.setAlbumArtist("");
        java.lang.String str82 = cDMetadata78.getTitle((int) (byte) -1);
        java.lang.String[] strArray84 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        cDMetadata78.setTrackNames((java.util.List<java.lang.String>) strList85);
        cDMetadata73.setArtistNames((java.util.List<java.lang.String>) strList85);
        boolean boolean89 = columnBean69.equals((java.lang.Object) strList85);
        cDMetadata54.setTrackNames((java.util.List<java.lang.String>) strList85);
        cDMetadata9.setArtistNames((java.util.List<java.lang.String>) strList85);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList85);
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(intList13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(intList37);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(intList66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + submissionState71 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState71.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.BETA;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("10.52.35  ", 3, (int) '4', (int) '#', versionType4, "/rss/channel/title", "hi!", "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException", "/feed/title");
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.BETA + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.BETA));
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        boolean boolean8 = columnBean0.isVisible();
        int int9 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getDurationXPath();
        java.lang.String str6 = feedType0.getAuthorXPath();
        java.lang.String str7 = feedType0.getAuthorXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./duration" + "'", str5, "./duration");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./author" + "'", str6, "./author");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./author" + "'", str7, "./author");
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        boolean boolean1 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean2 = null;
        fontSettings0.setFont(iFontBean2);
        net.sourceforge.atunes.model.IFontBean iFontBean4 = null;
        fontSettings0.setFont(iFontBean4);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute7 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean8 = columnBean0.equals((java.lang.Object) textTagAttribute7);
        columnBean0.setVisible(true);
        columnBean0.setOrder(3);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + textTagAttribute7 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute7.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        int int16 = applicationVersion13.getMajorNumber();
        int int17 = applicationVersion13.getMinorNumber();
        java.lang.String str18 = applicationVersion13.getName();
        java.lang.String str19 = applicationVersion13.getChanges();
        boolean boolean20 = columnBean0.equals((java.lang.Object) applicationVersion13);
        net.sourceforge.atunes.model.ColumnSort columnSort21 = columnBean0.getSort();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "./title" + "'", str19, "./title");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(columnSort21);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata2 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata2.setAlbumArtist("");
        java.lang.String str5 = cDMetadata2.getGenre();
        java.lang.String[] strArray7 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        cDMetadata2.setTrackNames((java.util.List<java.lang.String>) strList8);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList8);
        java.lang.String str12 = cDMetadata0.getAlbum();
        cDMetadata0.setAlbum("./duration");
        java.util.List<java.lang.String> strList15 = cDMetadata0.getTrackNames();
        java.util.List<java.lang.String> strList16 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getTypeXPath();
        java.lang.String str7 = feedType0.getUrlXPath();
        java.lang.String str8 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./enclosure/@type" + "'", str6, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@url" + "'", str7, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./enclosure/@url" + "'", str8, "./enclosure/@url");
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.PlaybackState playbackState8 = net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED;
        boolean boolean9 = fontSettings0.equals((java.lang.Object) playbackState8);
        net.sourceforge.atunes.model.ColumnBean columnBean10 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty11 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean12 = columnBean10.equals((java.lang.Object) audioObjectProperty11);
        boolean boolean13 = columnBean10.isVisible();
        boolean boolean14 = fontSettings0.equals((java.lang.Object) boolean13);
        fontSettings0.setUseFontSmoothing(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + playbackState8 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED + "'", playbackState8.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + audioObjectProperty11 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty11.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        int int16 = applicationVersion13.getMajorNumber();
        int int17 = applicationVersion13.getMinorNumber();
        java.lang.String str18 = applicationVersion13.getName();
        java.lang.String str19 = applicationVersion13.getChanges();
        boolean boolean20 = columnBean0.equals((java.lang.Object) applicationVersion13);
        columnBean0.setWidth(10);
        columnBean0.setOrder(2);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "./title" + "'", str19, "./title");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getDescriptionXPath();
        java.lang.String str3 = feedType0.getNameXPath();
        java.lang.String str4 = feedType0.getAuthorXPath();
        java.lang.String str5 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./summary" + "'", str2, "./summary");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/feed/title" + "'", str3, "/feed/title");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./author/name" + "'", str4, "./author/name");
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList0.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Integer int38 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        throwableRankList0.clear();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList40 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException44 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException42);
        java.lang.Throwable throwable45 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException46 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable45);
        java.lang.Throwable[] throwableArray47 = searchQuerySyntaxException46.getSuppressed();
        throwableRankList40.replaceItem((java.lang.Throwable) searchQuerySyntaxException42, (java.lang.Throwable) searchQuerySyntaxException46);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList49 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        java.lang.Throwable[] throwableArray52 = searchQuerySyntaxException51.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException53 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException51);
        java.lang.Throwable throwable54 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable54);
        java.lang.Throwable[] throwableArray56 = searchQuerySyntaxException55.getSuppressed();
        throwableRankList49.replaceItem((java.lang.Throwable) searchQuerySyntaxException51, (java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Integer int58 = throwableRankList40.getCount((java.lang.Throwable) searchQuerySyntaxException55);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        java.util.List<java.lang.Throwable> throwableList68 = throwableRankList59.getOrder();
        java.lang.Throwable throwable69 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException70 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable69);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList71 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable72 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException73 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable72);
        java.lang.Throwable[] throwableArray74 = searchQuerySyntaxException73.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException75 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException73);
        java.lang.Throwable throwable76 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException77 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable76);
        java.lang.Throwable[] throwableArray78 = searchQuerySyntaxException77.getSuppressed();
        throwableRankList71.replaceItem((java.lang.Throwable) searchQuerySyntaxException73, (java.lang.Throwable) searchQuerySyntaxException77);
        searchQuerySyntaxException70.addSuppressed((java.lang.Throwable) searchQuerySyntaxException77);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException81 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException70);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException82 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException70);
        java.lang.Integer int83 = throwableRankList59.getCount((java.lang.Throwable) searchIndexNotAvailableException82);
        java.lang.Integer int84 = throwableRankList40.getCount((java.lang.Throwable) searchIndexNotAvailableException82);
        java.lang.Throwable[] throwableArray85 = searchIndexNotAvailableException82.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException86 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException82);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList87 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable88 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException89 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable88);
        java.lang.Throwable[] throwableArray90 = searchQuerySyntaxException89.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException91 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException89);
        java.lang.Throwable throwable92 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException93 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable92);
        java.lang.Throwable[] throwableArray94 = searchQuerySyntaxException93.getSuppressed();
        throwableRankList87.replaceItem((java.lang.Throwable) searchQuerySyntaxException89, (java.lang.Throwable) searchQuerySyntaxException93);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException86, (java.lang.Throwable) searchQuerySyntaxException93);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException97 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException93);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException98 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException97);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException99 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException98);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableList68);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray78);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.ColumnBean columnBean2 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean3 = columnBean2.isVisible();
        columnBean2.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean2.setSort(columnSort6);
        net.sourceforge.atunes.model.ColumnBean columnBean8 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean9 = columnBean8.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState10 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean11 = columnBean8.equals((java.lang.Object) submissionState10);
        columnBean8.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort14 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean8.setSort(columnSort14);
        columnBean2.setSort(columnSort14);
        columnBean0.setSort(columnSort14);
        columnBean0.setVisible(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + columnSort6 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort6.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + submissionState10 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState10.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + columnSort14 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort14.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.PlaybackState playbackState8 = net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED;
        boolean boolean9 = fontSettings0.equals((java.lang.Object) playbackState8);
        net.sourceforge.atunes.model.ColumnBean columnBean10 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty11 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean12 = columnBean10.equals((java.lang.Object) audioObjectProperty11);
        boolean boolean13 = columnBean10.isVisible();
        boolean boolean14 = fontSettings0.equals((java.lang.Object) boolean13);
        boolean boolean15 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + playbackState8 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED + "'", playbackState8.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + audioObjectProperty11 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty11.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        cDMetadata0.setAlbumArtist("./description");
        cDMetadata0.setAlbumArtist("./description");
        java.lang.String str8 = cDMetadata0.getAlbumArtist();
        net.sourceforge.atunes.model.ColumnBean columnBean9 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean10 = columnBean9.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState11 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean12 = columnBean9.equals((java.lang.Object) submissionState11);
        net.sourceforge.atunes.model.CDMetadata cDMetadata13 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata13.setAlbumArtist("");
        java.lang.String str17 = cDMetadata13.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata18.setAlbumArtist("");
        java.lang.String str22 = cDMetadata18.getTitle((int) (byte) -1);
        java.lang.String[] strArray24 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        cDMetadata18.setTrackNames((java.util.List<java.lang.String>) strList25);
        cDMetadata13.setArtistNames((java.util.List<java.lang.String>) strList25);
        boolean boolean29 = columnBean9.equals((java.lang.Object) strList25);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList25);
        cDMetadata0.setDisc(1);
        java.util.List<java.lang.Integer> intList33 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./description" + "'", str8, "./description");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + submissionState11 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState11.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(intList33);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.PlaybackState playbackState8 = net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED;
        boolean boolean9 = fontSettings0.equals((java.lang.Object) playbackState8);
        net.sourceforge.atunes.model.CDMetadata cDMetadata10 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata10.setAlbumArtist("");
        java.lang.String str13 = cDMetadata10.getGenre();
        int int14 = cDMetadata10.getYear();
        int int15 = cDMetadata10.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata16 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str17 = cDMetadata16.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata18.setAlbumArtist("");
        java.lang.String str21 = cDMetadata18.getGenre();
        java.lang.String[] strArray23 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        cDMetadata18.setTrackNames((java.util.List<java.lang.String>) strList24);
        cDMetadata16.setComposerNames((java.util.List<java.lang.String>) strList24);
        cDMetadata10.setTrackNames((java.util.List<java.lang.String>) strList24);
        net.sourceforge.atunes.model.CDMetadata cDMetadata29 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str30 = cDMetadata29.getGenre();
        java.util.List<java.lang.String> strList31 = cDMetadata29.getComposerNames();
        java.lang.String str32 = cDMetadata29.getAlbum();
        java.util.List<java.lang.Integer> intList33 = cDMetadata29.getTracks();
        int int34 = cDMetadata29.getDisc();
        java.lang.String[] strArray42 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        cDMetadata29.setArtistNames((java.util.List<java.lang.String>) strList43);
        cDMetadata10.setArtistNames((java.util.List<java.lang.String>) strList43);
        net.sourceforge.atunes.model.CDMetadata cDMetadata47 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata47.setAlbumArtist("");
        java.lang.String str50 = cDMetadata47.getGenre();
        java.lang.String[] strArray52 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        cDMetadata47.setTrackNames((java.util.List<java.lang.String>) strList53);
        cDMetadata10.setTrackNames((java.util.List<java.lang.String>) strList53);
        boolean boolean57 = fontSettings0.equals((java.lang.Object) cDMetadata10);
        boolean boolean58 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute61 = net.sourceforge.atunes.model.TextTagAttribute.LYRICS;
        boolean boolean62 = fontSettings0.equals((java.lang.Object) textTagAttribute61);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + playbackState8 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED + "'", playbackState8.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(intList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + textTagAttribute61 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.LYRICS + "'", textTagAttribute61.equals(net.sourceforge.atunes.model.TextTagAttribute.LYRICS));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getEntryXPath();
        java.lang.String str7 = feedType0.getDurationXPath();
        java.lang.String str8 = feedType0.getDescriptionXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/rss/channel/item" + "'", str6, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./duration" + "'", str7, "./duration");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./description" + "'", str8, "./description");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata8 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str9 = cDMetadata8.getGenre();
        java.util.List<java.lang.String> strList10 = cDMetadata8.getComposerNames();
        java.lang.String str11 = cDMetadata8.getAlbum();
        java.util.List<java.lang.Integer> intList12 = cDMetadata8.getTracks();
        cDMetadata8.setAlbumArtist("mpc");
        java.lang.String str15 = cDMetadata8.getAlbum();
        boolean boolean16 = fontSettings0.equals((java.lang.Object) cDMetadata8);
        cDMetadata8.setDisc((int) (byte) -1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList21 = throwableRankList19.getNFirstElements((int) (short) 10);
        throwableRankList19.clear();
        java.util.List<java.lang.Integer> intList24 = throwableRankList19.getNFirstElementCounts(150);
        java.util.List<java.lang.Throwable> throwableList25 = throwableRankList19.getOrder();
        throwableRankList19.clear();
        java.util.List<java.lang.Integer> intList28 = throwableRankList19.getNFirstElementCounts(120);
        cDMetadata8.setTracks(intList28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableList21);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertNotNull(throwableList25);
        org.junit.Assert.assertNotNull(intList28);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        fontSettings0.setUseFontSmoothing(false);
        net.sourceforge.atunes.model.IFontBean iFontBean5 = null;
        fontSettings0.setFont(iFontBean5);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        boolean boolean8 = fontSettings0.isUseFontSmoothingSettingsFromOs();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean11 = fontSettings0.isUseFontSmoothing();
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        java.lang.String str6 = feedType0.getAuthorXPath();
        java.lang.String str7 = feedType0.getTypeXPath();
        java.lang.Class<?> wildcardClass8 = feedType0.getClass();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/title" + "'", str5, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./author" + "'", str6, "./author");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@type" + "'", str7, "./enclosure/@type");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        int int7 = columnBean0.getWidth();
        boolean boolean8 = columnBean0.isVisible();
        columnBean0.setOrder((int) '4');
        columnBean0.setOrder((int) (short) -1);
        columnBean0.setWidth((int) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        net.sourceforge.atunes.model.IFontBean iFontBean0 = null;
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings(iFontBean0, false, true);
        fontSettings3.setUseFontSmoothingSettingsFromOs(true);
        net.sourceforge.atunes.model.IFontBean iFontBean6 = null;
        fontSettings3.setFont(iFontBean6);
        net.sourceforge.atunes.model.FeedType feedType8 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str9 = feedType8.getUrlXPath();
        boolean boolean10 = fontSettings3.equals((java.lang.Object) feedType8);
        org.junit.Assert.assertTrue("'" + feedType8 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType8.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str7 = cDMetadata6.getGenre();
        java.util.List<java.lang.String> strList8 = cDMetadata6.getComposerNames();
        java.lang.String str9 = cDMetadata6.getAlbum();
        java.util.List<java.lang.Integer> intList10 = cDMetadata6.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata11.setAlbumArtist("");
        java.lang.String str15 = cDMetadata11.getTitle((int) (byte) -1);
        java.lang.String[] strArray17 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        cDMetadata11.setTrackNames((java.util.List<java.lang.String>) strList18);
        cDMetadata6.setTrackNames((java.util.List<java.lang.String>) strList18);
        cDMetadata6.setYear((int) (short) 1);
        int int24 = cDMetadata6.getYear();
        java.lang.String str25 = cDMetadata6.getGenre();
        cDMetadata6.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata28 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata28.setAlbumArtist("");
        java.lang.String str31 = cDMetadata28.getGenre();
        java.lang.String[] strArray33 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        cDMetadata28.setTrackNames((java.util.List<java.lang.String>) strList34);
        cDMetadata6.setTrackNames((java.util.List<java.lang.String>) strList34);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList34);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList39 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException43 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        java.lang.Throwable[] throwableArray46 = searchQuerySyntaxException45.getSuppressed();
        throwableRankList39.replaceItem((java.lang.Throwable) searchQuerySyntaxException41, (java.lang.Throwable) searchQuerySyntaxException45);
        java.util.List<java.lang.Throwable> throwableList48 = throwableRankList39.getOrder();
        int int49 = throwableRankList39.size();
        java.util.List<java.lang.Throwable> throwableList51 = throwableRankList39.getNFirstElements(1);
        java.util.List<java.lang.Integer> intList53 = throwableRankList39.getNFirstElementCounts(0);
        cDMetadata0.setTracks(intList53);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(intList10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(throwableList51);
        org.junit.Assert.assertNotNull(intList53);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getDate();
        java.lang.String str15 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./pubDate" + "'", str15, "./pubDate");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        cDMetadata0.setDisc((int) (short) -1);
        java.lang.String str13 = cDMetadata0.getAlbumArtist();
        java.util.List<java.lang.String> strList14 = cDMetadata0.getArtistNames();
        java.util.List<java.lang.String> strList15 = cDMetadata0.getComposerNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "net.sourceforge.atunes.model.InconsistentRepositoryException" + "'", str13, "net.sourceforge.atunes.model.InconsistentRepositoryException");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType18 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion23 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType18, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str24 = applicationVersion23.getDate();
        java.lang.String str25 = applicationVersion23.toShortString();
        java.lang.String str26 = applicationVersion23.getChanges();
        int int27 = applicationVersion23.getMinorNumber();
        java.lang.String str28 = applicationVersion23.getChanges();
        int int29 = applicationVersion23.getRevisionNumber();
        int int30 = applicationVersion9.compareTo(applicationVersion23);
        java.lang.String str31 = applicationVersion23.getChanges();
        int int32 = applicationVersion23.getRevisionNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + versionType18 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType18.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "./title" + "'", str24, "./title");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1.0.0 " + "'", str25, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "./title" + "'", str26, "./title");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "./title" + "'", str28, "./title");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "./title" + "'", str31, "./title");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort4 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean0.setSort(columnSort4);
        int int6 = columnBean0.getWidth();
        net.sourceforge.atunes.model.ColumnSort columnSort7 = columnBean0.getSort();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + columnSort4 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort4.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + columnSort7 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort7.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        java.lang.String str6 = feedType0.getAuthorXPath();
        java.lang.String str7 = feedType0.getTypeXPath();
        java.lang.String str8 = feedType0.getEntryXPath();
        java.lang.String str9 = feedType0.getUrlXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/title" + "'", str5, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./author" + "'", str6, "./author");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@type" + "'", str7, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/rss/channel/item" + "'", str8, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "./enclosure/@url" + "'", str9, "./enclosure/@url");
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        java.lang.String str15 = applicationVersion9.toShortString();
        int int16 = applicationVersion9.getMajorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.PlaybackState playbackState8 = net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED;
        boolean boolean9 = fontSettings0.equals((java.lang.Object) playbackState8);
        net.sourceforge.atunes.model.ColumnBean columnBean10 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty11 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean12 = columnBean10.equals((java.lang.Object) audioObjectProperty11);
        boolean boolean13 = columnBean10.isVisible();
        boolean boolean14 = fontSettings0.equals((java.lang.Object) boolean13);
        net.sourceforge.atunes.model.IFontBean iFontBean15 = null;
        fontSettings0.setFont(iFontBean15);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + playbackState8 + "' != '" + net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED + "'", playbackState8.equals(net.sourceforge.atunes.model.PlaybackState.PLAY_FINISHED));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + audioObjectProperty11 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty11.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.toShortString();
        java.lang.String str15 = applicationVersion9.getName();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0.0 " + "'", str14, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "mpc" + "'", str15, "mpc");
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str4 = cDMetadata0.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList12);
        java.lang.String str17 = cDMetadata0.getTitle((int) (byte) -1);
        cDMetadata0.setAlbumArtist("1.0.0 ");
        cDMetadata0.setGenre("./description");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        java.util.List<java.lang.String> strList18 = cDMetadata0.getArtistNames();
        java.lang.String str19 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        cDMetadata0.setGenre("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.util.List<java.lang.String> strList12 = cDMetadata0.getArtistNames();
        int int13 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getDate();
        java.lang.String str15 = applicationVersion9.getChanges();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType17 = applicationVersion9.getVersionType();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./title" + "'", str15, "./title");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
        org.junit.Assert.assertTrue("'" + versionType17 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType17.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        int int14 = applicationVersion9.getMinorNumber();
        java.lang.String str15 = applicationVersion9.getChanges();
        java.lang.String str16 = applicationVersion9.getDate();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "./title" + "'", str15, "./title");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException2.getSuppressed();
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException2.getSuppressed();
        java.lang.String str11 = searchQuerySyntaxException2.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str11, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        java.util.List<java.lang.String> strList11 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        java.lang.String str19 = cDMetadata0.getGenre();
        cDMetadata0.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str25 = cDMetadata22.getGenre();
        java.lang.String[] strArray27 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList28);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList28);
        int int32 = cDMetadata0.getDisc();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = cDMetadata0.getTitle((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index -1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException1.getSuppressed();
        java.lang.Class<?> wildcardClass18 = throwableArray17.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.ColumnBean columnBean3 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean4 = columnBean3.isVisible();
        columnBean3.setOrder((int) (byte) -1);
        columnBean3.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort9 = columnBean3.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute10 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean11 = columnBean3.equals((java.lang.Object) textTagAttribute10);
        columnBean3.setVisible(true);
        columnBean3.setOrder((int) (short) 100);
        columnBean3.setOrder(100);
        boolean boolean18 = columnBean0.equals((java.lang.Object) columnBean3);
        columnBean3.setVisible(false);
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(columnSort9);
        org.junit.Assert.assertTrue("'" + textTagAttribute10 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute10.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getDisc();
        java.lang.String[] strArray13 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList14);
        java.lang.String str17 = cDMetadata0.getAlbum();
        java.lang.String str19 = cDMetadata0.getTitle(10);
        int int20 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) (byte) 1);
        int int25 = throwableRankList0.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Integer int44 = throwableRankList26.getCount((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList47 = throwableRankList45.getNFirstElements((int) (short) 10);
        throwableRankList45.clear();
        int int49 = throwableRankList45.size();
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList52 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable53 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException54 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable53);
        java.lang.Throwable[] throwableArray55 = searchQuerySyntaxException54.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException56 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException54);
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        throwableRankList52.replaceItem((java.lang.Throwable) searchQuerySyntaxException54, (java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException51.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int62 = throwableRankList45.getCount((java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException41.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        java.lang.Throwable[] throwableArray67 = searchQuerySyntaxException66.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException69 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList70 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable71 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException72 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable71);
        java.lang.Throwable[] throwableArray73 = searchQuerySyntaxException72.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException74 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException72);
        java.lang.Throwable throwable75 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable75);
        java.lang.Throwable[] throwableArray77 = searchQuerySyntaxException76.getSuppressed();
        throwableRankList70.replaceItem((java.lang.Throwable) searchQuerySyntaxException72, (java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException79 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException80 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException79);
        inconsistentRepositoryException69.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException80);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException66, (java.lang.Throwable) inconsistentRepositoryException69);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList83 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable84 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException85 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable84);
        java.lang.Throwable[] throwableArray86 = searchQuerySyntaxException85.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException87 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException85);
        java.lang.Throwable throwable88 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException89 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable88);
        java.lang.Throwable[] throwableArray90 = searchQuerySyntaxException89.getSuppressed();
        throwableRankList83.replaceItem((java.lang.Throwable) searchQuerySyntaxException85, (java.lang.Throwable) searchQuerySyntaxException89);
        java.lang.Throwable[] throwableArray92 = searchQuerySyntaxException85.getSuppressed();
        java.lang.Throwable throwable93 = null;
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException85, throwable93);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableList47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray86);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(throwableArray92);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        fontSettings0.setUseFontSmoothing(false);
        net.sourceforge.atunes.model.IFontBean iFontBean5 = null;
        fontSettings0.setFont(iFontBean5);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        java.lang.Throwable throwable8 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable8);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList10 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException14 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        throwableRankList10.replaceItem((java.lang.Throwable) searchQuerySyntaxException12, (java.lang.Throwable) searchQuerySyntaxException16);
        searchQuerySyntaxException9.addSuppressed((java.lang.Throwable) searchQuerySyntaxException16);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException9);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException22 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException24 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        boolean boolean25 = fontSettings0.equals((java.lang.Object) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.ColumnBean columnBean26 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean27 = columnBean26.isVisible();
        columnBean26.setOrder((int) (byte) -1);
        columnBean26.setVisible(false);
        columnBean26.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType38 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion43 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType38, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str44 = applicationVersion43.getDate();
        java.lang.String str45 = applicationVersion43.toShortString();
        java.lang.String str46 = applicationVersion43.getChanges();
        boolean boolean47 = columnBean26.equals((java.lang.Object) applicationVersion43);
        net.sourceforge.atunes.model.ColumnSort columnSort48 = columnBean26.getSort();
        int int49 = columnBean26.getWidth();
        net.sourceforge.atunes.model.ColumnSort columnSort50 = columnBean26.getSort();
        boolean boolean51 = fontSettings0.equals((java.lang.Object) columnSort50);
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + versionType38 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType38.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "./title" + "'", str44, "./title");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "1.0.0 " + "'", str45, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "./title" + "'", str46, "./title");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(columnSort48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(columnSort50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toShortString();
        java.lang.String str14 = applicationVersion9.getName();
        net.sourceforge.atunes.model.ColumnBean columnBean15 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean16 = columnBean15.isVisible();
        columnBean15.setOrder((int) (byte) -1);
        columnBean15.setVisible(false);
        columnBean15.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType27 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion32 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType27, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str33 = applicationVersion32.getDate();
        java.lang.String str34 = applicationVersion32.toShortString();
        java.lang.String str35 = applicationVersion32.getChanges();
        boolean boolean36 = columnBean15.equals((java.lang.Object) applicationVersion32);
        java.lang.String str37 = applicationVersion32.toString();
        java.lang.String str38 = applicationVersion32.getDownloadURL();
        int int39 = applicationVersion9.compareTo(applicationVersion32);
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean40 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str41 = lookAndFeelBean40.getSkin();
        lookAndFeelBean40.setSkin("./enclosure/@url");
        lookAndFeelBean40.setSkin("hi!");
        lookAndFeelBean40.setSkin("1.0.0 ");
        boolean boolean48 = applicationVersion32.equals((java.lang.Object) "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 " + "'", str13, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + versionType27 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType27.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "./title" + "'", str33, "./title");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "1.0.0 " + "'", str34, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "./title" + "'", str35, "./title");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "1.0.0 mpc " + "'", str37, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "./description" + "'", str38, "./description");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.util.List<java.lang.String> strList1 = cDMetadata0.getArtistNames();
        cDMetadata0.setYear((int) (byte) 1);
        org.junit.Assert.assertNull(strList1);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList19.getOrder();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList31 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException33);
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        throwableRankList31.replaceItem((java.lang.Throwable) searchQuerySyntaxException33, (java.lang.Throwable) searchQuerySyntaxException37);
        searchQuerySyntaxException30.addSuppressed((java.lang.Throwable) searchQuerySyntaxException37);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException42 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Integer int43 = throwableRankList19.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Integer int44 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Throwable[] throwableArray45 = searchIndexNotAvailableException42.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException46 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException42);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList47 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException48 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException49 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList47.replaceItem((java.lang.Throwable) inconsistentRepositoryException48, (java.lang.Throwable) inconsistentRepositoryException49);
        java.lang.Throwable throwable51 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException52 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable51);
        java.lang.Throwable[] throwableArray53 = searchQuerySyntaxException52.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException54 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException52);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException52);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList56 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException60 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Throwable throwable61 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException62 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable61);
        java.lang.Throwable[] throwableArray63 = searchQuerySyntaxException62.getSuppressed();
        throwableRankList56.replaceItem((java.lang.Throwable) searchQuerySyntaxException58, (java.lang.Throwable) searchQuerySyntaxException62);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException62);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException66 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException67 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException66);
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException67);
        throwableRankList47.addItem((java.lang.Throwable) searchQuerySyntaxException55);
        searchIndexNotAvailableException42.addSuppressed((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable[] throwableArray71 = searchQuerySyntaxException55.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray71);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        cDMetadata0.setGenre("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.util.List<java.lang.String> strList12 = cDMetadata0.getArtistNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata13 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str14 = cDMetadata13.getGenre();
        java.util.List<java.lang.String> strList15 = cDMetadata13.getComposerNames();
        java.lang.String str16 = cDMetadata13.getAlbum();
        java.util.List<java.lang.Integer> intList17 = cDMetadata13.getTracks();
        int int18 = cDMetadata13.getDisc();
        net.sourceforge.atunes.model.CDMetadata cDMetadata19 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str20 = cDMetadata19.getGenre();
        java.util.List<java.lang.String> strList21 = cDMetadata19.getComposerNames();
        java.lang.String str22 = cDMetadata19.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata23 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata23.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList26 = cDMetadata23.getTracks();
        cDMetadata23.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList29 = cDMetadata23.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata30 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata30.setAlbumArtist("");
        java.lang.String str33 = cDMetadata30.getGenre();
        java.lang.String[] strArray35 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        cDMetadata30.setTrackNames((java.util.List<java.lang.String>) strList36);
        cDMetadata23.setTrackNames((java.util.List<java.lang.String>) strList36);
        cDMetadata19.setTrackNames((java.util.List<java.lang.String>) strList36);
        java.util.List<java.lang.String> strList41 = cDMetadata19.getTrackNames();
        cDMetadata13.setComposerNames(strList41);
        net.sourceforge.atunes.model.CDMetadata cDMetadata43 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata43.setAlbumArtist("");
        java.lang.String str46 = cDMetadata43.getGenre();
        int int47 = cDMetadata43.getYear();
        int int48 = cDMetadata43.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata49 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str50 = cDMetadata49.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata51 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata51.setAlbumArtist("");
        java.lang.String str54 = cDMetadata51.getGenre();
        java.lang.String[] strArray56 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        cDMetadata51.setTrackNames((java.util.List<java.lang.String>) strList57);
        cDMetadata49.setComposerNames((java.util.List<java.lang.String>) strList57);
        cDMetadata43.setTrackNames((java.util.List<java.lang.String>) strList57);
        cDMetadata13.setTrackNames((java.util.List<java.lang.String>) strList57);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList57);
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(intList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType15 = applicationVersion13.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion20 = new net.sourceforge.atunes.model.ApplicationVersion("1.0.0 mpc ", (int) (byte) -1, (int) '4', 1, versionType15, "./title", "mpc", "10.52.35  ", "flac");
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + versionType15 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType15.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Integer> intList26 = throwableRankList0.getNFirstElementCounts((int) '#');
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList27 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException28 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException29 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList27.replaceItem((java.lang.Throwable) inconsistentRepositoryException28, (java.lang.Throwable) inconsistentRepositoryException29);
        throwableRankList0.addItem((java.lang.Throwable) inconsistentRepositoryException28);
        java.util.List<java.lang.Throwable> throwableList33 = throwableRankList0.getNFirstElements((int) (byte) 100);
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(intList26);
        org.junit.Assert.assertNotNull(throwableList33);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getEntryXPath();
        java.lang.String str7 = feedType0.getAuthorXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/rss/channel/item" + "'", str6, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./author" + "'", str7, "./author");
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        cDMetadata0.setDisc(0);
        cDMetadata0.setYear((-1));
        java.util.List<java.lang.Integer> intList15 = cDMetadata0.getTracks();
        cDMetadata0.setDisc((int) (short) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(intList15);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableList2);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        net.sourceforge.atunes.model.ColumnBean columnBean3 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean4 = columnBean3.isVisible();
        columnBean3.setOrder((int) (byte) -1);
        columnBean3.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort9 = columnBean3.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute10 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean11 = columnBean3.equals((java.lang.Object) textTagAttribute10);
        columnBean3.setVisible(true);
        columnBean3.setOrder((int) (short) 100);
        columnBean3.setOrder(100);
        boolean boolean18 = columnBean0.equals((java.lang.Object) columnBean3);
        int int19 = columnBean3.getWidth();
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(columnSort9);
        org.junit.Assert.assertTrue("'" + textTagAttribute10 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute10.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getTypeXPath();
        java.lang.String str7 = feedType0.getUrlXPath();
        java.lang.String str8 = feedType0.getAuthorXPath();
        java.lang.String str9 = feedType0.getDateXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./enclosure/@type" + "'", str6, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@url" + "'", str7, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./author" + "'", str8, "./author");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "./pubDate" + "'", str9, "./pubDate");
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        cDMetadata0.setDisc(150);
        cDMetadata0.setGenre("mp4");
        cDMetadata0.setDisc((int) (short) 1);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean0.setSort(columnSort6);
        int int8 = columnBean0.getWidth();
        columnBean0.setVisible(false);
        int int11 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + columnSort6 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort6.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String str4 = cDMetadata0.getAlbum();
        java.lang.String str5 = cDMetadata0.getAlbumArtist();
        cDMetadata0.setAlbum("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        int int1 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getOrder();
        java.lang.Throwable throwable3 = null;
        java.lang.Integer int4 = throwableRankList0.getCount(throwable3);
        java.util.List<java.lang.Integer> intList6 = throwableRankList0.getNFirstElementCounts(1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList7 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable8 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable8);
        java.lang.Throwable[] throwableArray10 = searchQuerySyntaxException9.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException11 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        java.lang.Throwable[] throwableArray14 = searchQuerySyntaxException13.getSuppressed();
        throwableRankList7.replaceItem((java.lang.Throwable) searchQuerySyntaxException9, (java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException9);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        searchQuerySyntaxException18.addSuppressed((java.lang.Throwable) searchQuerySyntaxException25);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException18);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList33 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException37 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        throwableRankList33.replaceItem((java.lang.Throwable) searchQuerySyntaxException35, (java.lang.Throwable) searchQuerySyntaxException39);
        searchQuerySyntaxException32.addSuppressed((java.lang.Throwable) searchQuerySyntaxException39);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException43 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        java.lang.Throwable[] throwableArray46 = searchQuerySyntaxException45.getSuppressed();
        searchQuerySyntaxException32.addSuppressed((java.lang.Throwable) searchQuerySyntaxException45);
        searchIndexNotAvailableException30.addSuppressed((java.lang.Throwable) searchQuerySyntaxException45);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException16, (java.lang.Throwable) searchQuerySyntaxException45);
        java.util.List<java.lang.Integer> intList51 = throwableRankList0.getNFirstElementCounts(150);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(intList6);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(intList51);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList0.getNFirstElements((int) (short) 100);
        throwableRankList0.clear();
        java.lang.Throwable throwable9 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException10 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable9);
        java.lang.Throwable[] throwableArray11 = searchQuerySyntaxException10.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException12 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException10);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList14 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException18 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException16);
        java.lang.Throwable throwable19 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable19);
        java.lang.Throwable[] throwableArray21 = searchQuerySyntaxException20.getSuppressed();
        throwableRankList14.replaceItem((java.lang.Throwable) searchQuerySyntaxException16, (java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException24 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException25 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException24);
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException25);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList28 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException32 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        java.lang.Throwable[] throwableArray35 = searchQuerySyntaxException34.getSuppressed();
        throwableRankList28.replaceItem((java.lang.Throwable) searchQuerySyntaxException30, (java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList37 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException41 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException39);
        java.lang.Throwable throwable42 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException43 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable42);
        java.lang.Throwable[] throwableArray44 = searchQuerySyntaxException43.getSuppressed();
        throwableRankList37.replaceItem((java.lang.Throwable) searchQuerySyntaxException39, (java.lang.Throwable) searchQuerySyntaxException43);
        java.lang.Integer int46 = throwableRankList28.getCount((java.lang.Throwable) searchQuerySyntaxException43);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList47 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable48 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable48);
        java.lang.Throwable[] throwableArray50 = searchQuerySyntaxException49.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException51 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException49);
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        throwableRankList47.replaceItem((java.lang.Throwable) searchQuerySyntaxException49, (java.lang.Throwable) searchQuerySyntaxException53);
        java.util.List<java.lang.Throwable> throwableList56 = throwableRankList47.getOrder();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        searchQuerySyntaxException58.addSuppressed((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException58);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException70 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int71 = throwableRankList47.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Integer int72 = throwableRankList28.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Throwable[] throwableArray73 = searchIndexNotAvailableException70.getSuppressed();
        java.lang.Throwable[] throwableArray74 = searchIndexNotAvailableException70.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException13, (java.lang.Throwable) searchIndexNotAvailableException70);
        int int76 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableList56);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("mpc");
        java.lang.String str8 = cDMetadata0.getTitle(90);
        net.sourceforge.atunes.model.FontSettings fontSettings9 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata10 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata10.setAlbumArtist("");
        boolean boolean13 = fontSettings9.equals((java.lang.Object) cDMetadata10);
        fontSettings9.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean16 = fontSettings9.isUseFontSmoothing();
        fontSettings9.setUseFontSmoothingSettingsFromOs(false);
        net.sourceforge.atunes.model.IFontBean iFontBean19 = fontSettings9.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata20 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str21 = cDMetadata20.getGenre();
        java.util.List<java.lang.String> strList22 = cDMetadata20.getComposerNames();
        java.lang.String str23 = cDMetadata20.getAlbum();
        java.util.List<java.lang.Integer> intList24 = cDMetadata20.getTracks();
        int int25 = cDMetadata20.getYear();
        java.util.List<java.lang.String> strList26 = cDMetadata20.getArtistNames();
        cDMetadata20.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata29 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str30 = cDMetadata29.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata31 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata31.setAlbumArtist("");
        java.lang.String str34 = cDMetadata31.getGenre();
        java.lang.String[] strArray36 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        cDMetadata31.setTrackNames((java.util.List<java.lang.String>) strList37);
        cDMetadata29.setComposerNames((java.util.List<java.lang.String>) strList37);
        net.sourceforge.atunes.model.CDMetadata cDMetadata41 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str42 = cDMetadata41.getGenre();
        java.util.List<java.lang.String> strList43 = cDMetadata41.getComposerNames();
        java.lang.String str44 = cDMetadata41.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata45 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata45.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList48 = cDMetadata45.getTracks();
        cDMetadata45.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList51 = cDMetadata45.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata52 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata52.setAlbumArtist("");
        java.lang.String str55 = cDMetadata52.getGenre();
        java.lang.String[] strArray57 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        cDMetadata52.setTrackNames((java.util.List<java.lang.String>) strList58);
        cDMetadata45.setTrackNames((java.util.List<java.lang.String>) strList58);
        cDMetadata41.setTrackNames((java.util.List<java.lang.String>) strList58);
        cDMetadata29.setTrackNames((java.util.List<java.lang.String>) strList58);
        cDMetadata20.setArtistNames((java.util.List<java.lang.String>) strList58);
        boolean boolean65 = fontSettings9.equals((java.lang.Object) strList58);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList58);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(iFontBean19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(intList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(intList48);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList21 = throwableRankList19.getNFirstElements((int) (short) 10);
        throwableRankList19.clear();
        int int23 = throwableRankList19.size();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        searchQuerySyntaxException25.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Integer int36 = throwableRankList19.getCount((java.lang.Throwable) searchQuerySyntaxException32);
        searchQuerySyntaxException15.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException41 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException39);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException39);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList43 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        java.lang.Throwable[] throwableArray46 = searchQuerySyntaxException45.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException47 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException45);
        java.lang.Throwable throwable48 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable48);
        java.lang.Throwable[] throwableArray50 = searchQuerySyntaxException49.getSuppressed();
        throwableRankList43.replaceItem((java.lang.Throwable) searchQuerySyntaxException45, (java.lang.Throwable) searchQuerySyntaxException49);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException52 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException49);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException53 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException52);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException54 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException53);
        searchQuerySyntaxException42.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException54);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException56 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException42);
        searchQuerySyntaxException32.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException56);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException56);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        java.lang.String str22 = applicationVersion17.toString();
        java.lang.String str23 = applicationVersion17.getDate();
        int int24 = applicationVersion17.getMajorNumber();
        java.lang.String str25 = applicationVersion17.getDate();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "1.0.0 mpc " + "'", str22, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "./title" + "'", str23, "./title");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./title" + "'", str25, "./title");
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        net.sourceforge.atunes.model.ColumnSort columnSort9 = columnBean0.getSort();
        columnBean0.setOrder((int) (short) 100);
        columnBean0.setOrder((int) (byte) -1);
        boolean boolean14 = columnBean0.isVisible();
        columnBean0.setWidth(10);
        columnBean0.setWidth(90);
        columnBean0.setOrder((int) (short) -1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertNull(columnSort9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDateXPath();
        java.lang.String str4 = feedType0.getDateXPath();
        java.lang.String str5 = feedType0.getTypeXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./pubDate" + "'", str3, "./pubDate");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./pubDate" + "'", str4, "./pubDate");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./enclosure/@type" + "'", str5, "./enclosure/@type");
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort4 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean0.setSort(columnSort4);
        boolean boolean6 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + columnSort4 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort4.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.util.List<java.lang.Integer> intList20 = throwableRankList0.getNFirstElementCounts((int) (short) -1);
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        java.lang.Throwable[] throwableArray23 = searchQuerySyntaxException22.getSuppressed();
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException22);
        java.lang.String str25 = searchQuerySyntaxException22.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str25, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.toShortString();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str17 = applicationVersion9.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType22 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion27 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType22, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str28 = applicationVersion27.getDate();
        java.lang.String str29 = applicationVersion27.toShortString();
        int int30 = applicationVersion27.getMajorNumber();
        int int31 = applicationVersion27.getMinorNumber();
        java.lang.String str32 = applicationVersion27.getName();
        int int33 = applicationVersion27.getMinorNumber();
        java.lang.String str34 = applicationVersion27.getChanges();
        int int35 = applicationVersion9.compareTo(applicationVersion27);
        int int36 = applicationVersion9.getMajorNumber();
        java.lang.String str37 = applicationVersion9.getChanges();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1.0.0 " + "'", str17, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType22 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType22.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "./title" + "'", str28, "./title");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "1.0.0 " + "'", str29, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "mpc" + "'", str32, "mpc");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "./title" + "'", str34, "./title");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "./title" + "'", str37, "./title");
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        boolean boolean7 = columnBean0.isVisible();
        int int8 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str7 = cDMetadata6.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata8 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata8.setAlbumArtist("");
        java.lang.String str11 = cDMetadata8.getGenre();
        java.lang.String[] strArray13 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        cDMetadata8.setTrackNames((java.util.List<java.lang.String>) strList14);
        cDMetadata6.setComposerNames((java.util.List<java.lang.String>) strList14);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList14);
        net.sourceforge.atunes.model.CDMetadata cDMetadata19 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str20 = cDMetadata19.getGenre();
        java.util.List<java.lang.String> strList21 = cDMetadata19.getComposerNames();
        java.lang.String str22 = cDMetadata19.getAlbum();
        java.util.List<java.lang.Integer> intList23 = cDMetadata19.getTracks();
        int int24 = cDMetadata19.getDisc();
        java.lang.String[] strArray32 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        cDMetadata19.setArtistNames((java.util.List<java.lang.String>) strList33);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList33);
        cDMetadata0.setAlbum("hi!");
        cDMetadata0.setGenre("rm");
        java.lang.Class<?> wildcardClass41 = cDMetadata0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList0.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Integer int38 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList39 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException43 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        java.lang.Throwable[] throwableArray46 = searchQuerySyntaxException45.getSuppressed();
        throwableRankList39.replaceItem((java.lang.Throwable) searchQuerySyntaxException41, (java.lang.Throwable) searchQuerySyntaxException45);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList48 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable49 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException50 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable49);
        java.lang.Throwable[] throwableArray51 = searchQuerySyntaxException50.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException52 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException50);
        java.lang.Throwable throwable53 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException54 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable53);
        java.lang.Throwable[] throwableArray55 = searchQuerySyntaxException54.getSuppressed();
        throwableRankList48.replaceItem((java.lang.Throwable) searchQuerySyntaxException50, (java.lang.Throwable) searchQuerySyntaxException54);
        java.lang.Integer int57 = throwableRankList39.getCount((java.lang.Throwable) searchQuerySyntaxException54);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList58 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable59 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException60 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable59);
        java.lang.Throwable[] throwableArray61 = searchQuerySyntaxException60.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException62 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException60);
        java.lang.Throwable throwable63 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException64 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable63);
        java.lang.Throwable[] throwableArray65 = searchQuerySyntaxException64.getSuppressed();
        throwableRankList58.replaceItem((java.lang.Throwable) searchQuerySyntaxException60, (java.lang.Throwable) searchQuerySyntaxException64);
        java.util.List<java.lang.Throwable> throwableList67 = throwableRankList58.getOrder();
        java.lang.Throwable throwable68 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable68);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList70 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable71 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException72 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable71);
        java.lang.Throwable[] throwableArray73 = searchQuerySyntaxException72.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException74 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException72);
        java.lang.Throwable throwable75 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable75);
        java.lang.Throwable[] throwableArray77 = searchQuerySyntaxException76.getSuppressed();
        throwableRankList70.replaceItem((java.lang.Throwable) searchQuerySyntaxException72, (java.lang.Throwable) searchQuerySyntaxException76);
        searchQuerySyntaxException69.addSuppressed((java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException80 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException69);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException81 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException69);
        java.lang.Integer int82 = throwableRankList58.getCount((java.lang.Throwable) searchIndexNotAvailableException81);
        java.lang.Integer int83 = throwableRankList39.getCount((java.lang.Throwable) searchIndexNotAvailableException81);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException84 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException81);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException85 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException81);
        searchQuerySyntaxException31.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException81);
        java.lang.Throwable[] throwableArray87 = searchQuerySyntaxException31.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableList67);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(throwableArray87);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getDisc();
        java.lang.String[] strArray13 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList14);
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str18 = cDMetadata17.getGenre();
        java.util.List<java.lang.String> strList19 = cDMetadata17.getComposerNames();
        java.lang.String str20 = cDMetadata17.getAlbum();
        java.util.List<java.lang.Integer> intList21 = cDMetadata17.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str26 = cDMetadata22.getTitle((int) (byte) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList29);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList29);
        cDMetadata17.setYear((int) (short) 1);
        int int35 = cDMetadata17.getYear();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList36 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        java.lang.Throwable[] throwableArray39 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException40 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        throwableRankList36.replaceItem((java.lang.Throwable) searchQuerySyntaxException38, (java.lang.Throwable) searchQuerySyntaxException42);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException49 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException47);
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        java.lang.Throwable[] throwableArray52 = searchQuerySyntaxException51.getSuppressed();
        throwableRankList45.replaceItem((java.lang.Throwable) searchQuerySyntaxException47, (java.lang.Throwable) searchQuerySyntaxException51);
        java.lang.Integer int54 = throwableRankList36.getCount((java.lang.Throwable) searchQuerySyntaxException51);
        java.lang.Throwable throwable55 = null;
        java.lang.Throwable throwable56 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException57 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable56);
        throwableRankList36.replaceItem(throwable55, (java.lang.Throwable) searchQuerySyntaxException57);
        java.util.List<java.lang.Integer> intList60 = throwableRankList36.getNFirstElementCounts((int) (byte) 1);
        cDMetadata17.setTracks(intList60);
        cDMetadata0.setTracks(intList60);
        java.lang.String str63 = cDMetadata0.getAlbum();
        cDMetadata0.setDisc(3);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(intList60);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        java.lang.String str10 = cDMetadata0.getTitle((int) (byte) 100);
        cDMetadata0.setYear((int) '4');
        cDMetadata0.setAlbumArtist("mpc");
        java.util.List<java.lang.Integer> intList15 = cDMetadata0.getTracks();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(intList15);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str4 = cDMetadata0.getTitle((int) (byte) -1);
        java.lang.String[] strArray6 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList7);
        cDMetadata0.setAlbum("mp4");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) (byte) 1);
        int int25 = throwableRankList0.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Integer int44 = throwableRankList26.getCount((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList47 = throwableRankList45.getNFirstElements((int) (short) 10);
        throwableRankList45.clear();
        int int49 = throwableRankList45.size();
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList52 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable53 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException54 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable53);
        java.lang.Throwable[] throwableArray55 = searchQuerySyntaxException54.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException56 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException54);
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        throwableRankList52.replaceItem((java.lang.Throwable) searchQuerySyntaxException54, (java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException51.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int62 = throwableRankList45.getCount((java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException41.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        java.lang.Throwable[] throwableArray67 = searchQuerySyntaxException66.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException69 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList70 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable71 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException72 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable71);
        java.lang.Throwable[] throwableArray73 = searchQuerySyntaxException72.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException74 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException72);
        java.lang.Throwable throwable75 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable75);
        java.lang.Throwable[] throwableArray77 = searchQuerySyntaxException76.getSuppressed();
        throwableRankList70.replaceItem((java.lang.Throwable) searchQuerySyntaxException72, (java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException79 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException80 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException79);
        inconsistentRepositoryException69.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException80);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException66, (java.lang.Throwable) inconsistentRepositoryException69);
        java.util.List<java.lang.Throwable> throwableList84 = throwableRankList0.getNFirstElements((-1));
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableList47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableList84);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList0.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Integer int38 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        throwableRankList0.clear();
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str7 = cDMetadata6.getGenre();
        java.util.List<java.lang.String> strList8 = cDMetadata6.getComposerNames();
        java.lang.String str9 = cDMetadata6.getAlbum();
        java.util.List<java.lang.Integer> intList10 = cDMetadata6.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata11.setAlbumArtist("");
        java.lang.String str15 = cDMetadata11.getTitle((int) (byte) -1);
        java.lang.String[] strArray17 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        cDMetadata11.setTrackNames((java.util.List<java.lang.String>) strList18);
        cDMetadata6.setTrackNames((java.util.List<java.lang.String>) strList18);
        cDMetadata6.setYear((int) (short) 1);
        int int24 = cDMetadata6.getYear();
        java.lang.String str25 = cDMetadata6.getGenre();
        cDMetadata6.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata28 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata28.setAlbumArtist("");
        java.lang.String str31 = cDMetadata28.getGenre();
        java.lang.String[] strArray33 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        cDMetadata28.setTrackNames((java.util.List<java.lang.String>) strList34);
        cDMetadata6.setTrackNames((java.util.List<java.lang.String>) strList34);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList34);
        java.lang.String[] strArray56 = new java.lang.String[] { "mpc", "1.0.0 ", "hi!", "/feed/title", "net.sourceforge.atunes.model.SearchQuerySyntaxException", "./updated", "./pubDate", "./updated", "rm", "/rss/channel/title", "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException", "mac", "mpc", "/rss/channel/item", "./author", "", "1.0.0 " };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList57);
        cDMetadata0.setYear(150);
        cDMetadata0.setGenre("/feed/entry");
        int int64 = cDMetadata0.getDisc();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(intList10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getTypeXPath();
        java.lang.String str7 = feedType0.getUrlXPath();
        java.lang.String str8 = feedType0.getEntryXPath();
        java.lang.String str9 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./enclosure/@type" + "'", str6, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./enclosure/@url" + "'", str7, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/rss/channel/item" + "'", str8, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "./title" + "'", str9, "./title");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        java.util.List<java.lang.String> strList11 = cDMetadata0.getComposerNames();
        cDMetadata0.setYear(10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata14 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata14.setAlbumArtist("");
        java.lang.String str18 = cDMetadata14.getTitle((int) (byte) -1);
        java.lang.String[] strArray20 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        cDMetadata14.setTrackNames((java.util.List<java.lang.String>) strList21);
        cDMetadata14.setAlbumArtist("/rss/channel/item");
        java.util.List<java.lang.Integer> intList26 = cDMetadata14.getTracks();
        java.lang.String str28 = cDMetadata14.getTitle(100);
        net.sourceforge.atunes.model.ColumnBean columnBean29 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean30 = columnBean29.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState31 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean32 = columnBean29.equals((java.lang.Object) submissionState31);
        net.sourceforge.atunes.model.CDMetadata cDMetadata33 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata33.setAlbumArtist("");
        java.lang.String str37 = cDMetadata33.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata38 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata38.setAlbumArtist("");
        java.lang.String str42 = cDMetadata38.getTitle((int) (byte) -1);
        java.lang.String[] strArray44 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        cDMetadata38.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata33.setArtistNames((java.util.List<java.lang.String>) strList45);
        boolean boolean49 = columnBean29.equals((java.lang.Object) strList45);
        cDMetadata14.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList45);
        java.lang.Class<?> wildcardClass52 = strList45.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(intList26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + submissionState31 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState31.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        java.lang.String str12 = cDMetadata9.getGenre();
        java.lang.String[] strArray14 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList15);
        java.util.List<java.lang.String> strList19 = cDMetadata0.getTrackNames();
        java.util.List<java.lang.String> strList20 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getTypeXPath();
        java.lang.String str5 = feedType0.getTypeXPath();
        java.lang.String str6 = feedType0.getEntryXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@type" + "'", str4, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./enclosure/@type" + "'", str5, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/rss/channel/item" + "'", str6, "/rss/channel/item");
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setDisc(2);
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata11.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList14 = cDMetadata11.getTracks();
        cDMetadata11.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList17 = cDMetadata11.getTrackNames();
        cDMetadata11.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList20 = cDMetadata11.getArtistNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata21 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str22 = cDMetadata21.getGenre();
        java.util.List<java.lang.String> strList23 = cDMetadata21.getComposerNames();
        java.lang.String str24 = cDMetadata21.getAlbum();
        java.util.List<java.lang.Integer> intList25 = cDMetadata21.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata26 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata26.setAlbumArtist("");
        java.lang.String str30 = cDMetadata26.getTitle((int) (byte) -1);
        java.lang.String[] strArray32 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        cDMetadata26.setTrackNames((java.util.List<java.lang.String>) strList33);
        cDMetadata21.setTrackNames((java.util.List<java.lang.String>) strList33);
        cDMetadata21.setYear((int) (short) 1);
        int int39 = cDMetadata21.getYear();
        java.lang.String str40 = cDMetadata21.getGenre();
        cDMetadata21.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata43 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata43.setAlbumArtist("");
        java.lang.String str46 = cDMetadata43.getGenre();
        java.lang.String[] strArray48 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        cDMetadata43.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata21.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata11.setArtistNames((java.util.List<java.lang.String>) strList49);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList49);
        java.lang.String str55 = cDMetadata0.getAlbumArtist();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(intList14);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        net.sourceforge.atunes.model.ColumnBean columnBean22 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean23 = columnBean22.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState24 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean25 = columnBean22.equals((java.lang.Object) submissionState24);
        columnBean22.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort28 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean22.setSort(columnSort28);
        columnBean0.setSort(columnSort28);
        columnBean0.setVisible(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + submissionState24 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState24.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + columnSort28 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort28.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        net.sourceforge.atunes.model.IFontBean iFontBean10 = fontSettings0.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str12 = cDMetadata11.getGenre();
        java.util.List<java.lang.String> strList13 = cDMetadata11.getComposerNames();
        java.lang.String str14 = cDMetadata11.getAlbum();
        java.util.List<java.lang.Integer> intList15 = cDMetadata11.getTracks();
        int int16 = cDMetadata11.getYear();
        java.util.List<java.lang.String> strList17 = cDMetadata11.getArtistNames();
        cDMetadata11.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata20 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str21 = cDMetadata20.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str25 = cDMetadata22.getGenre();
        java.lang.String[] strArray27 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList28);
        cDMetadata20.setComposerNames((java.util.List<java.lang.String>) strList28);
        net.sourceforge.atunes.model.CDMetadata cDMetadata32 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str33 = cDMetadata32.getGenre();
        java.util.List<java.lang.String> strList34 = cDMetadata32.getComposerNames();
        java.lang.String str35 = cDMetadata32.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata36 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata36.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList39 = cDMetadata36.getTracks();
        cDMetadata36.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList42 = cDMetadata36.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata43 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata43.setAlbumArtist("");
        java.lang.String str46 = cDMetadata43.getGenre();
        java.lang.String[] strArray48 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        cDMetadata43.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata36.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata32.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata20.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata11.setArtistNames((java.util.List<java.lang.String>) strList49);
        boolean boolean56 = fontSettings0.equals((java.lang.Object) strList49);
        net.sourceforge.atunes.model.FontSettings fontSettings57 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata58 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata58.setAlbumArtist("");
        boolean boolean61 = fontSettings57.equals((java.lang.Object) cDMetadata58);
        java.lang.String str62 = cDMetadata58.getAlbum();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList63 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList65 = throwableRankList63.getNFirstElements((int) (short) 10);
        throwableRankList63.clear();
        java.util.List<java.lang.Integer> intList68 = throwableRankList63.getNFirstElementCounts(150);
        cDMetadata58.setTracks(intList68);
        java.lang.String str70 = cDMetadata58.getAlbumArtist();
        cDMetadata58.setGenre("net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        boolean boolean73 = fontSettings0.equals((java.lang.Object) cDMetadata58);
        java.lang.String str74 = cDMetadata58.getGenre();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(iFontBean10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(intList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(intList39);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(throwableList65);
        org.junit.Assert.assertNotNull(intList68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str74, "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Integer int16 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList17 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable18 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException19 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable18);
        java.lang.Throwable[] throwableArray20 = searchQuerySyntaxException19.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException21 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException19);
        java.lang.Throwable throwable22 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable22);
        java.lang.Throwable[] throwableArray24 = searchQuerySyntaxException23.getSuppressed();
        throwableRankList17.replaceItem((java.lang.Throwable) searchQuerySyntaxException19, (java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException23);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        searchQuerySyntaxException15.addSuppressed((java.lang.Throwable) searchQuerySyntaxException26);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType16 = applicationVersion13.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion21 = new net.sourceforge.atunes.model.ApplicationVersion("1.0.0 ", (int) (short) 10, (int) '4', (int) '#', versionType16, "", "./enclosure/@url", "SOCKS_PROXY", "./enclosure/@url");
        java.lang.Class<?> wildcardClass22 = applicationVersion21.getClass();
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType16 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType16.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getNameXPath();
        java.lang.String str2 = feedType0.getTitleXPath();
        java.lang.String str3 = feedType0.getNameXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/title" + "'", str1, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./title" + "'", str2, "./title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/rss/channel/title" + "'", str3, "/rss/channel/title");
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        int int3 = cDMetadata0.getYear();
        cDMetadata0.setYear(100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata6.setAlbumArtist("");
        java.lang.String str9 = cDMetadata6.getGenre();
        java.util.List<java.lang.String> strList10 = cDMetadata6.getTrackNames();
        java.util.List<java.lang.String> strList11 = cDMetadata6.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata12 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str13 = cDMetadata12.getGenre();
        java.lang.String str14 = cDMetadata12.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata15 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str16 = cDMetadata15.getGenre();
        java.util.List<java.lang.String> strList17 = cDMetadata15.getComposerNames();
        java.lang.String str18 = cDMetadata15.getAlbum();
        java.util.List<java.lang.Integer> intList19 = cDMetadata15.getTracks();
        int int20 = cDMetadata15.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata21 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str22 = cDMetadata21.getGenre();
        java.util.List<java.lang.String> strList23 = cDMetadata21.getComposerNames();
        java.lang.String str24 = cDMetadata21.getAlbum();
        java.util.List<java.lang.Integer> intList25 = cDMetadata21.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata26 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata26.setAlbumArtist("");
        java.lang.String str30 = cDMetadata26.getTitle((int) (byte) -1);
        java.lang.String[] strArray32 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        cDMetadata26.setTrackNames((java.util.List<java.lang.String>) strList33);
        cDMetadata21.setTrackNames((java.util.List<java.lang.String>) strList33);
        cDMetadata21.setYear((int) (short) 1);
        int int39 = cDMetadata21.getYear();
        java.lang.String str40 = cDMetadata21.getGenre();
        cDMetadata21.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata43 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata43.setAlbumArtist("");
        java.lang.String str46 = cDMetadata43.getGenre();
        java.lang.String[] strArray48 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        cDMetadata43.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata21.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata15.setComposerNames((java.util.List<java.lang.String>) strList49);
        cDMetadata12.setArtistNames((java.util.List<java.lang.String>) strList49);
        cDMetadata6.setTrackNames((java.util.List<java.lang.String>) strList49);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList49);
        int int57 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(intList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        net.sourceforge.atunes.model.CDMetadata cDMetadata7 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata7.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList10 = cDMetadata7.getTracks();
        cDMetadata7.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList13 = cDMetadata7.getTrackNames();
        cDMetadata7.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList16 = cDMetadata7.getArtistNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str18 = cDMetadata17.getGenre();
        java.util.List<java.lang.String> strList19 = cDMetadata17.getComposerNames();
        java.lang.String str20 = cDMetadata17.getAlbum();
        java.util.List<java.lang.Integer> intList21 = cDMetadata17.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str26 = cDMetadata22.getTitle((int) (byte) -1);
        java.lang.String[] strArray28 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList29);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList29);
        cDMetadata17.setYear((int) (short) 1);
        int int35 = cDMetadata17.getYear();
        java.lang.String str36 = cDMetadata17.getGenre();
        cDMetadata17.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata39 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata39.setAlbumArtist("");
        java.lang.String str42 = cDMetadata39.getGenre();
        java.lang.String[] strArray44 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        cDMetadata39.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList45);
        cDMetadata7.setArtistNames((java.util.List<java.lang.String>) strList45);
        boolean boolean50 = columnBean0.equals((java.lang.Object) strList45);
        int int51 = columnBean0.getOrder();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertNull(intList10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Integer int16 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException18);
        java.lang.Integer int21 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException20);
        java.lang.Throwable throwable22 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable22);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList24 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException28 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException26);
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        throwableRankList24.replaceItem((java.lang.Throwable) searchQuerySyntaxException26, (java.lang.Throwable) searchQuerySyntaxException30);
        searchQuerySyntaxException23.addSuppressed((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException23.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList36 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable37 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException38 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable37);
        java.lang.Throwable[] throwableArray39 = searchQuerySyntaxException38.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException40 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        throwableRankList36.replaceItem((java.lang.Throwable) searchQuerySyntaxException38, (java.lang.Throwable) searchQuerySyntaxException42);
        java.lang.Throwable[] throwableArray45 = searchQuerySyntaxException38.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchIndexNotAvailableException35, (java.lang.Throwable) searchQuerySyntaxException38);
        java.lang.String str47 = searchQuerySyntaxException38.toString();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str47, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType16 = applicationVersion13.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion21 = new net.sourceforge.atunes.model.ApplicationVersion("1.0.0 ", (int) (short) 10, (int) '4', (int) '#', versionType16, "", "./enclosure/@url", "SOCKS_PROXY", "./enclosure/@url");
        java.lang.String str22 = applicationVersion21.getName();
        int int23 = applicationVersion21.getMajorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType24 = applicationVersion21.getVersionType();
        java.lang.String str25 = applicationVersion21.getDirectDownloadURL();
        java.lang.String str26 = applicationVersion21.toShortString();
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType16 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType16.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + versionType24 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType24.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "SOCKS_PROXY" + "'", str25, "SOCKS_PROXY");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "10.52.35 " + "'", str26, "10.52.35 ");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList8 = throwableRankList6.getNFirstElements((int) (short) 10);
        int int9 = throwableRankList6.size();
        int int10 = throwableRankList6.size();
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList13 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException17 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable18 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException19 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable18);
        java.lang.Throwable[] throwableArray20 = searchQuerySyntaxException19.getSuppressed();
        throwableRankList13.replaceItem((java.lang.Throwable) searchQuerySyntaxException15, (java.lang.Throwable) searchQuerySyntaxException19);
        searchQuerySyntaxException12.addSuppressed((java.lang.Throwable) searchQuerySyntaxException19);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Integer int24 = throwableRankList6.getCount((java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList25 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList27 = throwableRankList25.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList30 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException34 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Throwable throwable35 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException36 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable35);
        java.lang.Throwable[] throwableArray37 = searchQuerySyntaxException36.getSuppressed();
        throwableRankList30.replaceItem((java.lang.Throwable) searchQuerySyntaxException32, (java.lang.Throwable) searchQuerySyntaxException36);
        searchQuerySyntaxException29.addSuppressed((java.lang.Throwable) searchQuerySyntaxException36);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException40 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException29);
        java.lang.Throwable throwable41 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException42 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable41);
        java.lang.Throwable[] throwableArray43 = searchQuerySyntaxException42.getSuppressed();
        searchQuerySyntaxException29.addSuppressed((java.lang.Throwable) searchQuerySyntaxException42);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException29);
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException49 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException47);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException50 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException47);
        throwableRankList25.replaceItem((java.lang.Throwable) searchQuerySyntaxException29, (java.lang.Throwable) searchQuerySyntaxException50);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList52 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException53 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException54 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList52.replaceItem((java.lang.Throwable) inconsistentRepositoryException53, (java.lang.Throwable) inconsistentRepositoryException54);
        java.lang.Throwable throwable56 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException57 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable56);
        java.lang.Throwable[] throwableArray58 = searchQuerySyntaxException57.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException59 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException57);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException60 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList61 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable62 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException63 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable62);
        java.lang.Throwable[] throwableArray64 = searchQuerySyntaxException63.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException65 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException63);
        java.lang.Throwable throwable66 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException67 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable66);
        java.lang.Throwable[] throwableArray68 = searchQuerySyntaxException67.getSuppressed();
        throwableRankList61.replaceItem((java.lang.Throwable) searchQuerySyntaxException63, (java.lang.Throwable) searchQuerySyntaxException67);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException70 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException67);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException71 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException70);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException72 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException71);
        searchQuerySyntaxException60.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException72);
        throwableRankList52.addItem((java.lang.Throwable) searchQuerySyntaxException60);
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException50, (java.lang.Throwable) searchQuerySyntaxException60);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException50);
        java.lang.Class<?> wildcardClass77 = throwableRankList0.getClass();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getTypeXPath();
        java.lang.String str5 = feedType0.getTypeXPath();
        java.lang.String str6 = feedType0.getUrlXPath();
        java.lang.String str7 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@type" + "'", str4, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "./enclosure/@type" + "'", str5, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./enclosure/@url" + "'", str6, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./title" + "'", str7, "./title");
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        net.sourceforge.atunes.model.ColumnSort columnSort9 = columnBean0.getSort();
        columnBean0.setOrder((int) (short) 100);
        columnBean0.setOrder((int) (byte) -1);
        boolean boolean14 = columnBean0.isVisible();
        boolean boolean15 = columnBean0.isVisible();
        net.sourceforge.atunes.model.ColumnSort columnSort16 = columnBean0.getSort();
        columnBean0.setVisible(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertNull(columnSort9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(columnSort16);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        java.lang.Throwable[] throwableArray2 = searchQuerySyntaxException1.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException3 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        java.lang.String str5 = searchQuerySyntaxException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str5, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.util.List<java.lang.Integer> intList7 = cDMetadata1.getTracks();
        net.sourceforge.atunes.model.FontSettings fontSettings8 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        boolean boolean12 = fontSettings8.equals((java.lang.Object) cDMetadata9);
        fontSettings8.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean15 = fontSettings8.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata16 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str17 = cDMetadata16.getGenre();
        java.util.List<java.lang.String> strList18 = cDMetadata16.getComposerNames();
        java.lang.String str19 = cDMetadata16.getAlbum();
        java.util.List<java.lang.Integer> intList20 = cDMetadata16.getTracks();
        cDMetadata16.setAlbumArtist("mpc");
        java.lang.String str23 = cDMetadata16.getAlbum();
        boolean boolean24 = fontSettings8.equals((java.lang.Object) cDMetadata16);
        java.lang.String[] strArray49 = new java.lang.String[] { "./link[@rel='enclosure']/@type", "SOCKS_PROXY", "/feed/title", "./pubDate", "1.0.0 mpc ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "1.0.0 mpc ", "1.0.0 mpc ", "rm", "./enclosure/@type", "/rss/channel/item", "mpc", "./title", "1.0.0 ", "flv", "1.0.0 ", "./link[@rel='enclosure']/@type", "hi!", "./link[@rel='enclosure']/@type", "./updated", "10.52.35  ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "./enclosure/@url", "SOCKS_PROXY" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        cDMetadata16.setTrackNames((java.util.List<java.lang.String>) strList50);
        cDMetadata1.setTrackNames((java.util.List<java.lang.String>) strList50);
        net.sourceforge.atunes.model.ColumnBean columnBean54 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean55 = columnBean54.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState56 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean57 = columnBean54.equals((java.lang.Object) submissionState56);
        net.sourceforge.atunes.model.CDMetadata cDMetadata58 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata58.setAlbumArtist("");
        java.lang.String str62 = cDMetadata58.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata63 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata63.setAlbumArtist("");
        java.lang.String str67 = cDMetadata63.getTitle((int) (byte) -1);
        java.lang.String[] strArray69 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        cDMetadata63.setTrackNames((java.util.List<java.lang.String>) strList70);
        cDMetadata58.setArtistNames((java.util.List<java.lang.String>) strList70);
        boolean boolean74 = columnBean54.equals((java.lang.Object) strList70);
        cDMetadata1.setTrackNames((java.util.List<java.lang.String>) strList70);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(iFontBean15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + submissionState56 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState56.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        cDMetadata0.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList8 = null;
        cDMetadata0.setTrackNames(strList8);
        cDMetadata0.setAlbumArtist("./link[@rel='enclosure']/@type");
        java.util.List<java.lang.String> strList12 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        java.util.List<java.lang.String> strList5 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc(97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.util.List<java.lang.Throwable> throwableList19 = throwableRankList0.getOrder();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList20 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList22 = throwableRankList20.getNFirstElements((int) (short) 10);
        int int23 = throwableRankList20.size();
        int int24 = throwableRankList20.size();
        java.util.List<java.lang.Throwable> throwableList25 = throwableRankList20.getOrder();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Integer int44 = throwableRankList26.getCount((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList45 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException49 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException47);
        java.lang.Throwable throwable50 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable50);
        java.lang.Throwable[] throwableArray52 = searchQuerySyntaxException51.getSuppressed();
        throwableRankList45.replaceItem((java.lang.Throwable) searchQuerySyntaxException47, (java.lang.Throwable) searchQuerySyntaxException51);
        java.util.List<java.lang.Throwable> throwableList54 = throwableRankList45.getOrder();
        java.lang.Throwable throwable55 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException56 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable55);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList57 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable58 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException59 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable58);
        java.lang.Throwable[] throwableArray60 = searchQuerySyntaxException59.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException61 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException59);
        java.lang.Throwable throwable62 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException63 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable62);
        java.lang.Throwable[] throwableArray64 = searchQuerySyntaxException63.getSuppressed();
        throwableRankList57.replaceItem((java.lang.Throwable) searchQuerySyntaxException59, (java.lang.Throwable) searchQuerySyntaxException63);
        searchQuerySyntaxException56.addSuppressed((java.lang.Throwable) searchQuerySyntaxException63);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException67 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException56);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException68 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException56);
        java.lang.Integer int69 = throwableRankList45.getCount((java.lang.Throwable) searchIndexNotAvailableException68);
        java.lang.Integer int70 = throwableRankList26.getCount((java.lang.Throwable) searchIndexNotAvailableException68);
        throwableRankList20.addItem((java.lang.Throwable) searchIndexNotAvailableException68);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList72 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable73 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException74 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable73);
        java.lang.Throwable[] throwableArray75 = searchQuerySyntaxException74.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException76 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException74);
        java.lang.Throwable throwable77 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException78 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable77);
        java.lang.Throwable[] throwableArray79 = searchQuerySyntaxException78.getSuppressed();
        throwableRankList72.replaceItem((java.lang.Throwable) searchQuerySyntaxException74, (java.lang.Throwable) searchQuerySyntaxException78);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException81 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException78);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException82 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException78);
        throwableRankList0.replaceItem((java.lang.Throwable) searchIndexNotAvailableException68, (java.lang.Throwable) searchQuerySyntaxException78);
        java.lang.Throwable[] throwableArray84 = searchQuerySyntaxException78.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableList19);
        org.junit.Assert.assertNotNull(throwableList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(throwableList25);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableList54);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getUrlXPath();
        java.lang.String str4 = feedType0.getAuthorXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./enclosure/@url" + "'", str3, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./author" + "'", str4, "./author");
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        java.util.List<java.lang.String> strList5 = cDMetadata0.getComposerNames();
        int int6 = cDMetadata0.getYear();
        java.lang.String str7 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        int int11 = cDMetadata0.getYear();
        cDMetadata0.setGenre("");
        cDMetadata0.setAlbumArtist("HTTP_PROXY");
        java.util.List<java.lang.String> strList16 = cDMetadata0.getArtistNames();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata6 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str7 = cDMetadata6.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata8 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata8.setAlbumArtist("");
        java.lang.String str11 = cDMetadata8.getGenre();
        java.lang.String[] strArray13 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        cDMetadata8.setTrackNames((java.util.List<java.lang.String>) strList14);
        cDMetadata6.setComposerNames((java.util.List<java.lang.String>) strList14);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList14);
        net.sourceforge.atunes.model.CDMetadata cDMetadata19 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str20 = cDMetadata19.getGenre();
        java.util.List<java.lang.String> strList21 = cDMetadata19.getComposerNames();
        java.lang.String str22 = cDMetadata19.getAlbum();
        java.util.List<java.lang.Integer> intList23 = cDMetadata19.getTracks();
        int int24 = cDMetadata19.getDisc();
        java.lang.String[] strArray32 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        cDMetadata19.setArtistNames((java.util.List<java.lang.String>) strList33);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList33);
        cDMetadata0.setAlbum("hi!");
        java.util.List<java.lang.String> strList39 = cDMetadata0.getComposerNames();
        java.lang.String str40 = cDMetadata0.getAlbumArtist();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort4 = columnBean0.getSort();
        columnBean0.setWidth((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort4);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType11 = applicationVersion9.getVersionType();
        java.lang.String str12 = applicationVersion9.getDownloadURL();
        java.lang.String str13 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str14 = applicationVersion9.getDownloadURL();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType15 = applicationVersion9.getVersionType();
        java.lang.String str16 = applicationVersion9.getChanges();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertTrue("'" + versionType11 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType11.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./description" + "'", str12, "./description");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./pubDate" + "'", str13, "./pubDate");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./description" + "'", str14, "./description");
        org.junit.Assert.assertTrue("'" + versionType15 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType15.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType11 = applicationVersion9.getVersionType();
        java.lang.String str12 = applicationVersion9.getDownloadURL();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertTrue("'" + versionType11 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType11.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./description" + "'", str12, "./description");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.util.List<java.lang.Integer> intList20 = throwableRankList0.getNFirstElementCounts((int) (short) -1);
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList23 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException27 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException25);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        throwableRankList23.replaceItem((java.lang.Throwable) searchQuerySyntaxException25, (java.lang.Throwable) searchQuerySyntaxException29);
        searchQuerySyntaxException22.addSuppressed((java.lang.Throwable) searchQuerySyntaxException29);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException22);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException33);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException33);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException35);
        java.util.List<java.lang.Integer> intList38 = throwableRankList0.getNFirstElementCounts((int) '#');
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList20);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(intList38);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        throwableRankList0.clear();
        java.util.List<java.lang.Throwable> throwableList8 = throwableRankList0.getNFirstElements(10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList11 = throwableRankList9.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable12 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable12);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList14 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException18 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException16);
        java.lang.Throwable throwable19 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable19);
        java.lang.Throwable[] throwableArray21 = searchQuerySyntaxException20.getSuppressed();
        throwableRankList14.replaceItem((java.lang.Throwable) searchQuerySyntaxException16, (java.lang.Throwable) searchQuerySyntaxException20);
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException24 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchQuerySyntaxException26);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException31);
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException13, (java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException36 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int37 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException34);
        java.util.List<java.lang.Throwable> throwableList39 = throwableRankList0.getNFirstElements((int) '#');
        java.util.List<java.lang.Integer> intList41 = throwableRankList0.getNFirstElementCounts((int) (short) 100);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList8);
        org.junit.Assert.assertNotNull(throwableList11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(throwableList39);
        org.junit.Assert.assertNotNull(intList41);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getTypeXPath();
        java.lang.String str3 = feedType0.getTitleXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@type" + "'", str2, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./title" + "'", str3, "./title");
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList28 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException32 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        java.lang.Throwable[] throwableArray35 = searchQuerySyntaxException34.getSuppressed();
        throwableRankList28.replaceItem((java.lang.Throwable) searchQuerySyntaxException30, (java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int37 = throwableRankList19.getCount((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Throwable throwable38 = null;
        java.lang.Throwable throwable39 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException40 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable39);
        throwableRankList19.replaceItem(throwable38, (java.lang.Throwable) searchQuerySyntaxException40);
        java.util.List<java.lang.Integer> intList43 = throwableRankList19.getNFirstElementCounts((int) (byte) 1);
        cDMetadata0.setTracks(intList43);
        java.lang.String str45 = cDMetadata0.getAlbumArtist();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = cDMetadata0.getArtist((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"java.util.List.size()\" because the return value of \"net.sourceforge.atunes.model.CDMetadata.getArtistNames()\" is null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(intList43);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        int int4 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList5 = throwableRankList0.getOrder();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException8.getSuppressed();
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList17 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList19 = throwableRankList17.getNFirstElements((int) (short) 10);
        int int20 = throwableRankList17.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList21 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable22 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable22);
        java.lang.Throwable[] throwableArray24 = searchQuerySyntaxException23.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException25 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        java.lang.Throwable throwable26 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable26);
        java.lang.Throwable[] throwableArray28 = searchQuerySyntaxException27.getSuppressed();
        throwableRankList21.replaceItem((java.lang.Throwable) searchQuerySyntaxException23, (java.lang.Throwable) searchQuerySyntaxException27);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException23.getSuppressed();
        java.lang.Integer int31 = throwableRankList17.getCount((java.lang.Throwable) searchQuerySyntaxException23);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException23);
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        searchQuerySyntaxException34.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable[] throwableArray45 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException41);
        java.util.List<java.lang.Integer> intList48 = throwableRankList0.getNFirstElementCounts((int) (short) -1);
        int int49 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableList5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(intList48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        int int15 = applicationVersion9.getMinorNumber();
        java.lang.String str16 = applicationVersion9.getChanges();
        java.lang.String str17 = applicationVersion9.getName();
        int int18 = applicationVersion9.getMajorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "mpc" + "'", str17, "mpc");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./enclosure/@url");
        lookAndFeelBean0.setSkin("./link[@rel='enclosure']/@type");
        lookAndFeelBean0.setSkin("");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        int int3 = columnBean0.getWidth();
        int int4 = columnBean0.getOrder();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str8 = cDMetadata5.getGenre();
        int int9 = cDMetadata5.getYear();
        int int10 = cDMetadata5.getYear();
        cDMetadata5.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList13 = null;
        cDMetadata5.setTrackNames(strList13);
        cDMetadata5.setAlbumArtist("./link[@rel='enclosure']/@type");
        boolean boolean17 = columnBean0.equals((java.lang.Object) "./link[@rel='enclosure']/@type");
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str19 = cDMetadata18.getGenre();
        java.util.List<java.lang.String> strList20 = cDMetadata18.getComposerNames();
        java.lang.String str21 = cDMetadata18.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList25 = cDMetadata22.getTracks();
        cDMetadata22.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList28 = cDMetadata22.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata29 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata29.setAlbumArtist("");
        java.lang.String str32 = cDMetadata29.getGenre();
        java.lang.String[] strArray34 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        cDMetadata29.setTrackNames((java.util.List<java.lang.String>) strList35);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList35);
        cDMetadata18.setTrackNames((java.util.List<java.lang.String>) strList35);
        java.util.List<java.lang.String> strList40 = cDMetadata18.getTrackNames();
        boolean boolean41 = columnBean0.equals((java.lang.Object) cDMetadata18);
        java.lang.String str42 = cDMetadata18.getAlbum();
        java.lang.String str43 = cDMetadata18.getGenre();
        java.lang.String str44 = cDMetadata18.getGenre();
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        int int4 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.IFontBean iFontBean1 = fontSettings0.getFont();
        fontSettings0.setUseFontSmoothing(true);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        org.junit.Assert.assertNull(iFontBean1);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList4 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException8 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.Throwable throwable9 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException10 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable9);
        java.lang.Throwable[] throwableArray11 = searchQuerySyntaxException10.getSuppressed();
        throwableRankList4.replaceItem((java.lang.Throwable) searchQuerySyntaxException6, (java.lang.Throwable) searchQuerySyntaxException10);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException6.getSuppressed();
        java.lang.Integer int14 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException6);
        int int15 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList17 = throwableRankList0.getNFirstElements((int) (byte) 1);
        java.util.List<java.lang.Throwable> throwableList18 = throwableRankList0.getOrder();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(throwableList17);
        org.junit.Assert.assertNotNull(throwableList18);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        int int14 = applicationVersion9.getMajorNumber();
        int int15 = applicationVersion9.getRevisionNumber();
        java.lang.String str16 = applicationVersion9.getChanges();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(90);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList0.getNFirstElements(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        java.lang.Integer int38 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException31);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList39 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException43 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException41);
        java.lang.Throwable throwable44 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable44);
        java.lang.Throwable[] throwableArray46 = searchQuerySyntaxException45.getSuppressed();
        throwableRankList39.replaceItem((java.lang.Throwable) searchQuerySyntaxException41, (java.lang.Throwable) searchQuerySyntaxException45);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList48 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable49 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException50 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable49);
        java.lang.Throwable[] throwableArray51 = searchQuerySyntaxException50.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException52 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException50);
        java.lang.Throwable throwable53 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException54 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable53);
        java.lang.Throwable[] throwableArray55 = searchQuerySyntaxException54.getSuppressed();
        throwableRankList48.replaceItem((java.lang.Throwable) searchQuerySyntaxException50, (java.lang.Throwable) searchQuerySyntaxException54);
        java.lang.Integer int57 = throwableRankList39.getCount((java.lang.Throwable) searchQuerySyntaxException54);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList58 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable59 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException60 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable59);
        java.lang.Throwable[] throwableArray61 = searchQuerySyntaxException60.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException62 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException60);
        java.lang.Throwable throwable63 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException64 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable63);
        java.lang.Throwable[] throwableArray65 = searchQuerySyntaxException64.getSuppressed();
        throwableRankList58.replaceItem((java.lang.Throwable) searchQuerySyntaxException60, (java.lang.Throwable) searchQuerySyntaxException64);
        java.util.List<java.lang.Throwable> throwableList67 = throwableRankList58.getOrder();
        java.lang.Throwable throwable68 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable68);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList70 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable71 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException72 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable71);
        java.lang.Throwable[] throwableArray73 = searchQuerySyntaxException72.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException74 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException72);
        java.lang.Throwable throwable75 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable75);
        java.lang.Throwable[] throwableArray77 = searchQuerySyntaxException76.getSuppressed();
        throwableRankList70.replaceItem((java.lang.Throwable) searchQuerySyntaxException72, (java.lang.Throwable) searchQuerySyntaxException76);
        searchQuerySyntaxException69.addSuppressed((java.lang.Throwable) searchQuerySyntaxException76);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException80 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException69);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException81 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException69);
        java.lang.Integer int82 = throwableRankList58.getCount((java.lang.Throwable) searchIndexNotAvailableException81);
        java.lang.Integer int83 = throwableRankList39.getCount((java.lang.Throwable) searchIndexNotAvailableException81);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException84 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException81);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException85 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException81);
        searchQuerySyntaxException31.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException81);
        java.lang.Throwable[] throwableArray87 = searchIndexNotAvailableException81.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableList67);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(throwableArray87);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        cDMetadata0.setGenre("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.util.List<java.lang.String> strList12 = cDMetadata0.getArtistNames();
        net.sourceforge.atunes.model.FontSettings fontSettings13 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata14 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata14.setAlbumArtist("");
        boolean boolean17 = fontSettings13.equals((java.lang.Object) cDMetadata14);
        fontSettings13.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean20 = fontSettings13.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata21 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str22 = cDMetadata21.getGenre();
        java.util.List<java.lang.String> strList23 = cDMetadata21.getComposerNames();
        java.lang.String str24 = cDMetadata21.getAlbum();
        java.util.List<java.lang.Integer> intList25 = cDMetadata21.getTracks();
        cDMetadata21.setAlbumArtist("mpc");
        java.lang.String str28 = cDMetadata21.getAlbum();
        boolean boolean29 = fontSettings13.equals((java.lang.Object) cDMetadata21);
        java.lang.String[] strArray54 = new java.lang.String[] { "./link[@rel='enclosure']/@type", "SOCKS_PROXY", "/feed/title", "./pubDate", "1.0.0 mpc ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "1.0.0 mpc ", "1.0.0 mpc ", "rm", "./enclosure/@type", "/rss/channel/item", "mpc", "./title", "1.0.0 ", "flv", "1.0.0 ", "./link[@rel='enclosure']/@type", "hi!", "./link[@rel='enclosure']/@type", "./updated", "10.52.35  ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "./enclosure/@url", "SOCKS_PROXY" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        cDMetadata21.setTrackNames((java.util.List<java.lang.String>) strList55);
        java.util.List<java.lang.String> strList58 = cDMetadata21.getTrackNames();
        cDMetadata0.setComposerNames(strList58);
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(iFontBean20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strList58);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        java.util.List<java.lang.Integer> intList16 = null;
        cDMetadata0.setTracks(intList16);
        cDMetadata0.setDisc((int) (short) 100);
        java.util.List<java.lang.String> strList20 = cDMetadata0.getTrackNames();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strList20);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        net.sourceforge.atunes.model.IFontBean iFontBean0 = null;
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings(iFontBean0, true, true);
        fontSettings3.setUseFontSmoothingSettingsFromOs(true);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        int int15 = applicationVersion9.getMinorNumber();
        java.lang.String str16 = applicationVersion9.getChanges();
        java.lang.String str17 = applicationVersion9.getName();
        int int18 = applicationVersion9.getMinorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "mpc" + "'", str17, "mpc");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDateXPath();
        java.lang.String str4 = feedType0.getDurationXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./pubDate" + "'", str3, "./pubDate");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./duration" + "'", str4, "./duration");
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        cDMetadata0.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList8 = null;
        cDMetadata0.setTrackNames(strList8);
        cDMetadata0.setAlbumArtist("");
        net.sourceforge.atunes.model.CDMetadata cDMetadata12 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str13 = cDMetadata12.getGenre();
        java.util.List<java.lang.String> strList14 = cDMetadata12.getComposerNames();
        java.lang.String str15 = cDMetadata12.getAlbum();
        java.util.List<java.lang.Integer> intList16 = cDMetadata12.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata17.setAlbumArtist("");
        java.lang.String str21 = cDMetadata17.getTitle((int) (byte) -1);
        java.lang.String[] strArray23 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList24);
        cDMetadata12.setTrackNames((java.util.List<java.lang.String>) strList24);
        cDMetadata12.setYear((int) (short) 1);
        int int30 = cDMetadata12.getYear();
        java.lang.String str31 = cDMetadata12.getGenre();
        cDMetadata12.setAlbum("/rss/channel/title");
        java.util.List<java.lang.String> strList34 = cDMetadata12.getTrackNames();
        cDMetadata0.setComposerNames(strList34);
        cDMetadata0.setDisc((int) ' ');
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strList34);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setOrder((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        int int4 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList5 = throwableRankList0.getOrder();
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList0.getNFirstElements(120);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableList5);
        org.junit.Assert.assertNotNull(throwableList7);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList0.getNFirstElements((int) (short) 100);
        throwableRankList0.clear();
        throwableRankList0.clear();
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList7);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        int int7 = cDMetadata0.getDisc();
        cDMetadata0.setAlbum("./pubDate");
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        fontSettings0.setUseFontSmoothing(false);
        net.sourceforge.atunes.model.IFontBean iFontBean5 = null;
        fontSettings0.setFont(iFontBean5);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        fontSettings0.setUseFontSmoothing(false);
        net.sourceforge.atunes.model.IFontBean iFontBean10 = null;
        fontSettings0.setFont(iFontBean10);
        boolean boolean12 = fontSettings0.isUseFontSmoothingSettingsFromOs();
        boolean boolean13 = fontSettings0.isUseFontSmoothing();
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        net.sourceforge.atunes.model.FeedType feedType5 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str6 = feedType5.getUrlXPath();
        java.lang.String str7 = feedType5.getNameXPath();
        java.lang.String str8 = feedType5.getDescriptionXPath();
        boolean boolean9 = fontSettings0.equals((java.lang.Object) str8);
        java.lang.Class<?> wildcardClass10 = fontSettings0.getClass();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + feedType5 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType5.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./enclosure/@url" + "'", str6, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/rss/channel/title" + "'", str7, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./description" + "'", str8, "./description");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean8 = null;
        fontSettings0.setFont(iFontBean8);
        net.sourceforge.atunes.model.IFontBean iFontBean10 = fontSettings0.getFont();
        fontSettings0.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType17 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion22 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType17, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str23 = applicationVersion22.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType24 = applicationVersion22.getVersionType();
        java.lang.String str25 = applicationVersion22.getDownloadURL();
        boolean boolean26 = fontSettings0.equals((java.lang.Object) applicationVersion22);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(iFontBean10);
        org.junit.Assert.assertTrue("'" + versionType17 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType17.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "./title" + "'", str23, "./title");
        org.junit.Assert.assertTrue("'" + versionType24 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType24.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./description" + "'", str25, "./description");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toString();
        java.lang.String str14 = applicationVersion9.getChanges();
        net.sourceforge.atunes.model.FontSettings fontSettings15 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata16 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata16.setAlbumArtist("");
        boolean boolean19 = fontSettings15.equals((java.lang.Object) cDMetadata16);
        boolean boolean20 = applicationVersion9.equals((java.lang.Object) boolean19);
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 mpc " + "'", str13, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        int int10 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList11 = cDMetadata0.getComposerNames();
        cDMetadata0.setGenre("mpc");
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setAlbumArtist("net.sourceforge.atunes.model.InconsistentRepositoryException");
        int int11 = cDMetadata0.getYear();
        cDMetadata0.setGenre("");
        cDMetadata0.setYear(2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata8 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str9 = cDMetadata8.getGenre();
        java.util.List<java.lang.String> strList10 = cDMetadata8.getComposerNames();
        java.lang.String str11 = cDMetadata8.getAlbum();
        java.util.List<java.lang.Integer> intList12 = cDMetadata8.getTracks();
        cDMetadata8.setAlbumArtist("mpc");
        java.lang.String str15 = cDMetadata8.getAlbum();
        boolean boolean16 = fontSettings0.equals((java.lang.Object) cDMetadata8);
        net.sourceforge.atunes.model.ColumnBean columnBean17 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean18 = columnBean17.isVisible();
        columnBean17.setOrder((int) (byte) -1);
        columnBean17.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort23 = columnBean17.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute24 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean25 = columnBean17.equals((java.lang.Object) textTagAttribute24);
        columnBean17.setVisible(true);
        columnBean17.setOrder((int) (short) 100);
        boolean boolean30 = fontSettings0.equals((java.lang.Object) (short) 100);
        net.sourceforge.atunes.model.ColumnBean columnBean31 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty32 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean33 = columnBean31.equals((java.lang.Object) audioObjectProperty32);
        net.sourceforge.atunes.model.FontSettings fontSettings34 = new net.sourceforge.atunes.model.FontSettings();
        boolean boolean35 = fontSettings34.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean36 = null;
        fontSettings34.setFont(iFontBean36);
        fontSettings34.setUseFontSmoothingSettingsFromOs(true);
        boolean boolean40 = columnBean31.equals((java.lang.Object) true);
        boolean boolean41 = fontSettings0.equals((java.lang.Object) columnBean31);
        net.sourceforge.atunes.model.ColumnSort columnSort42 = columnBean31.getSort();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(columnSort23);
        org.junit.Assert.assertTrue("'" + textTagAttribute24 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute24.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + audioObjectProperty32 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty32.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(columnSort42);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        columnBean0.setWidth((int) (byte) 10);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnBean columnBean13 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean14 = columnBean13.isVisible();
        columnBean13.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort17 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean13.setSort(columnSort17);
        int int19 = columnBean13.getOrder();
        net.sourceforge.atunes.model.ColumnSort columnSort20 = columnBean13.getSort();
        columnBean0.setSort(columnSort20);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + columnSort17 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort17.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + columnSort20 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort20.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        cDMetadata0.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList8 = null;
        cDMetadata0.setTrackNames(strList8);
        cDMetadata0.setAlbumArtist("./link[@rel='enclosure']/@type");
        net.sourceforge.atunes.model.CDMetadata cDMetadata12 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata12.setAlbumArtist("");
        java.lang.String str15 = cDMetadata12.getGenre();
        int int16 = cDMetadata12.getYear();
        int int17 = cDMetadata12.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str19 = cDMetadata18.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata20 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata20.setAlbumArtist("");
        java.lang.String str23 = cDMetadata20.getGenre();
        java.lang.String[] strArray25 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        cDMetadata20.setTrackNames((java.util.List<java.lang.String>) strList26);
        cDMetadata18.setComposerNames((java.util.List<java.lang.String>) strList26);
        cDMetadata12.setTrackNames((java.util.List<java.lang.String>) strList26);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList26);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        boolean boolean5 = fontSettings0.isUseFontSmoothingSettingsFromOs();
        net.sourceforge.atunes.model.IFontBean iFontBean6 = null;
        fontSettings0.setFont(iFontBean6);
        net.sourceforge.atunes.model.IFontBean iFontBean8 = fontSettings0.getFont();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(iFontBean8);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        fontSettings0.setUseFontSmoothing(false);
        boolean boolean6 = fontSettings0.equals((java.lang.Object) 10L);
        fontSettings0.setUseFontSmoothing(true);
        boolean boolean10 = fontSettings0.equals((java.lang.Object) "net.sourceforge.atunes.model.SearchQuerySyntaxException");
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./enclosure/@url");
        lookAndFeelBean0.setSkin("hi!");
        lookAndFeelBean0.setSkin("1.0.0 ");
        lookAndFeelBean0.setSkin("net.sourceforge.atunes.model.InconsistentRepositoryException");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.toShortString();
        java.lang.String str13 = applicationVersion9.getDownloadURL();
        java.lang.String str14 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType19 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion24 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType19, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str25 = applicationVersion24.getDate();
        java.lang.String str26 = applicationVersion24.toShortString();
        int int27 = applicationVersion24.getMajorNumber();
        int int28 = applicationVersion24.getMinorNumber();
        java.lang.String str29 = applicationVersion24.getName();
        java.lang.String str30 = applicationVersion24.toShortString();
        java.lang.String str31 = applicationVersion24.getDirectDownloadURL();
        java.lang.String str32 = applicationVersion24.toShortString();
        int int33 = applicationVersion9.compareTo(applicationVersion24);
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "1.0.0 " + "'", str12, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./description" + "'", str13, "./description");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + versionType19 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType19.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./title" + "'", str25, "./title");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "1.0.0 " + "'", str26, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "mpc" + "'", str29, "mpc");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1.0.0 " + "'", str30, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "./pubDate" + "'", str31, "./pubDate");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0.0 " + "'", str32, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        net.sourceforge.atunes.model.RankList<java.lang.CharSequence> charSequenceRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.CharSequence>();
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList23 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException27 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException25);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        throwableRankList23.replaceItem((java.lang.Throwable) searchQuerySyntaxException25, (java.lang.Throwable) searchQuerySyntaxException29);
        java.util.List<java.lang.Throwable> throwableList32 = throwableRankList23.getOrder();
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        searchQuerySyntaxException34.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException46 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int47 = throwableRankList23.getCount((java.lang.Throwable) searchIndexNotAvailableException46);
        throwableRankList0.addItem((java.lang.Throwable) searchIndexNotAvailableException46);
        java.util.List<java.lang.Integer> intList50 = throwableRankList0.getNFirstElementCounts(90);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList51 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList53 = throwableRankList51.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable54 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException55 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable54);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList56 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        java.lang.Throwable[] throwableArray59 = searchQuerySyntaxException58.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException60 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Throwable throwable61 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException62 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable61);
        java.lang.Throwable[] throwableArray63 = searchQuerySyntaxException62.getSuppressed();
        throwableRankList56.replaceItem((java.lang.Throwable) searchQuerySyntaxException58, (java.lang.Throwable) searchQuerySyntaxException62);
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchQuerySyntaxException62);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable67 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException68 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable67);
        java.lang.Throwable[] throwableArray69 = searchQuerySyntaxException68.getSuppressed();
        searchQuerySyntaxException55.addSuppressed((java.lang.Throwable) searchQuerySyntaxException68);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException71 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException55);
        java.lang.Throwable throwable72 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException73 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable72);
        java.lang.Throwable[] throwableArray74 = searchQuerySyntaxException73.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException75 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException73);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException76 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException73);
        throwableRankList51.replaceItem((java.lang.Throwable) searchQuerySyntaxException55, (java.lang.Throwable) searchQuerySyntaxException76);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException55);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList81 = throwableRankList0.getNFirstElementCounts(120);
        java.util.List<java.lang.Throwable> throwableList83 = throwableRankList0.getNFirstElements((int) (byte) 10);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableList32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(intList50);
        org.junit.Assert.assertNotNull(throwableList53);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(intList81);
        org.junit.Assert.assertNotNull(throwableList83);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setSkin("");
        lookAndFeelBean0.setSkin("/rss/channel/title");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException9 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList15 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable16 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException17 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable16);
        java.lang.Throwable[] throwableArray18 = searchQuerySyntaxException17.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException19 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException17);
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        throwableRankList15.replaceItem((java.lang.Throwable) searchQuerySyntaxException17, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException24 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException25 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException24);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException26 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException25);
        searchQuerySyntaxException14.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException26);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException14);
        searchQuerySyntaxException6.addSuppressed((java.lang.Throwable) searchQuerySyntaxException28);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        java.lang.String str12 = cDMetadata9.getGenre();
        java.lang.String[] strArray14 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList15);
        java.lang.String str19 = cDMetadata0.getAlbum();
        cDMetadata0.setDisc((int) '#');
        java.util.List<java.lang.String> strList22 = null;
        cDMetadata0.setTrackNames(strList22);
        java.lang.String str25 = cDMetadata0.getArtist(90);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getDescriptionXPath();
        java.lang.String str3 = feedType0.getTypeXPath();
        java.lang.Class<?> wildcardClass4 = feedType0.getClass();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./description" + "'", str2, "./description");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./enclosure/@type" + "'", str3, "./enclosure/@type");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        java.lang.String str10 = cDMetadata0.getTitle((-1));
        cDMetadata0.setAlbumArtist("10.52.35 ");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.util.List<java.lang.Integer> intList7 = cDMetadata1.getTracks();
        net.sourceforge.atunes.model.FontSettings fontSettings8 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        boolean boolean12 = fontSettings8.equals((java.lang.Object) cDMetadata9);
        fontSettings8.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean15 = fontSettings8.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata16 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str17 = cDMetadata16.getGenre();
        java.util.List<java.lang.String> strList18 = cDMetadata16.getComposerNames();
        java.lang.String str19 = cDMetadata16.getAlbum();
        java.util.List<java.lang.Integer> intList20 = cDMetadata16.getTracks();
        cDMetadata16.setAlbumArtist("mpc");
        java.lang.String str23 = cDMetadata16.getAlbum();
        boolean boolean24 = fontSettings8.equals((java.lang.Object) cDMetadata16);
        java.lang.String[] strArray49 = new java.lang.String[] { "./link[@rel='enclosure']/@type", "SOCKS_PROXY", "/feed/title", "./pubDate", "1.0.0 mpc ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "1.0.0 mpc ", "1.0.0 mpc ", "rm", "./enclosure/@type", "/rss/channel/item", "mpc", "./title", "1.0.0 ", "flv", "1.0.0 ", "./link[@rel='enclosure']/@type", "hi!", "./link[@rel='enclosure']/@type", "./updated", "10.52.35  ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "./enclosure/@url", "SOCKS_PROXY" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        cDMetadata16.setTrackNames((java.util.List<java.lang.String>) strList50);
        cDMetadata1.setTrackNames((java.util.List<java.lang.String>) strList50);
        java.util.List<java.lang.String> strList54 = cDMetadata1.getComposerNames();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(iFontBean15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str19 = cDMetadata18.getGenre();
        java.util.List<java.lang.String> strList20 = cDMetadata18.getComposerNames();
        java.lang.String str21 = cDMetadata18.getAlbum();
        java.util.List<java.lang.Integer> intList22 = cDMetadata18.getTracks();
        int int23 = cDMetadata18.getYear();
        java.util.List<java.lang.String> strList24 = cDMetadata18.getArtistNames();
        cDMetadata18.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata27 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str28 = cDMetadata27.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata29 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata29.setAlbumArtist("");
        java.lang.String str32 = cDMetadata29.getGenre();
        java.lang.String[] strArray34 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        cDMetadata29.setTrackNames((java.util.List<java.lang.String>) strList35);
        cDMetadata27.setComposerNames((java.util.List<java.lang.String>) strList35);
        net.sourceforge.atunes.model.CDMetadata cDMetadata39 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str40 = cDMetadata39.getGenre();
        java.util.List<java.lang.String> strList41 = cDMetadata39.getComposerNames();
        java.lang.String str42 = cDMetadata39.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata43 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata43.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList46 = cDMetadata43.getTracks();
        cDMetadata43.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList49 = cDMetadata43.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata50 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata50.setAlbumArtist("");
        java.lang.String str53 = cDMetadata50.getGenre();
        java.lang.String[] strArray55 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        cDMetadata50.setTrackNames((java.util.List<java.lang.String>) strList56);
        cDMetadata43.setTrackNames((java.util.List<java.lang.String>) strList56);
        cDMetadata39.setTrackNames((java.util.List<java.lang.String>) strList56);
        cDMetadata27.setTrackNames((java.util.List<java.lang.String>) strList56);
        cDMetadata18.setArtistNames((java.util.List<java.lang.String>) strList56);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList56);
        java.lang.String str64 = cDMetadata0.getGenre();
        java.lang.String str66 = cDMetadata0.getTitle((int) 'a');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(intList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(intList46);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        cDMetadata0.setGenre("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.util.List<java.lang.String> strList12 = cDMetadata0.getArtistNames();
        java.lang.String str13 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/rss/channel/item" + "'", str13, "/rss/channel/item");
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        boolean boolean1 = fontSettings0.isUseFontSmoothing();
        net.sourceforge.atunes.model.IFontBean iFontBean2 = null;
        fontSettings0.setFont(iFontBean2);
        net.sourceforge.atunes.model.IFontBean iFontBean4 = null;
        fontSettings0.setFont(iFontBean4);
        boolean boolean6 = fontSettings0.isUseFontSmoothing();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        net.sourceforge.atunes.model.ViewMode viewMode0 = net.sourceforge.atunes.model.ViewMode.GENRE;
        net.sourceforge.atunes.model.IRepository iRepository1 = null;
        java.util.Map<java.lang.String, ?> strMap2 = viewMode0.getDataForView(iRepository1);
        org.junit.Assert.assertTrue("'" + viewMode0 + "' != '" + net.sourceforge.atunes.model.ViewMode.GENRE + "'", viewMode0.equals(net.sourceforge.atunes.model.ViewMode.GENRE));
        org.junit.Assert.assertNotNull(strMap2);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnBean columnBean6 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean7 = columnBean6.isVisible();
        columnBean6.setOrder((int) (byte) -1);
        columnBean6.setVisible(false);
        columnBean6.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType18 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion23 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType18, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str24 = applicationVersion23.getDate();
        java.lang.String str25 = applicationVersion23.toShortString();
        java.lang.String str26 = applicationVersion23.getChanges();
        boolean boolean27 = columnBean6.equals((java.lang.Object) applicationVersion23);
        java.lang.String str28 = applicationVersion23.toString();
        java.lang.String str29 = applicationVersion23.getDownloadURL();
        boolean boolean30 = columnBean0.equals((java.lang.Object) str29);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + versionType18 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType18.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "./title" + "'", str24, "./title");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "1.0.0 " + "'", str25, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "./title" + "'", str26, "./title");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "1.0.0 mpc " + "'", str28, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./description" + "'", str29, "./description");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        net.sourceforge.atunes.model.RankList<net.sourceforge.atunes.model.ImageSize> imageSizeRankList0 = new net.sourceforge.atunes.model.RankList<net.sourceforge.atunes.model.ImageSize>();
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.toShortString();
        java.lang.String str15 = applicationVersion9.toShortString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "1.0.0 " + "'", str14, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        columnBean0.setWidth((int) '4');
        boolean boolean9 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toString();
        java.lang.String str14 = applicationVersion9.getChanges();
        int int15 = applicationVersion9.getMajorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType20 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion25 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType20, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str26 = applicationVersion25.getDate();
        java.lang.String str27 = applicationVersion25.toShortString();
        int int28 = applicationVersion25.getMajorNumber();
        int int29 = applicationVersion25.getMinorNumber();
        java.lang.String str30 = applicationVersion25.getName();
        java.lang.String str31 = applicationVersion25.toShortString();
        java.lang.String str32 = applicationVersion25.getDirectDownloadURL();
        int int33 = applicationVersion9.compareTo(applicationVersion25);
        int int34 = applicationVersion25.getRevisionNumber();
        int int35 = applicationVersion25.getRevisionNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 mpc " + "'", str13, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + versionType20 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType20.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "./title" + "'", str26, "./title");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "1.0.0 " + "'", str27, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "mpc" + "'", str30, "mpc");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "1.0.0 " + "'", str31, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "./pubDate" + "'", str32, "./pubDate");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        java.lang.String str13 = applicationVersion9.toShortString();
        int int14 = applicationVersion9.getRevisionNumber();
        int int15 = applicationVersion9.getMajorNumber();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "1.0.0 " + "'", str13, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.lang.String str4 = lookAndFeelBean0.getName();
        lookAndFeelBean0.setSkin("/rss/channel/item");
        lookAndFeelBean0.setSkin("./updated");
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str4, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable[] throwableArray18 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList21 = throwableRankList19.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable22 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable22);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList24 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        java.lang.Throwable[] throwableArray27 = searchQuerySyntaxException26.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException28 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException26);
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        throwableRankList24.replaceItem((java.lang.Throwable) searchQuerySyntaxException26, (java.lang.Throwable) searchQuerySyntaxException30);
        searchQuerySyntaxException23.addSuppressed((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException23);
        java.lang.Throwable throwable35 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException36 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable35);
        java.lang.Throwable[] throwableArray37 = searchQuerySyntaxException36.getSuppressed();
        searchQuerySyntaxException23.addSuppressed((java.lang.Throwable) searchQuerySyntaxException36);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException23);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException43 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException44 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException41);
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException23, (java.lang.Throwable) searchQuerySyntaxException44);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList47 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable48 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable48);
        java.lang.Throwable[] throwableArray50 = searchQuerySyntaxException49.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException51 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException49);
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        throwableRankList47.replaceItem((java.lang.Throwable) searchQuerySyntaxException49, (java.lang.Throwable) searchQuerySyntaxException53);
        java.util.List<java.lang.Throwable> throwableList56 = throwableRankList47.getOrder();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        searchQuerySyntaxException58.addSuppressed((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException58);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException70 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int71 = throwableRankList47.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.util.List<java.lang.Integer> intList73 = throwableRankList47.getNFirstElementCounts((int) '#');
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList74 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException75 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException76 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList74.replaceItem((java.lang.Throwable) inconsistentRepositoryException75, (java.lang.Throwable) inconsistentRepositoryException76);
        throwableRankList47.addItem((java.lang.Throwable) inconsistentRepositoryException75);
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) inconsistentRepositoryException75);
        java.util.List<java.lang.Throwable> throwableList80 = throwableRankList0.getOrder();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableList21);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableList56);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(intList73);
        org.junit.Assert.assertNotNull(throwableList80);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        int int16 = applicationVersion13.getMajorNumber();
        int int17 = applicationVersion13.getMinorNumber();
        java.lang.String str18 = applicationVersion13.getName();
        java.lang.String str19 = applicationVersion13.getChanges();
        boolean boolean20 = columnBean0.equals((java.lang.Object) applicationVersion13);
        int int21 = columnBean0.getOrder();
        boolean boolean22 = columnBean0.isVisible();
        int int23 = columnBean0.getWidth();
        columnBean0.setWidth(32);
        int int26 = columnBean0.getOrder();
        int int27 = columnBean0.getOrder();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "./title" + "'", str19, "./title");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        int int3 = columnBean0.getWidth();
        int int4 = columnBean0.getOrder();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str8 = cDMetadata5.getGenre();
        int int9 = cDMetadata5.getYear();
        int int10 = cDMetadata5.getYear();
        cDMetadata5.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList13 = null;
        cDMetadata5.setTrackNames(strList13);
        cDMetadata5.setAlbumArtist("./link[@rel='enclosure']/@type");
        boolean boolean17 = columnBean0.equals((java.lang.Object) "./link[@rel='enclosure']/@type");
        net.sourceforge.atunes.model.CDMetadata cDMetadata18 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str19 = cDMetadata18.getGenre();
        java.util.List<java.lang.String> strList20 = cDMetadata18.getComposerNames();
        java.lang.String str21 = cDMetadata18.getAlbum();
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList25 = cDMetadata22.getTracks();
        cDMetadata22.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList28 = cDMetadata22.getTrackNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata29 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata29.setAlbumArtist("");
        java.lang.String str32 = cDMetadata29.getGenre();
        java.lang.String[] strArray34 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        cDMetadata29.setTrackNames((java.util.List<java.lang.String>) strList35);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList35);
        cDMetadata18.setTrackNames((java.util.List<java.lang.String>) strList35);
        java.util.List<java.lang.String> strList40 = cDMetadata18.getTrackNames();
        boolean boolean41 = columnBean0.equals((java.lang.Object) cDMetadata18);
        java.lang.String str42 = cDMetadata18.getAlbum();
        java.lang.String str43 = cDMetadata18.getGenre();
        java.lang.String str45 = cDMetadata18.getTitle(3);
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(intList25);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        int int4 = throwableRankList0.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList5 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList5.getNFirstElements((int) (short) 10);
        int int8 = throwableRankList5.size();
        int int9 = throwableRankList5.size();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int23 = throwableRankList5.getCount((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList24 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList24.getNFirstElements((int) (short) 100);
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList29 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable30 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException31 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable30);
        java.lang.Throwable[] throwableArray32 = searchQuerySyntaxException31.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException33 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException31);
        java.lang.Throwable throwable34 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable34);
        java.lang.Throwable[] throwableArray36 = searchQuerySyntaxException35.getSuppressed();
        throwableRankList29.replaceItem((java.lang.Throwable) searchQuerySyntaxException31, (java.lang.Throwable) searchQuerySyntaxException35);
        searchQuerySyntaxException28.addSuppressed((java.lang.Throwable) searchQuerySyntaxException35);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        searchQuerySyntaxException28.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException44 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable45 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException46 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable45);
        java.lang.Throwable[] throwableArray47 = searchQuerySyntaxException46.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException48 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException46);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException46);
        throwableRankList24.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException49);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList51 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException52 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException53 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList51.replaceItem((java.lang.Throwable) inconsistentRepositoryException52, (java.lang.Throwable) inconsistentRepositoryException53);
        java.lang.Throwable throwable55 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException56 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable55);
        java.lang.Throwable[] throwableArray57 = searchQuerySyntaxException56.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException58 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException56);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException59 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException56);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList60 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable61 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException62 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable61);
        java.lang.Throwable[] throwableArray63 = searchQuerySyntaxException62.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException64 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException62);
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        java.lang.Throwable[] throwableArray67 = searchQuerySyntaxException66.getSuppressed();
        throwableRankList60.replaceItem((java.lang.Throwable) searchQuerySyntaxException62, (java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException70 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException69);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException71 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException70);
        searchQuerySyntaxException59.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException71);
        throwableRankList51.addItem((java.lang.Throwable) searchQuerySyntaxException59);
        throwableRankList5.replaceItem((java.lang.Throwable) searchQuerySyntaxException49, (java.lang.Throwable) searchQuerySyntaxException59);
        throwableRankList0.addItem((java.lang.Throwable) searchQuerySyntaxException49);
        java.lang.Throwable[] throwableArray76 = searchQuerySyntaxException49.getSuppressed();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(throwableList7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray76);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList6 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException10 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException8);
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        throwableRankList6.replaceItem((java.lang.Throwable) searchQuerySyntaxException8, (java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Integer int16 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException18);
        java.lang.Integer int21 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException22 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException20);
        java.lang.String str23 = searchIndexNotAvailableException22.toString();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str23, "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str1 = feedType0.getTypeXPath();
        java.lang.String str2 = feedType0.getUrlXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getAuthorXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./link[@rel='enclosure']/@type" + "'", str1, "./link[@rel='enclosure']/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./summary" + "'", str3, "./summary");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./author/name" + "'", str4, "./author/name");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/feed/title" + "'", str5, "/feed/title");
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        int int1 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getOrder();
        java.lang.Throwable throwable3 = null;
        java.lang.Integer int4 = throwableRankList0.getCount(throwable3);
        java.util.List<java.lang.Integer> intList6 = throwableRankList0.getNFirstElementCounts(1);
        throwableRankList0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(intList6);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        net.sourceforge.atunes.model.AudioObjectProperty audioObjectProperty1 = net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY;
        boolean boolean2 = columnBean0.equals((java.lang.Object) audioObjectProperty1);
        boolean boolean3 = columnBean0.isVisible();
        columnBean0.setWidth((int) ' ');
        boolean boolean6 = columnBean0.isVisible();
        org.junit.Assert.assertTrue("'" + audioObjectProperty1 + "' != '" + net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY + "'", audioObjectProperty1.equals(net.sourceforge.atunes.model.AudioObjectProperty.NOT_LISTENED_ENTRY));
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        int int4 = cDMetadata0.getYear();
        int int5 = cDMetadata0.getYear();
        cDMetadata0.setGenre("./enclosure/@url");
        java.util.List<java.lang.String> strList8 = null;
        cDMetadata0.setTrackNames(strList8);
        cDMetadata0.setAlbumArtist("");
        net.sourceforge.atunes.model.CDMetadata cDMetadata12 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str13 = cDMetadata12.getGenre();
        java.util.List<java.lang.String> strList14 = cDMetadata12.getComposerNames();
        java.lang.String str15 = cDMetadata12.getAlbum();
        java.util.List<java.lang.Integer> intList16 = cDMetadata12.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata17 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata17.setAlbumArtist("");
        java.lang.String str21 = cDMetadata17.getTitle((int) (byte) -1);
        java.lang.String[] strArray23 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        cDMetadata17.setTrackNames((java.util.List<java.lang.String>) strList24);
        cDMetadata12.setTrackNames((java.util.List<java.lang.String>) strList24);
        cDMetadata12.setYear((int) (short) 1);
        int int30 = cDMetadata12.getYear();
        java.lang.String str31 = cDMetadata12.getGenre();
        cDMetadata12.setAlbum("/rss/channel/title");
        java.util.List<java.lang.String> strList34 = cDMetadata12.getTrackNames();
        cDMetadata0.setComposerNames(strList34);
        int int36 = cDMetadata0.getDisc();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(intList16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata8 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str9 = cDMetadata8.getGenre();
        java.util.List<java.lang.String> strList10 = cDMetadata8.getComposerNames();
        java.lang.String str11 = cDMetadata8.getAlbum();
        java.util.List<java.lang.Integer> intList12 = cDMetadata8.getTracks();
        cDMetadata8.setAlbumArtist("mpc");
        java.lang.String str15 = cDMetadata8.getAlbum();
        boolean boolean16 = fontSettings0.equals((java.lang.Object) cDMetadata8);
        fontSettings0.setUseFontSmoothing(true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(intList12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        java.lang.String str5 = cDMetadata1.getAlbum();
        java.lang.String str6 = cDMetadata1.getAlbum();
        java.util.List<java.lang.Integer> intList7 = cDMetadata1.getTracks();
        net.sourceforge.atunes.model.FontSettings fontSettings8 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        boolean boolean12 = fontSettings8.equals((java.lang.Object) cDMetadata9);
        fontSettings8.setUseFontSmoothing(true);
        net.sourceforge.atunes.model.IFontBean iFontBean15 = fontSettings8.getFont();
        net.sourceforge.atunes.model.CDMetadata cDMetadata16 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str17 = cDMetadata16.getGenre();
        java.util.List<java.lang.String> strList18 = cDMetadata16.getComposerNames();
        java.lang.String str19 = cDMetadata16.getAlbum();
        java.util.List<java.lang.Integer> intList20 = cDMetadata16.getTracks();
        cDMetadata16.setAlbumArtist("mpc");
        java.lang.String str23 = cDMetadata16.getAlbum();
        boolean boolean24 = fontSettings8.equals((java.lang.Object) cDMetadata16);
        java.lang.String[] strArray49 = new java.lang.String[] { "./link[@rel='enclosure']/@type", "SOCKS_PROXY", "/feed/title", "./pubDate", "1.0.0 mpc ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "1.0.0 mpc ", "1.0.0 mpc ", "rm", "./enclosure/@type", "/rss/channel/item", "mpc", "./title", "1.0.0 ", "flv", "1.0.0 ", "./link[@rel='enclosure']/@type", "hi!", "./link[@rel='enclosure']/@type", "./updated", "10.52.35  ", "net.sourceforge.atunes.model.InconsistentRepositoryException", "./enclosure/@url", "SOCKS_PROXY" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        cDMetadata16.setTrackNames((java.util.List<java.lang.String>) strList50);
        cDMetadata1.setTrackNames((java.util.List<java.lang.String>) strList50);
        java.util.List<java.lang.Integer> intList54 = cDMetadata1.getTracks();
        java.lang.String str55 = cDMetadata1.getGenre();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(intList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(iFontBean15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(intList20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(intList54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        throwableRankList0.clear();
        java.util.List<java.lang.Integer> intList5 = throwableRankList0.getNFirstElementCounts(150);
        java.util.List<java.lang.Throwable> throwableList7 = throwableRankList0.getNFirstElements((int) (short) 100);
        throwableRankList0.clear();
        java.lang.Throwable throwable9 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException10 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable9);
        java.lang.Throwable[] throwableArray11 = searchQuerySyntaxException10.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException12 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException10);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList14 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException18 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException16);
        java.lang.Throwable throwable19 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException20 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable19);
        java.lang.Throwable[] throwableArray21 = searchQuerySyntaxException20.getSuppressed();
        throwableRankList14.replaceItem((java.lang.Throwable) searchQuerySyntaxException16, (java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException23 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException20);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException24 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException23);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException25 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException24);
        searchQuerySyntaxException13.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException25);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException27 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList28 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        java.lang.Throwable[] throwableArray31 = searchQuerySyntaxException30.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException32 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        java.lang.Throwable[] throwableArray35 = searchQuerySyntaxException34.getSuppressed();
        throwableRankList28.replaceItem((java.lang.Throwable) searchQuerySyntaxException30, (java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList37 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException41 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException39);
        java.lang.Throwable throwable42 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException43 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable42);
        java.lang.Throwable[] throwableArray44 = searchQuerySyntaxException43.getSuppressed();
        throwableRankList37.replaceItem((java.lang.Throwable) searchQuerySyntaxException39, (java.lang.Throwable) searchQuerySyntaxException43);
        java.lang.Integer int46 = throwableRankList28.getCount((java.lang.Throwable) searchQuerySyntaxException43);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList47 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable48 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable48);
        java.lang.Throwable[] throwableArray50 = searchQuerySyntaxException49.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException51 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException49);
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        throwableRankList47.replaceItem((java.lang.Throwable) searchQuerySyntaxException49, (java.lang.Throwable) searchQuerySyntaxException53);
        java.util.List<java.lang.Throwable> throwableList56 = throwableRankList47.getOrder();
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        searchQuerySyntaxException58.addSuppressed((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException58);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException70 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int71 = throwableRankList47.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Integer int72 = throwableRankList28.getCount((java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Throwable[] throwableArray73 = searchIndexNotAvailableException70.getSuppressed();
        java.lang.Throwable[] throwableArray74 = searchIndexNotAvailableException70.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException13, (java.lang.Throwable) searchIndexNotAvailableException70);
        java.lang.Throwable[] throwableArray76 = searchQuerySyntaxException13.getSuppressed();
        java.lang.String str77 = searchQuerySyntaxException13.toString();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(intList5);
        org.junit.Assert.assertNotNull(throwableList7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableList56);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str77, "net.sourceforge.atunes.model.SearchQuerySyntaxException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        throwableRankList0.clear();
        throwableRankList0.clear();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException25 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException35 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException32);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException36 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException35);
        inconsistentRepositoryException25.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException36);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList38 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable39 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException40 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable39);
        java.lang.Throwable[] throwableArray41 = searchQuerySyntaxException40.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException42 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException40);
        java.lang.Throwable throwable43 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException44 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable43);
        java.lang.Throwable[] throwableArray45 = searchQuerySyntaxException44.getSuppressed();
        throwableRankList38.replaceItem((java.lang.Throwable) searchQuerySyntaxException40, (java.lang.Throwable) searchQuerySyntaxException44);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList47 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable48 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException49 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable48);
        java.lang.Throwable[] throwableArray50 = searchQuerySyntaxException49.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException51 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException49);
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        throwableRankList47.replaceItem((java.lang.Throwable) searchQuerySyntaxException49, (java.lang.Throwable) searchQuerySyntaxException53);
        java.lang.Integer int56 = throwableRankList38.getCount((java.lang.Throwable) searchQuerySyntaxException53);
        searchIndexNotAvailableException36.addSuppressed((java.lang.Throwable) searchQuerySyntaxException53);
        java.lang.Throwable throwable58 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException59 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable58);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList60 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable61 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException62 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable61);
        java.lang.Throwable[] throwableArray63 = searchQuerySyntaxException62.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException64 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException62);
        java.lang.Throwable throwable65 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException66 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable65);
        java.lang.Throwable[] throwableArray67 = searchQuerySyntaxException66.getSuppressed();
        throwableRankList60.replaceItem((java.lang.Throwable) searchQuerySyntaxException62, (java.lang.Throwable) searchQuerySyntaxException66);
        searchQuerySyntaxException59.addSuppressed((java.lang.Throwable) searchQuerySyntaxException66);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException70 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException59);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException71 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException70);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException72 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException71);
        searchQuerySyntaxException53.addSuppressed((java.lang.Throwable) searchQuerySyntaxException71);
        java.lang.Integer int74 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException71);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 10);
        int int3 = throwableRankList0.size();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList4 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException8 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException6);
        java.lang.Throwable throwable9 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException10 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable9);
        java.lang.Throwable[] throwableArray11 = searchQuerySyntaxException10.getSuppressed();
        throwableRankList4.replaceItem((java.lang.Throwable) searchQuerySyntaxException6, (java.lang.Throwable) searchQuerySyntaxException10);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException6.getSuppressed();
        java.lang.Integer int14 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException6);
        int int15 = throwableRankList0.size();
        java.util.List<java.lang.Throwable> throwableList17 = throwableRankList0.getNFirstElements((int) (short) 1);
        java.util.List<java.lang.Integer> intList19 = throwableRankList0.getNFirstElementCounts((int) (short) -1);
        throwableRankList0.clear();
        java.util.List<java.lang.Throwable> throwableList21 = throwableRankList0.getOrder();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(throwableList17);
        org.junit.Assert.assertNotNull(intList19);
        org.junit.Assert.assertNotNull(throwableList21);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getDateXPath();
        java.lang.String str3 = feedType0.getNameXPath();
        java.lang.String str4 = feedType0.getEntryXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./pubDate" + "'", str2, "./pubDate");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/rss/channel/title" + "'", str3, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/item" + "'", str4, "/rss/channel/item");
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        java.lang.Throwable[] throwableArray2 = searchQuerySyntaxException1.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException3 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList5 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable6 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException7 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable6);
        java.lang.Throwable[] throwableArray8 = searchQuerySyntaxException7.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException9 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException7);
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        throwableRankList5.replaceItem((java.lang.Throwable) searchQuerySyntaxException7, (java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException15 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException15);
        searchQuerySyntaxException4.addSuppressed((java.lang.Throwable) searchIndexNotAvailableException16);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException18 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException19 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException4);
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        net.sourceforge.atunes.model.IFontBean iFontBean0 = null;
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings(iFontBean0, true, true);
        fontSettings3.setUseFontSmoothing(true);
        fontSettings3.setUseFontSmoothingSettingsFromOs(true);
        net.sourceforge.atunes.model.IFontBean iFontBean8 = null;
        fontSettings3.setFont(iFontBean8);
        boolean boolean10 = fontSettings3.isUseFontSmoothingSettingsFromOs();
        net.sourceforge.atunes.model.IFontBean iFontBean11 = null;
        fontSettings3.setFont(iFontBean11);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList19.getOrder();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList31 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException33);
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        throwableRankList31.replaceItem((java.lang.Throwable) searchQuerySyntaxException33, (java.lang.Throwable) searchQuerySyntaxException37);
        searchQuerySyntaxException30.addSuppressed((java.lang.Throwable) searchQuerySyntaxException37);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException42 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Integer int43 = throwableRankList19.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Integer int44 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.util.List<java.lang.Throwable> throwableList46 = throwableRankList0.getNFirstElements(0);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(throwableList46);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setSkin("");
        lookAndFeelBean0.setSkin("./author");
        java.lang.String str8 = lookAndFeelBean0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str8, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute7 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean8 = columnBean0.equals((java.lang.Object) textTagAttribute7);
        columnBean0.setVisible(true);
        columnBean0.setOrder((int) (short) 100);
        columnBean0.setOrder(100);
        columnBean0.setVisible(false);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + textTagAttribute7 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute7.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getNameXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        java.lang.String str6 = feedType0.getAuthorXPath();
        java.lang.String str7 = feedType0.getAuthorXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "/rss/channel/title" + "'", str4, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/title" + "'", str5, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./author" + "'", str6, "./author");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./author" + "'", str7, "./author");
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        net.sourceforge.atunes.model.IFontBean iFontBean0 = null;
        net.sourceforge.atunes.model.FontSettings fontSettings3 = new net.sourceforge.atunes.model.FontSettings(iFontBean0, true, false);
        net.sourceforge.atunes.model.IFontBean iFontBean4 = null;
        fontSettings3.setFont(iFontBean4);
        net.sourceforge.atunes.model.IFontBean iFontBean6 = null;
        fontSettings3.setFont(iFontBean6);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getNameXPath();
        java.lang.String str3 = feedType0.getDescriptionXPath();
        java.lang.String str4 = feedType0.getTypeXPath();
        java.lang.String str5 = feedType0.getEntryXPath();
        java.lang.String str6 = feedType0.getDescriptionXPath();
        java.lang.String str7 = feedType0.getNameXPath();
        java.lang.String str8 = feedType0.getUrlXPath();
        java.lang.String str9 = feedType0.getEntryXPath();
        java.lang.String str10 = feedType0.getDurationXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "./enclosure/@url" + "'", str1, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "/rss/channel/title" + "'", str2, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./description" + "'", str3, "./description");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@type" + "'", str4, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/item" + "'", str5, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "./description" + "'", str6, "./description");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/rss/channel/title" + "'", str7, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "./enclosure/@url" + "'", str8, "./enclosure/@url");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/rss/channel/item" + "'", str9, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./duration" + "'", str10, "./duration");
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType11 = applicationVersion9.getVersionType();
        java.lang.String str12 = applicationVersion9.getDownloadURL();
        java.lang.String str13 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str14 = applicationVersion9.getDownloadURL();
        java.lang.String str15 = applicationVersion9.getName();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertTrue("'" + versionType11 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType11.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./description" + "'", str12, "./description");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "./pubDate" + "'", str13, "./pubDate");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./description" + "'", str14, "./description");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "mpc" + "'", str15, "mpc");
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList9 = cDMetadata0.getArtistNames();
        cDMetadata0.setGenre("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        cDMetadata0.setAlbumArtist("./updated");
        cDMetadata0.setYear(2);
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        java.util.List<java.lang.Integer> intList24 = throwableRankList0.getNFirstElementCounts((int) (byte) 1);
        java.util.List<java.lang.Throwable> throwableList26 = throwableRankList0.getNFirstElements(0);
        java.util.List<java.lang.Integer> intList28 = throwableRankList0.getNFirstElementCounts((int) 'a');
        throwableRankList0.clear();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(intList24);
        org.junit.Assert.assertNotNull(throwableList26);
        org.junit.Assert.assertNotNull(intList28);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState2 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean3 = columnBean0.equals((java.lang.Object) submissionState2);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean0.setSort(columnSort6);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        java.lang.String str21 = applicationVersion17.getChanges();
        boolean boolean22 = columnBean0.equals((java.lang.Object) str21);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + submissionState2 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState2.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + columnSort6 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort6.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "./title" + "'", str21, "./title");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType8 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion13 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType8, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str14 = applicationVersion13.getDate();
        java.lang.String str15 = applicationVersion13.toShortString();
        int int16 = applicationVersion13.getMajorNumber();
        int int17 = applicationVersion13.getMinorNumber();
        java.lang.String str18 = applicationVersion13.getName();
        java.lang.String str19 = applicationVersion13.getChanges();
        boolean boolean20 = columnBean0.equals((java.lang.Object) applicationVersion13);
        java.lang.String str21 = applicationVersion13.toString();
        java.lang.String str22 = applicationVersion13.getDownloadURL();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType8 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType8.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "./title" + "'", str19, "./title");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "1.0.0 mpc " + "'", str21, "1.0.0 mpc ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "./description" + "'", str22, "./description");
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        net.sourceforge.atunes.model.LocalAudioObjectFormat localAudioObjectFormat0 = net.sourceforge.atunes.model.LocalAudioObjectFormat.FLAC;
        java.lang.String str1 = localAudioObjectFormat0.getExtension();
        java.lang.String str2 = localAudioObjectFormat0.getExtension();
        java.lang.String str3 = localAudioObjectFormat0.getExtension();
        java.lang.String str4 = localAudioObjectFormat0.getExtension();
        java.lang.String str5 = localAudioObjectFormat0.getExtension();
        org.junit.Assert.assertTrue("'" + localAudioObjectFormat0 + "' != '" + net.sourceforge.atunes.model.LocalAudioObjectFormat.FLAC + "'", localAudioObjectFormat0.equals(net.sourceforge.atunes.model.LocalAudioObjectFormat.FLAC));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "flac" + "'", str1, "flac");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "flac" + "'", str2, "flac");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "flac" + "'", str3, "flac");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "flac" + "'", str4, "flac");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "flac" + "'", str5, "flac");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.RSS;
        java.lang.String str1 = feedType0.getEntryXPath();
        java.lang.String str2 = feedType0.getTypeXPath();
        java.lang.String str3 = feedType0.getTypeXPath();
        java.lang.String str4 = feedType0.getDescriptionXPath();
        java.lang.String str5 = feedType0.getNameXPath();
        java.lang.String str6 = feedType0.getNameXPath();
        java.lang.String str7 = feedType0.getTitleXPath();
        java.lang.String str8 = feedType0.getNameXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.RSS + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.RSS));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "/rss/channel/item" + "'", str1, "/rss/channel/item");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./enclosure/@type" + "'", str2, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "./enclosure/@type" + "'", str3, "./enclosure/@type");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./description" + "'", str4, "./description");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/rss/channel/title" + "'", str5, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/rss/channel/title" + "'", str6, "/rss/channel/title");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "./title" + "'", str7, "./title");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/rss/channel/title" + "'", str8, "/rss/channel/title");
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        lookAndFeelBean0.setName("./summary");
        java.lang.String str3 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("./summary");
        lookAndFeelBean0.setSkin("10.52.35  ");
        lookAndFeelBean0.setName("/feed/title");
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setSkin("flac");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList2 = throwableRankList0.getNFirstElements((int) (short) 100);
        java.util.List<java.lang.Throwable> throwableList3 = throwableRankList0.getOrder();
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList4 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList6 = throwableRankList4.getNFirstElements((int) (short) 10);
        throwableRankList4.clear();
        java.util.List<java.lang.Integer> intList9 = throwableRankList4.getNFirstElementCounts(0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList10 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable11 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable11);
        java.lang.Throwable[] throwableArray13 = searchQuerySyntaxException12.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException14 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException12);
        java.lang.Throwable throwable15 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException16 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable15);
        java.lang.Throwable[] throwableArray17 = searchQuerySyntaxException16.getSuppressed();
        throwableRankList10.replaceItem((java.lang.Throwable) searchQuerySyntaxException12, (java.lang.Throwable) searchQuerySyntaxException16);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException19 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException16);
        java.lang.Integer int20 = throwableRankList4.getCount((java.lang.Throwable) searchQuerySyntaxException19);
        java.lang.Throwable throwable21 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable21);
        java.lang.Throwable[] throwableArray23 = searchQuerySyntaxException22.getSuppressed();
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException24 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException22);
        java.lang.Integer int25 = throwableRankList4.getCount((java.lang.Throwable) searchQuerySyntaxException24);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException24);
        java.lang.Integer int27 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException26);
        int int28 = throwableRankList0.size();
        org.junit.Assert.assertNotNull(throwableList2);
        org.junit.Assert.assertNotNull(throwableList3);
        org.junit.Assert.assertNotNull(throwableList6);
        org.junit.Assert.assertNotNull(intList9);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        columnBean0.setOrder((int) (short) 0);
        columnBean0.setVisible(false);
        boolean boolean5 = columnBean0.isVisible();
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(columnSort6);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        net.sourceforge.atunes.model.CDMetadata cDMetadata1 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata1.setAlbumArtist("");
        boolean boolean4 = fontSettings0.equals((java.lang.Object) cDMetadata1);
        fontSettings0.setUseFontSmoothingSettingsFromOs(false);
        boolean boolean7 = fontSettings0.isUseFontSmoothing();
        boolean boolean8 = fontSettings0.isUseFontSmoothing();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        int int9 = columnBean0.getOrder();
        boolean boolean11 = columnBean0.equals((java.lang.Object) (byte) 10);
        columnBean0.setVisible(false);
        int int14 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        java.lang.String str10 = cDMetadata0.getTitle((int) (byte) 100);
        cDMetadata0.setYear((int) '4');
        cDMetadata0.setAlbumArtist("mpc");
        cDMetadata0.setGenre("/feed/title");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType19 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion24 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType19, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str25 = applicationVersion24.getDate();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType26 = applicationVersion24.getVersionType();
        java.lang.String str27 = applicationVersion24.getDate();
        int int28 = applicationVersion9.compareTo(applicationVersion24);
        java.lang.String str29 = applicationVersion9.getDownloadURL();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + versionType19 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType19.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "./title" + "'", str25, "./title");
        org.junit.Assert.assertTrue("'" + versionType26 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType26.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "./title" + "'", str27, "./title");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./description" + "'", str29, "./description");
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./enclosure/@url");
        lookAndFeelBean0.setSkin("hi!");
        lookAndFeelBean0.setSkin("./author");
        java.lang.String str8 = lookAndFeelBean0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Throwable throwable19 = null;
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        throwableRankList0.replaceItem(throwable19, (java.lang.Throwable) searchQuerySyntaxException21);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList23 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException27 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException25);
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        throwableRankList23.replaceItem((java.lang.Throwable) searchQuerySyntaxException25, (java.lang.Throwable) searchQuerySyntaxException29);
        java.util.List<java.lang.Throwable> throwableList32 = throwableRankList23.getOrder();
        java.lang.Throwable throwable33 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException34 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable33);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList35 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException39 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException37);
        java.lang.Throwable throwable40 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable40);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException41.getSuppressed();
        throwableRankList35.replaceItem((java.lang.Throwable) searchQuerySyntaxException37, (java.lang.Throwable) searchQuerySyntaxException41);
        searchQuerySyntaxException34.addSuppressed((java.lang.Throwable) searchQuerySyntaxException41);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException45 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException34);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException46 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException34);
        java.lang.Integer int47 = throwableRankList23.getCount((java.lang.Throwable) searchIndexNotAvailableException46);
        throwableRankList0.addItem((java.lang.Throwable) searchIndexNotAvailableException46);
        java.lang.String str49 = searchIndexNotAvailableException46.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableList32);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str49, "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str4 = cDMetadata0.getTitle((int) (byte) -1);
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str8 = cDMetadata5.getGenre();
        int int9 = cDMetadata5.getYear();
        int int10 = cDMetadata5.getYear();
        net.sourceforge.atunes.model.CDMetadata cDMetadata11 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str12 = cDMetadata11.getGenre();
        net.sourceforge.atunes.model.CDMetadata cDMetadata13 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata13.setAlbumArtist("");
        java.lang.String str16 = cDMetadata13.getGenre();
        java.lang.String[] strArray18 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        cDMetadata13.setTrackNames((java.util.List<java.lang.String>) strList19);
        cDMetadata11.setComposerNames((java.util.List<java.lang.String>) strList19);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList19);
        net.sourceforge.atunes.model.CDMetadata cDMetadata24 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str25 = cDMetadata24.getGenre();
        java.util.List<java.lang.String> strList26 = cDMetadata24.getComposerNames();
        java.lang.String str27 = cDMetadata24.getAlbum();
        java.util.List<java.lang.Integer> intList28 = cDMetadata24.getTracks();
        int int29 = cDMetadata24.getDisc();
        java.lang.String[] strArray37 = new java.lang.String[] { "net.sourceforge.atunes.model.InconsistentRepositoryException", "./title", "1.0.0 ", "./title", "./duration", "mpc", "net.sourceforge.atunes.model.InconsistentRepositoryException" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        cDMetadata24.setArtistNames((java.util.List<java.lang.String>) strList38);
        cDMetadata5.setArtistNames((java.util.List<java.lang.String>) strList38);
        cDMetadata0.setComposerNames((java.util.List<java.lang.String>) strList38);
        cDMetadata0.setDisc((int) (byte) 1);
        java.util.List<java.lang.String> strList45 = cDMetadata0.getTrackNames();
        java.lang.Integer[] intArray51 = new java.lang.Integer[] { 120, 2, 2, 0, 120 };
        java.util.ArrayList<java.lang.Integer> intList52 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
        cDMetadata0.setTracks((java.util.List<java.lang.Integer>) intList52);
        cDMetadata0.setAlbumArtist("SOCKS_PROXY");
        cDMetadata0.setGenre("flac");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(intList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ColumnSort columnSort8 = columnBean0.getSort();
        columnBean0.setWidth((int) (byte) 10);
        columnBean0.setOrder((-1));
        net.sourceforge.atunes.model.ColumnBean columnBean13 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean14 = columnBean13.isVisible();
        net.sourceforge.atunes.model.ColumnBean columnBean15 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean16 = columnBean15.isVisible();
        columnBean15.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort19 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean15.setSort(columnSort19);
        net.sourceforge.atunes.model.ColumnBean columnBean21 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean22 = columnBean21.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState23 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean24 = columnBean21.equals((java.lang.Object) submissionState23);
        columnBean21.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort27 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean21.setSort(columnSort27);
        columnBean15.setSort(columnSort27);
        columnBean13.setSort(columnSort27);
        columnBean0.setSort(columnSort27);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + columnSort19 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort19.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + submissionState23 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState23.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + columnSort27 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort27.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        net.sourceforge.atunes.model.RankList<java.util.Collection<java.lang.String>> strCollectionRankList0 = new net.sourceforge.atunes.model.RankList<java.util.Collection<java.lang.String>>();
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getDisc();
        cDMetadata0.setAlbumArtist("10.52.35  ");
        java.lang.String str21 = cDMetadata0.getGenre();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        columnBean0.setWidth(0);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        java.lang.String str20 = applicationVersion17.getChanges();
        boolean boolean21 = columnBean0.equals((java.lang.Object) applicationVersion17);
        net.sourceforge.atunes.model.ColumnBean columnBean22 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean23 = columnBean22.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState24 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean25 = columnBean22.equals((java.lang.Object) submissionState24);
        columnBean22.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort28 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean22.setSort(columnSort28);
        columnBean0.setSort(columnSort28);
        boolean boolean31 = columnBean0.isVisible();
        int int32 = columnBean0.getWidth();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "./title" + "'", str20, "./title");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + submissionState24 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState24.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + columnSort28 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort28.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException1 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        net.sourceforge.atunes.model.InconsistentRepositoryException inconsistentRepositoryException2 = new net.sourceforge.atunes.model.InconsistentRepositoryException();
        throwableRankList0.replaceItem((java.lang.Throwable) inconsistentRepositoryException1, (java.lang.Throwable) inconsistentRepositoryException2);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) inconsistentRepositoryException2);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException5 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) inconsistentRepositoryException2);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        java.lang.Throwable throwable0 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException1 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable0);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList2 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable3 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException4 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable3);
        java.lang.Throwable[] throwableArray5 = searchQuerySyntaxException4.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException6 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException4);
        java.lang.Throwable throwable7 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException8 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable7);
        java.lang.Throwable[] throwableArray9 = searchQuerySyntaxException8.getSuppressed();
        throwableRankList2.replaceItem((java.lang.Throwable) searchQuerySyntaxException4, (java.lang.Throwable) searchQuerySyntaxException8);
        searchQuerySyntaxException1.addSuppressed((java.lang.Throwable) searchQuerySyntaxException8);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException12 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException1);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException13 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException12);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException14 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException13);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException17 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException16);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion17 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType12, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str18 = applicationVersion17.getDate();
        java.lang.String str19 = applicationVersion17.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType20 = applicationVersion17.getVersionType();
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion25 = new net.sourceforge.atunes.model.ApplicationVersion("1.0.0 ", (int) (short) 10, (int) '4', (int) '#', versionType20, "", "./enclosure/@url", "SOCKS_PROXY", "./enclosure/@url");
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion30 = new net.sourceforge.atunes.model.ApplicationVersion("./description", 0, (int) (short) 10, 10, versionType20, "/feed/entry", "./author", "mac", "");
        int int31 = applicationVersion30.getMajorNumber();
        java.lang.String str32 = applicationVersion30.toShortString();
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "./title" + "'", str18, "./title");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "1.0.0 " + "'", str19, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType20 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType20.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0.10.10 " + "'", str32, "0.10.10 ");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata5 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata5.setAlbumArtist("");
        java.lang.String str9 = cDMetadata5.getTitle((int) (byte) -1);
        java.lang.String[] strArray11 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        cDMetadata5.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList12);
        cDMetadata0.setYear((int) (short) 1);
        int int18 = cDMetadata0.getYear();
        java.lang.String str19 = cDMetadata0.getGenre();
        cDMetadata0.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata22 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata22.setAlbumArtist("");
        java.lang.String str25 = cDMetadata22.getGenre();
        java.lang.String[] strArray27 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        cDMetadata22.setTrackNames((java.util.List<java.lang.String>) strList28);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList28);
        int int32 = cDMetadata0.getDisc();
        int int33 = cDMetadata0.getYear();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType12 = applicationVersion9.getVersionType();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType12 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType12.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String str4 = cDMetadata0.getAlbum();
        java.lang.String str6 = cDMetadata0.getTitle(150);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.util.List<java.lang.Throwable> throwableList21 = throwableRankList19.getNFirstElements((int) (short) 10);
        throwableRankList19.clear();
        int int23 = throwableRankList19.size();
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList26 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable27 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException28 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable27);
        java.lang.Throwable[] throwableArray29 = searchQuerySyntaxException28.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException30 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException28);
        java.lang.Throwable throwable31 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException32 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable31);
        java.lang.Throwable[] throwableArray33 = searchQuerySyntaxException32.getSuppressed();
        throwableRankList26.replaceItem((java.lang.Throwable) searchQuerySyntaxException28, (java.lang.Throwable) searchQuerySyntaxException32);
        searchQuerySyntaxException25.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Integer int36 = throwableRankList19.getCount((java.lang.Throwable) searchQuerySyntaxException32);
        searchQuerySyntaxException15.addSuppressed((java.lang.Throwable) searchQuerySyntaxException32);
        java.lang.Throwable throwable38 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException39 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable38);
        java.lang.Throwable[] throwableArray40 = searchQuerySyntaxException39.getSuppressed();
        searchQuerySyntaxException32.addSuppressed((java.lang.Throwable) searchQuerySyntaxException39);
        java.lang.Throwable[] throwableArray42 = searchQuerySyntaxException32.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableList21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray42);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList4 = cDMetadata0.getTrackNames();
        java.lang.String str5 = cDMetadata0.getAlbum();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        cDMetadata0.setDisc(1);
        int int9 = cDMetadata0.getDisc();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        net.sourceforge.atunes.model.FontSettings fontSettings0 = new net.sourceforge.atunes.model.FontSettings();
        fontSettings0.setUseFontSmoothing(false);
        fontSettings0.setUseFontSmoothing(false);
        net.sourceforge.atunes.model.IFontBean iFontBean5 = null;
        fontSettings0.setFont(iFontBean5);
        net.sourceforge.atunes.model.IFontBean iFontBean7 = fontSettings0.getFont();
        boolean boolean8 = fontSettings0.isUseFontSmoothingSettingsFromOs();
        fontSettings0.setUseFontSmoothing(true);
        org.junit.Assert.assertNull(iFontBean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        net.sourceforge.atunes.model.ColumnBean columnBean0 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean1 = columnBean0.isVisible();
        columnBean0.setOrder((int) (byte) -1);
        columnBean0.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort6 = columnBean0.getSort();
        net.sourceforge.atunes.model.TextTagAttribute textTagAttribute7 = net.sourceforge.atunes.model.TextTagAttribute.COMPOSER;
        boolean boolean8 = columnBean0.equals((java.lang.Object) textTagAttribute7);
        columnBean0.setOrder(10);
        columnBean0.setOrder((int) ' ');
        net.sourceforge.atunes.model.ColumnBean columnBean13 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean14 = columnBean13.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState15 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean16 = columnBean13.equals((java.lang.Object) submissionState15);
        columnBean13.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort19 = columnBean13.getSort();
        net.sourceforge.atunes.model.CDMetadata cDMetadata20 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata20.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList23 = cDMetadata20.getTracks();
        cDMetadata20.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList26 = cDMetadata20.getTrackNames();
        cDMetadata20.setAlbum("/rss/channel/item");
        java.util.List<java.lang.String> strList29 = cDMetadata20.getArtistNames();
        net.sourceforge.atunes.model.CDMetadata cDMetadata30 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str31 = cDMetadata30.getGenre();
        java.util.List<java.lang.String> strList32 = cDMetadata30.getComposerNames();
        java.lang.String str33 = cDMetadata30.getAlbum();
        java.util.List<java.lang.Integer> intList34 = cDMetadata30.getTracks();
        net.sourceforge.atunes.model.CDMetadata cDMetadata35 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata35.setAlbumArtist("");
        java.lang.String str39 = cDMetadata35.getTitle((int) (byte) -1);
        java.lang.String[] strArray41 = new java.lang.String[] { "./title" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        cDMetadata35.setTrackNames((java.util.List<java.lang.String>) strList42);
        cDMetadata30.setTrackNames((java.util.List<java.lang.String>) strList42);
        cDMetadata30.setYear((int) (short) 1);
        int int48 = cDMetadata30.getYear();
        java.lang.String str49 = cDMetadata30.getGenre();
        cDMetadata30.setYear((int) (short) 10);
        net.sourceforge.atunes.model.CDMetadata cDMetadata52 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata52.setAlbumArtist("");
        java.lang.String str55 = cDMetadata52.getGenre();
        java.lang.String[] strArray57 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        cDMetadata52.setTrackNames((java.util.List<java.lang.String>) strList58);
        cDMetadata30.setTrackNames((java.util.List<java.lang.String>) strList58);
        cDMetadata20.setArtistNames((java.util.List<java.lang.String>) strList58);
        boolean boolean63 = columnBean13.equals((java.lang.Object) strList58);
        boolean boolean64 = columnBean0.equals((java.lang.Object) boolean63);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(columnSort6);
        org.junit.Assert.assertTrue("'" + textTagAttribute7 + "' != '" + net.sourceforge.atunes.model.TextTagAttribute.COMPOSER + "'", textTagAttribute7.equals(net.sourceforge.atunes.model.TextTagAttribute.COMPOSER));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + submissionState15 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState15.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(columnSort19);
        org.junit.Assert.assertNull(intList23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(intList34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.toShortString();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str17 = applicationVersion9.toShortString();
        java.lang.String str18 = applicationVersion9.getName();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType23 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion28 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType23, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str29 = applicationVersion28.getDate();
        java.lang.String str30 = applicationVersion28.toShortString();
        int int31 = applicationVersion28.getMajorNumber();
        java.lang.String str32 = applicationVersion28.toShortString();
        net.sourceforge.atunes.model.ArtistViewMode artistViewMode33 = net.sourceforge.atunes.model.ArtistViewMode.BOTH;
        boolean boolean34 = applicationVersion28.equals((java.lang.Object) artistViewMode33);
        int int35 = applicationVersion28.getMajorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType40 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion45 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType40, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str46 = applicationVersion45.getDate();
        java.lang.String str47 = applicationVersion45.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType48 = applicationVersion45.getVersionType();
        int int49 = applicationVersion45.getMinorNumber();
        int int50 = applicationVersion28.compareTo(applicationVersion45);
        int int51 = applicationVersion9.compareTo(applicationVersion45);
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType56 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion61 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType56, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str62 = applicationVersion61.getDate();
        java.lang.String str63 = applicationVersion61.toShortString();
        java.lang.String str64 = applicationVersion61.toShortString();
        java.lang.String str65 = applicationVersion61.getDownloadURL();
        java.lang.String str66 = applicationVersion61.getDate();
        int int67 = applicationVersion61.getMajorNumber();
        int int68 = applicationVersion61.getMinorNumber();
        java.lang.String str69 = applicationVersion61.getDirectDownloadURL();
        int int70 = applicationVersion9.compareTo(applicationVersion61);
        java.lang.String str71 = applicationVersion61.toShortString();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1.0.0 " + "'", str17, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertTrue("'" + versionType23 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType23.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./title" + "'", str29, "./title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1.0.0 " + "'", str30, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0.0 " + "'", str32, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + artistViewMode33 + "' != '" + net.sourceforge.atunes.model.ArtistViewMode.BOTH + "'", artistViewMode33.equals(net.sourceforge.atunes.model.ArtistViewMode.BOTH));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + versionType40 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType40.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "./title" + "'", str46, "./title");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1.0.0 " + "'", str47, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType48 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType48.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + versionType56 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType56.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "./title" + "'", str62, "./title");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "1.0.0 " + "'", str63, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "1.0.0 " + "'", str64, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "./description" + "'", str65, "./description");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "./title" + "'", str66, "./title");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "./pubDate" + "'", str69, "./pubDate");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "1.0.0 " + "'", str71, "1.0.0 ");
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList9 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        java.lang.Throwable[] throwableArray12 = searchQuerySyntaxException11.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException13 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Throwable throwable14 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException15 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable14);
        java.lang.Throwable[] throwableArray16 = searchQuerySyntaxException15.getSuppressed();
        throwableRankList9.replaceItem((java.lang.Throwable) searchQuerySyntaxException11, (java.lang.Throwable) searchQuerySyntaxException15);
        java.lang.Integer int18 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException15);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList19 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable20 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException21 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable20);
        java.lang.Throwable[] throwableArray22 = searchQuerySyntaxException21.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException21);
        java.lang.Throwable throwable24 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException25 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable24);
        java.lang.Throwable[] throwableArray26 = searchQuerySyntaxException25.getSuppressed();
        throwableRankList19.replaceItem((java.lang.Throwable) searchQuerySyntaxException21, (java.lang.Throwable) searchQuerySyntaxException25);
        java.util.List<java.lang.Throwable> throwableList28 = throwableRankList19.getOrder();
        java.lang.Throwable throwable29 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException30 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable29);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList31 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException35 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException33);
        java.lang.Throwable throwable36 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable36);
        java.lang.Throwable[] throwableArray38 = searchQuerySyntaxException37.getSuppressed();
        throwableRankList31.replaceItem((java.lang.Throwable) searchQuerySyntaxException33, (java.lang.Throwable) searchQuerySyntaxException37);
        searchQuerySyntaxException30.addSuppressed((java.lang.Throwable) searchQuerySyntaxException37);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException41 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException30);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException42 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException30);
        java.lang.Integer int43 = throwableRankList19.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        java.lang.Integer int44 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException42);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException45 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException42);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException46 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchIndexNotAvailableException45);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchIndexNotAvailableException46);
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableList28);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList0 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable1 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException2 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable1);
        java.lang.Throwable[] throwableArray3 = searchQuerySyntaxException2.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException4 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException2);
        java.lang.Throwable throwable5 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException6 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable5);
        java.lang.Throwable[] throwableArray7 = searchQuerySyntaxException6.getSuppressed();
        throwableRankList0.replaceItem((java.lang.Throwable) searchQuerySyntaxException2, (java.lang.Throwable) searchQuerySyntaxException6);
        java.util.List<java.lang.Throwable> throwableList9 = throwableRankList0.getOrder();
        java.lang.Throwable throwable10 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException11 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable10);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList12 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable13 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException14 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable13);
        java.lang.Throwable[] throwableArray15 = searchQuerySyntaxException14.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException16 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException14);
        java.lang.Throwable throwable17 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException18 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable17);
        java.lang.Throwable[] throwableArray19 = searchQuerySyntaxException18.getSuppressed();
        throwableRankList12.replaceItem((java.lang.Throwable) searchQuerySyntaxException14, (java.lang.Throwable) searchQuerySyntaxException18);
        searchQuerySyntaxException11.addSuppressed((java.lang.Throwable) searchQuerySyntaxException18);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException22 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException11);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException23 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException11);
        java.lang.Integer int24 = throwableRankList0.getCount((java.lang.Throwable) searchIndexNotAvailableException23);
        java.lang.Throwable throwable25 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException26 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable25);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList27 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable28 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException29 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable28);
        java.lang.Throwable[] throwableArray30 = searchQuerySyntaxException29.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException31 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException29);
        java.lang.Throwable throwable32 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException33 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable32);
        java.lang.Throwable[] throwableArray34 = searchQuerySyntaxException33.getSuppressed();
        throwableRankList27.replaceItem((java.lang.Throwable) searchQuerySyntaxException29, (java.lang.Throwable) searchQuerySyntaxException33);
        searchQuerySyntaxException26.addSuppressed((java.lang.Throwable) searchQuerySyntaxException33);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException37 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException26);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException38 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException26);
        java.lang.Throwable throwable39 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException40 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable39);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList41 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable42 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException43 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable42);
        java.lang.Throwable[] throwableArray44 = searchQuerySyntaxException43.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException45 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException43);
        java.lang.Throwable throwable46 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException47 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable46);
        java.lang.Throwable[] throwableArray48 = searchQuerySyntaxException47.getSuppressed();
        throwableRankList41.replaceItem((java.lang.Throwable) searchQuerySyntaxException43, (java.lang.Throwable) searchQuerySyntaxException47);
        searchQuerySyntaxException40.addSuppressed((java.lang.Throwable) searchQuerySyntaxException47);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException51 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException40);
        java.lang.Throwable throwable52 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException53 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable52);
        java.lang.Throwable[] throwableArray54 = searchQuerySyntaxException53.getSuppressed();
        searchQuerySyntaxException40.addSuppressed((java.lang.Throwable) searchQuerySyntaxException53);
        searchIndexNotAvailableException38.addSuppressed((java.lang.Throwable) searchQuerySyntaxException53);
        java.lang.Throwable throwable57 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException58 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable57);
        net.sourceforge.atunes.model.RankList<java.lang.Throwable> throwableRankList59 = new net.sourceforge.atunes.model.RankList<java.lang.Throwable>();
        java.lang.Throwable throwable60 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException61 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable60);
        java.lang.Throwable[] throwableArray62 = searchQuerySyntaxException61.getSuppressed();
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException63 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException61);
        java.lang.Throwable throwable64 = null;
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException65 = new net.sourceforge.atunes.model.SearchQuerySyntaxException(throwable64);
        java.lang.Throwable[] throwableArray66 = searchQuerySyntaxException65.getSuppressed();
        throwableRankList59.replaceItem((java.lang.Throwable) searchQuerySyntaxException61, (java.lang.Throwable) searchQuerySyntaxException65);
        searchQuerySyntaxException58.addSuppressed((java.lang.Throwable) searchQuerySyntaxException65);
        net.sourceforge.atunes.model.SearchQuerySyntaxException searchQuerySyntaxException69 = new net.sourceforge.atunes.model.SearchQuerySyntaxException((java.lang.Throwable) searchQuerySyntaxException58);
        net.sourceforge.atunes.model.SearchIndexNotAvailableException searchIndexNotAvailableException70 = new net.sourceforge.atunes.model.SearchIndexNotAvailableException((java.lang.Throwable) searchQuerySyntaxException58);
        searchQuerySyntaxException53.addSuppressed((java.lang.Throwable) searchQuerySyntaxException58);
        java.lang.Integer int72 = throwableRankList0.getCount((java.lang.Throwable) searchQuerySyntaxException58);
        throwableRankList0.clear();
        java.util.List<java.lang.Throwable> throwableList74 = throwableRankList0.getOrder();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableList9);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(throwableList74);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.util.List<java.lang.String> strList1 = cDMetadata0.getArtistNames();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getTrackNames();
        java.lang.String str3 = cDMetadata0.getAlbumArtist();
        int int4 = cDMetadata0.getDisc();
        cDMetadata0.setDisc(32);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        cDMetadata0.setGenre("wav");
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(intList4);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.util.List<java.lang.Integer> intList3 = cDMetadata0.getTracks();
        cDMetadata0.setAlbumArtist("/rss/channel/title");
        java.util.List<java.lang.String> strList6 = cDMetadata0.getTrackNames();
        java.lang.String str7 = cDMetadata0.getAlbumArtist();
        cDMetadata0.setYear((-1));
        java.util.List<java.lang.String> strList10 = cDMetadata0.getTrackNames();
        java.lang.String str11 = cDMetadata0.getAlbum();
        java.lang.String str12 = cDMetadata0.getAlbum();
        org.junit.Assert.assertNull(intList3);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/rss/channel/title" + "'", str7, "/rss/channel/title");
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        net.sourceforge.atunes.model.FeedType feedType0 = net.sourceforge.atunes.model.FeedType.ATOM;
        java.lang.String str1 = feedType0.getUrlXPath();
        java.lang.String str2 = feedType0.getTypeXPath();
        java.lang.String str3 = feedType0.getNameXPath();
        org.junit.Assert.assertTrue("'" + feedType0 + "' != '" + net.sourceforge.atunes.model.FeedType.ATOM + "'", feedType0.equals(net.sourceforge.atunes.model.FeedType.ATOM));
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "./link[@rel='enclosure']/@type" + "'", str2, "./link[@rel='enclosure']/@type");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "/feed/title" + "'", str3, "/feed/title");
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("./enclosure/@url");
        java.lang.String str4 = lookAndFeelBean0.getSkin();
        java.lang.String str5 = lookAndFeelBean0.getName();
        lookAndFeelBean0.setSkin("hi!");
        lookAndFeelBean0.setName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "./enclosure/@url" + "'", str4, "./enclosure/@url");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        int int12 = applicationVersion9.getMajorNumber();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getName();
        java.lang.String str15 = applicationVersion9.toShortString();
        java.lang.String str16 = applicationVersion9.getDirectDownloadURL();
        java.lang.String str17 = applicationVersion9.toShortString();
        java.lang.String str18 = applicationVersion9.getName();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType23 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion28 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType23, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str29 = applicationVersion28.getDate();
        java.lang.String str30 = applicationVersion28.toShortString();
        int int31 = applicationVersion28.getMajorNumber();
        java.lang.String str32 = applicationVersion28.toShortString();
        net.sourceforge.atunes.model.ArtistViewMode artistViewMode33 = net.sourceforge.atunes.model.ArtistViewMode.BOTH;
        boolean boolean34 = applicationVersion28.equals((java.lang.Object) artistViewMode33);
        int int35 = applicationVersion28.getMajorNumber();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType40 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion45 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType40, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str46 = applicationVersion45.getDate();
        java.lang.String str47 = applicationVersion45.toShortString();
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType48 = applicationVersion45.getVersionType();
        int int49 = applicationVersion45.getMinorNumber();
        int int50 = applicationVersion28.compareTo(applicationVersion45);
        int int51 = applicationVersion9.compareTo(applicationVersion45);
        net.sourceforge.atunes.model.ColumnBean columnBean52 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean53 = columnBean52.isVisible();
        net.sourceforge.atunes.model.ColumnBean columnBean54 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean55 = columnBean54.isVisible();
        columnBean54.setOrder((int) (byte) -1);
        net.sourceforge.atunes.model.ColumnSort columnSort58 = net.sourceforge.atunes.model.ColumnSort.DESCENDING;
        columnBean54.setSort(columnSort58);
        net.sourceforge.atunes.model.ColumnBean columnBean60 = new net.sourceforge.atunes.model.ColumnBean();
        boolean boolean61 = columnBean60.isVisible();
        net.sourceforge.atunes.model.SubmissionState submissionState62 = net.sourceforge.atunes.model.SubmissionState.PENDING;
        boolean boolean63 = columnBean60.equals((java.lang.Object) submissionState62);
        columnBean60.setVisible(false);
        net.sourceforge.atunes.model.ColumnSort columnSort66 = net.sourceforge.atunes.model.ColumnSort.ASCENDING;
        columnBean60.setSort(columnSort66);
        columnBean54.setSort(columnSort66);
        columnBean52.setSort(columnSort66);
        columnBean52.setWidth((-1));
        boolean boolean72 = applicationVersion45.equals((java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass73 = applicationVersion45.getClass();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "mpc" + "'", str14, "mpc");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "1.0.0 " + "'", str15, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./pubDate" + "'", str16, "./pubDate");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "1.0.0 " + "'", str17, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "mpc" + "'", str18, "mpc");
        org.junit.Assert.assertTrue("'" + versionType23 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType23.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "./title" + "'", str29, "./title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "1.0.0 " + "'", str30, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "1.0.0 " + "'", str32, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + artistViewMode33 + "' != '" + net.sourceforge.atunes.model.ArtistViewMode.BOTH + "'", artistViewMode33.equals(net.sourceforge.atunes.model.ArtistViewMode.BOTH));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + versionType40 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType40.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "./title" + "'", str46, "./title");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "1.0.0 " + "'", str47, "1.0.0 ");
        org.junit.Assert.assertTrue("'" + versionType48 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType48.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + columnSort58 + "' != '" + net.sourceforge.atunes.model.ColumnSort.DESCENDING + "'", columnSort58.equals(net.sourceforge.atunes.model.ColumnSort.DESCENDING));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + submissionState62 + "' != '" + net.sourceforge.atunes.model.SubmissionState.PENDING + "'", submissionState62.equals(net.sourceforge.atunes.model.SubmissionState.PENDING));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + columnSort66 + "' != '" + net.sourceforge.atunes.model.ColumnSort.ASCENDING + "'", columnSort66.equals(net.sourceforge.atunes.model.ColumnSort.ASCENDING));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        net.sourceforge.atunes.model.LookAndFeelBean lookAndFeelBean0 = new net.sourceforge.atunes.model.LookAndFeelBean();
        java.lang.String str1 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setName("net.sourceforge.atunes.model.SearchQuerySyntaxException");
        lookAndFeelBean0.setSkin("");
        java.lang.String str6 = lookAndFeelBean0.getSkin();
        lookAndFeelBean0.setSkin("mpc");
        java.lang.String str9 = lookAndFeelBean0.getSkin();
        java.lang.String str10 = lookAndFeelBean0.getName();
        lookAndFeelBean0.setSkin("net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
        java.lang.String str13 = lookAndFeelBean0.getSkin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "mpc" + "'", str9, "mpc");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str10, "net.sourceforge.atunes.model.SearchQuerySyntaxException");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException" + "'", str13, "net.sourceforge.atunes.model.SearchIndexNotAvailableException: net.sourceforge.atunes.model.SearchQuerySyntaxException");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata0.setAlbumArtist("");
        java.lang.String str3 = cDMetadata0.getGenre();
        java.lang.String[] strArray5 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        cDMetadata0.setTrackNames((java.util.List<java.lang.String>) strList6);
        cDMetadata0.setYear((int) (short) 10);
        cDMetadata0.setDisc(0);
        java.lang.String str13 = cDMetadata0.getGenre();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        net.sourceforge.atunes.model.ApplicationVersion.VersionType versionType4 = net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL;
        net.sourceforge.atunes.model.ApplicationVersion applicationVersion9 = new net.sourceforge.atunes.model.ApplicationVersion("./title", 1, (int) (short) 0, (int) (byte) 0, versionType4, "mpc", "./description", "./pubDate", "./title");
        java.lang.String str10 = applicationVersion9.getDate();
        java.lang.String str11 = applicationVersion9.toShortString();
        java.lang.String str12 = applicationVersion9.getChanges();
        int int13 = applicationVersion9.getMinorNumber();
        java.lang.String str14 = applicationVersion9.getChanges();
        int int15 = applicationVersion9.getRevisionNumber();
        java.lang.String str16 = applicationVersion9.getDate();
        org.junit.Assert.assertTrue("'" + versionType4 + "' != '" + net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL + "'", versionType4.equals(net.sourceforge.atunes.model.ApplicationVersion.VersionType.FINAL));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "./title" + "'", str10, "./title");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "1.0.0 " + "'", str11, "1.0.0 ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "./title" + "'", str12, "./title");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "./title" + "'", str14, "./title");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "./title" + "'", str16, "./title");
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        net.sourceforge.atunes.model.CDMetadata cDMetadata0 = new net.sourceforge.atunes.model.CDMetadata();
        java.lang.String str1 = cDMetadata0.getGenre();
        java.util.List<java.lang.String> strList2 = cDMetadata0.getComposerNames();
        java.lang.String str3 = cDMetadata0.getAlbum();
        java.util.List<java.lang.Integer> intList4 = cDMetadata0.getTracks();
        int int5 = cDMetadata0.getYear();
        java.util.List<java.lang.String> strList6 = cDMetadata0.getArtistNames();
        cDMetadata0.setDisc((int) (short) 100);
        net.sourceforge.atunes.model.CDMetadata cDMetadata9 = new net.sourceforge.atunes.model.CDMetadata();
        cDMetadata9.setAlbumArtist("");
        java.lang.String str12 = cDMetadata9.getGenre();
        java.lang.String[] strArray14 = new java.lang.String[] { "HTTP_PROXY" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        cDMetadata9.setTrackNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setArtistNames((java.util.List<java.lang.String>) strList15);
        cDMetadata0.setYear(150);
        java.util.List<java.lang.Integer> intList21 = cDMetadata0.getTracks();
        java.lang.String str22 = cDMetadata0.getAlbumArtist();
        int int23 = cDMetadata0.getDisc();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(intList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(intList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }
}

